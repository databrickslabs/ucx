{
  "absl-py": {
    "absl": []
  },
  "aiohttp": {
    "aiohttp": []
  },
  "aiosignal": {
    "aiosignal": []
  },
  "alembic": {
    "alembic": [],
    "alembic.command": [
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ]
  },
  "aniso8601": {
    "aniso8601": []
  },
  "annotated-types": {
    "annotated_types": [],
    "annotated_types.test_cases": []
  },
  "anyio": {
    "anyio": []
  },
  "appdirs": {
    "appdirs": []
  },
  "appnope": {
    "appnope": [],
    "appnope._dummy": [],
    "appnope._nope": []
  },
  "astor": {
    "astor": [],
    "astor.code_gen": [],
    "astor.codegen": [],
    "astor.file_util": [],
    "astor.node_util": [],
    "astor.op_util": [],
    "astor.rtrip": [],
    "astor.source_repr": [],
    "astor.string_repr": [],
    "astor.tree_walk": []
  },
  "astroid": {
    "astroid": []
  },
  "asttokens": {
    "asttokens": [],
    "asttokens.astroid_compat": [],
    "asttokens.asttokens": [],
    "asttokens.line_numbers": [],
    "asttokens.mark_tokens": [],
    "asttokens.util": [],
    "asttokens.version": []
  },
  "astunparse": {
    "astunparse": [],
    "astunparse.printer": [],
    "astunparse.unparser": []
  },
  "async-generator": {
    "async_generator": []
  },
  "async-timeout": {
    "async_timeout": []
  },
  "attrs": {
    "attr": []
  },
  "audioread": {
    "audioread": [],
    "audioread.base": [],
    "audioread.exceptions": [],
    "audioread.ffdec": [],
    "audioread.gstdec": [],
    "audioread.macca": [],
    "audioread.maddec": [],
    "audioread.rawread": [],
    "audioread.version": []
  },
  "azure-core": {
    "azure.core": [],
    "azure.core._enum_meta": [],
    "azure.core._match_conditions": [],
    "azure.core._pipeline_client": [],
    "azure.core._pipeline_client_async": [],
    "azure.core._version": [],
    "azure.core.async_paging": [],
    "azure.core.configuration": [],
    "azure.core.credentials": [],
    "azure.core.credentials_async": [],
    "azure.core.exceptions": [],
    "azure.core.messaging": [],
    "azure.core.paging": [],
    "azure.core.pipeline": [],
    "azure.core.pipeline._base": [],
    "azure.core.pipeline._base_async": [],
    "azure.core.pipeline._tools": [],
    "azure.core.pipeline._tools_async": [],
    "azure.core.pipeline.policies": [],
    "azure.core.pipeline.policies._authentication": [],
    "azure.core.pipeline.policies._authentication_async": [],
    "azure.core.pipeline.policies._base": [],
    "azure.core.pipeline.policies._base_async": [],
    "azure.core.pipeline.policies._custom_hook": [],
    "azure.core.pipeline.policies._distributed_tracing": [],
    "azure.core.pipeline.policies._redirect": [],
    "azure.core.pipeline.policies._redirect_async": [],
    "azure.core.pipeline.policies._retry": [],
    "azure.core.pipeline.policies._retry_async": [],
    "azure.core.pipeline.policies._sensitive_header_cleanup_policy": [],
    "azure.core.pipeline.policies._universal": [],
    "azure.core.pipeline.policies._utils": [],
    "azure.core.pipeline.transport": [],
    "azure.core.pipeline.transport._aiohttp": [],
    "azure.core.pipeline.transport._base": [],
    "azure.core.pipeline.transport._base_async": [],
    "azure.core.pipeline.transport._base_requests_async": [],
    "azure.core.pipeline.transport._bigger_block_size_http_adapters": [],
    "azure.core.pipeline.transport._requests_asyncio": [],
    "azure.core.pipeline.transport._requests_basic": [],
    "azure.core.pipeline.transport._requests_trio": [],
    "azure.core.polling": [],
    "azure.core.polling._async_poller": [],
    "azure.core.polling._poller": [],
    "azure.core.polling.async_base_polling": [],
    "azure.core.polling.base_polling": [],
    "azure.core.rest": [],
    "azure.core.rest._aiohttp": [],
    "azure.core.rest._helpers": [],
    "azure.core.rest._http_response_impl": [],
    "azure.core.rest._http_response_impl_async": [],
    "azure.core.rest._requests_asyncio": [],
    "azure.core.rest._requests_basic": [],
    "azure.core.rest._requests_trio": [],
    "azure.core.rest._rest_py3": [],
    "azure.core.serialization": [],
    "azure.core.settings": [],
    "azure.core.tracing": [],
    "azure.core.tracing._abstract_span": [],
    "azure.core.tracing.common": [],
    "azure.core.tracing.decorator": [],
    "azure.core.tracing.decorator_async": [],
    "azure.core.tracing.ext": [],
    "azure.core.utils": [],
    "azure.core.utils._connection_string_parser": [],
    "azure.core.utils._messaging_shared": [],
    "azure.core.utils._pipeline_transport_rest_shared": [],
    "azure.core.utils._pipeline_transport_rest_shared_async": [],
    "azure.core.utils._utils": []
  },
  "azure-cosmos": {
    "azure.cosmos": [],
    "azure.cosmos._auth_policy": [],
    "azure.cosmos._base": [],
    "azure.cosmos._constants": [],
    "azure.cosmos._cosmos_client_connection": [],
    "azure.cosmos._cosmos_http_logging_policy": [],
    "azure.cosmos._default_retry_policy": [],
    "azure.cosmos._endpoint_discovery_retry_policy": [],
    "azure.cosmos._execution_context": [],
    "azure.cosmos._execution_context.aggregators": [],
    "azure.cosmos._execution_context.aio": [],
    "azure.cosmos._execution_context.aio._queue_async_helper": [],
    "azure.cosmos._execution_context.aio.base_execution_context": [],
    "azure.cosmos._execution_context.aio.document_producer": [],
    "azure.cosmos._execution_context.aio.endpoint_component": [],
    "azure.cosmos._execution_context.aio.execution_dispatcher": [],
    "azure.cosmos._execution_context.aio.multi_execution_aggregator": [],
    "azure.cosmos._execution_context.base_execution_context": [],
    "azure.cosmos._execution_context.document_producer": [],
    "azure.cosmos._execution_context.endpoint_component": [],
    "azure.cosmos._execution_context.execution_dispatcher": [],
    "azure.cosmos._execution_context.multi_execution_aggregator": [],
    "azure.cosmos._execution_context.query_execution_info": [],
    "azure.cosmos._global_endpoint_manager": [],
    "azure.cosmos._gone_retry_policy": [],
    "azure.cosmos._location_cache": [],
    "azure.cosmos._partition": [],
    "azure.cosmos._query_iterable": [],
    "azure.cosmos._range": [],
    "azure.cosmos._range_partition_resolver": [],
    "azure.cosmos._request_object": [],
    "azure.cosmos._resource_throttle_retry_policy": [],
    "azure.cosmos._retry_options": [],
    "azure.cosmos._retry_utility": [],
    "azure.cosmos._routing": [],
    "azure.cosmos._routing.aio": [],
    "azure.cosmos._routing.aio.routing_map_provider": [],
    "azure.cosmos._routing.collection_routing_map": [],
    "azure.cosmos._routing.routing_map_provider": [],
    "azure.cosmos._routing.routing_range": [],
    "azure.cosmos._runtime_constants": [],
    "azure.cosmos._session": [],
    "azure.cosmos._session_retry_policy": [],
    "azure.cosmos._synchronized_request": [],
    "azure.cosmos._timeout_failover_retry_policy": [],
    "azure.cosmos._utils": [],
    "azure.cosmos._vector_session_token": [],
    "azure.cosmos._version": [],
    "azure.cosmos.aio": [],
    "azure.cosmos.aio._asynchronous_request": [],
    "azure.cosmos.aio._auth_policy_async": [],
    "azure.cosmos.aio._container": [],
    "azure.cosmos.aio._cosmos_client": [],
    "azure.cosmos.aio._cosmos_client_connection_async": [],
    "azure.cosmos.aio._database": [],
    "azure.cosmos.aio._global_endpoint_manager_async": [],
    "azure.cosmos.aio._query_iterable_async": [],
    "azure.cosmos.aio._retry_utility_async": [],
    "azure.cosmos.aio._scripts": [],
    "azure.cosmos.aio._user": [],
    "azure.cosmos.auth": [],
    "azure.cosmos.container": [],
    "azure.cosmos.cosmos_client": [],
    "azure.cosmos.database": [],
    "azure.cosmos.diagnostics": [],
    "azure.cosmos.documents": [],
    "azure.cosmos.errors": [],
    "azure.cosmos.exceptions": [],
    "azure.cosmos.http_constants": [],
    "azure.cosmos.offer": [],
    "azure.cosmos.partition_key": [],
    "azure.cosmos.permission": [],
    "azure.cosmos.scripts": [],
    "azure.cosmos.user": []
  },
  "azure-storage-blob": {
    "azure.storage.blob": [],
    "azure.storage.blob._blob_client": [],
    "azure.storage.blob._blob_service_client": [],
    "azure.storage.blob._container_client": [],
    "azure.storage.blob._deserialize": [],
    "azure.storage.blob._download": [],
    "azure.storage.blob._encryption": [],
    "azure.storage.blob._generated": [],
    "azure.storage.blob._generated._azure_blob_storage": [],
    "azure.storage.blob._generated._configuration": [],
    "azure.storage.blob._generated._patch": [],
    "azure.storage.blob._generated._serialization": [],
    "azure.storage.blob._generated._vendor": [],
    "azure.storage.blob._generated.aio": [],
    "azure.storage.blob._generated.aio._azure_blob_storage": [],
    "azure.storage.blob._generated.aio._configuration": [],
    "azure.storage.blob._generated.aio._patch": [],
    "azure.storage.blob._generated.aio.operations": [],
    "azure.storage.blob._generated.aio.operations._append_blob_operations": [],
    "azure.storage.blob._generated.aio.operations._blob_operations": [],
    "azure.storage.blob._generated.aio.operations._block_blob_operations": [],
    "azure.storage.blob._generated.aio.operations._container_operations": [],
    "azure.storage.blob._generated.aio.operations._page_blob_operations": [],
    "azure.storage.blob._generated.aio.operations._patch": [],
    "azure.storage.blob._generated.aio.operations._service_operations": [],
    "azure.storage.blob._generated.models": [],
    "azure.storage.blob._generated.models._azure_blob_storage_enums": [],
    "azure.storage.blob._generated.models._models_py3": [],
    "azure.storage.blob._generated.models._patch": [],
    "azure.storage.blob._generated.operations": [],
    "azure.storage.blob._generated.operations._append_blob_operations": [],
    "azure.storage.blob._generated.operations._blob_operations": [],
    "azure.storage.blob._generated.operations._block_blob_operations": [],
    "azure.storage.blob._generated.operations._container_operations": [],
    "azure.storage.blob._generated.operations._page_blob_operations": [],
    "azure.storage.blob._generated.operations._patch": [],
    "azure.storage.blob._generated.operations._service_operations": [],
    "azure.storage.blob._lease": [],
    "azure.storage.blob._list_blobs_helper": [],
    "azure.storage.blob._models": [],
    "azure.storage.blob._quick_query_helper": [],
    "azure.storage.blob._serialize": [],
    "azure.storage.blob._shared": [],
    "azure.storage.blob._shared.authentication": [],
    "azure.storage.blob._shared.avro": [],
    "azure.storage.blob._shared.avro.avro_io": [],
    "azure.storage.blob._shared.avro.avro_io_async": [],
    "azure.storage.blob._shared.avro.datafile": [],
    "azure.storage.blob._shared.avro.datafile_async": [],
    "azure.storage.blob._shared.avro.schema": [],
    "azure.storage.blob._shared.base_client": [],
    "azure.storage.blob._shared.base_client_async": [],
    "azure.storage.blob._shared.constants": [],
    "azure.storage.blob._shared.models": [],
    "azure.storage.blob._shared.parser": [],
    "azure.storage.blob._shared.policies": [],
    "azure.storage.blob._shared.policies_async": [],
    "azure.storage.blob._shared.request_handlers": [],
    "azure.storage.blob._shared.response_handlers": [],
    "azure.storage.blob._shared.shared_access_signature": [],
    "azure.storage.blob._shared.uploads": [],
    "azure.storage.blob._shared.uploads_async": [],
    "azure.storage.blob._shared_access_signature": [],
    "azure.storage.blob._upload_helpers": [],
    "azure.storage.blob._version": [],
    "azure.storage.blob.aio": [],
    "azure.storage.blob.aio._blob_client_async": [],
    "azure.storage.blob.aio._blob_service_client_async": [],
    "azure.storage.blob.aio._container_client_async": [],
    "azure.storage.blob.aio._download_async": [],
    "azure.storage.blob.aio._encryption_async": [],
    "azure.storage.blob.aio._lease_async": [],
    "azure.storage.blob.aio._list_blobs_helper": [],
    "azure.storage.blob.aio._models": [],
    "azure.storage.blob.aio._upload_helpers": []
  },
  "azure-storage-file-datalake": {
    "azure.storage.filedatalake": [],
    "azure.storage.filedatalake._data_lake_directory_client": [],
    "azure.storage.filedatalake._data_lake_file_client": [],
    "azure.storage.filedatalake._data_lake_lease": [],
    "azure.storage.filedatalake._data_lake_service_client": [],
    "azure.storage.filedatalake._deserialize": [],
    "azure.storage.filedatalake._download": [],
    "azure.storage.filedatalake._file_system_client": [],
    "azure.storage.filedatalake._generated": [],
    "azure.storage.filedatalake._generated._azure_data_lake_storage_restapi": [],
    "azure.storage.filedatalake._generated._configuration": [],
    "azure.storage.filedatalake._generated._patch": [],
    "azure.storage.filedatalake._generated._serialization": [],
    "azure.storage.filedatalake._generated._vendor": [],
    "azure.storage.filedatalake._generated.aio": [],
    "azure.storage.filedatalake._generated.aio._azure_data_lake_storage_restapi": [],
    "azure.storage.filedatalake._generated.aio._configuration": [],
    "azure.storage.filedatalake._generated.aio._patch": [],
    "azure.storage.filedatalake._generated.aio.operations": [],
    "azure.storage.filedatalake._generated.aio.operations._file_system_operations": [],
    "azure.storage.filedatalake._generated.aio.operations._patch": [],
    "azure.storage.filedatalake._generated.aio.operations._path_operations": [],
    "azure.storage.filedatalake._generated.aio.operations._service_operations": [],
    "azure.storage.filedatalake._generated.models": [],
    "azure.storage.filedatalake._generated.models._azure_data_lake_storage_restapi_enums": [],
    "azure.storage.filedatalake._generated.models._models_py3": [],
    "azure.storage.filedatalake._generated.models._patch": [],
    "azure.storage.filedatalake._generated.operations": [],
    "azure.storage.filedatalake._generated.operations._file_system_operations": [],
    "azure.storage.filedatalake._generated.operations._patch": [],
    "azure.storage.filedatalake._generated.operations._path_operations": [],
    "azure.storage.filedatalake._generated.operations._service_operations": [],
    "azure.storage.filedatalake._list_paths_helper": [],
    "azure.storage.filedatalake._models": [],
    "azure.storage.filedatalake._path_client": [],
    "azure.storage.filedatalake._quick_query_helper": [],
    "azure.storage.filedatalake._serialize": [],
    "azure.storage.filedatalake._shared": [],
    "azure.storage.filedatalake._shared.authentication": [],
    "azure.storage.filedatalake._shared.base_client": [],
    "azure.storage.filedatalake._shared.base_client_async": [],
    "azure.storage.filedatalake._shared.constants": [],
    "azure.storage.filedatalake._shared.models": [],
    "azure.storage.filedatalake._shared.parser": [],
    "azure.storage.filedatalake._shared.policies": [],
    "azure.storage.filedatalake._shared.policies_async": [],
    "azure.storage.filedatalake._shared.request_handlers": [],
    "azure.storage.filedatalake._shared.response_handlers": [],
    "azure.storage.filedatalake._shared.shared_access_signature": [],
    "azure.storage.filedatalake._shared.uploads": [],
    "azure.storage.filedatalake._shared.uploads_async": [],
    "azure.storage.filedatalake._shared_access_signature": [],
    "azure.storage.filedatalake._upload_helper": [],
    "azure.storage.filedatalake._version": [],
    "azure.storage.filedatalake.aio": [],
    "azure.storage.filedatalake.aio._data_lake_directory_client_async": [],
    "azure.storage.filedatalake.aio._data_lake_file_client_async": [],
    "azure.storage.filedatalake.aio._data_lake_lease_async": [],
    "azure.storage.filedatalake.aio._data_lake_service_client_async": [],
    "azure.storage.filedatalake.aio._download_async": [],
    "azure.storage.filedatalake.aio._file_system_client_async": [],
    "azure.storage.filedatalake.aio._list_paths_helper": [],
    "azure.storage.filedatalake.aio._models": [],
    "azure.storage.filedatalake.aio._path_client_async": [],
    "azure.storage.filedatalake.aio._upload_helper": []
  },
  "backcall": {
    "backcall": [],
    "backcall._signatures": [],
    "backcall.backcall": []
  },
  "bcrypt": {
    "bcrypt": []
  },
  "beautifulsoup4": {
    "bs4": [],
    "bs4.builder": [],
    "bs4.builder._html5lib": [],
    "bs4.builder._htmlparser": [],
    "bs4.builder._lxml": [],
    "bs4.css": [],
    "bs4.dammit": [],
    "bs4.diagnose": [],
    "bs4.element": [],
    "bs4.formatter": [],
    "bs4.tests": [],
    "bs4.tests.test_builder": [],
    "bs4.tests.test_builder_registry": [],
    "bs4.tests.test_css": [],
    "bs4.tests.test_dammit": [],
    "bs4.tests.test_docs": [],
    "bs4.tests.test_element": [],
    "bs4.tests.test_formatter": [],
    "bs4.tests.test_fuzz": [],
    "bs4.tests.test_html5lib": [],
    "bs4.tests.test_htmlparser": [],
    "bs4.tests.test_lxml": [],
    "bs4.tests.test_navigablestring": [],
    "bs4.tests.test_pageelement": [],
    "bs4.tests.test_soup": [],
    "bs4.tests.test_tag": [],
    "bs4.tests.test_tree": []
  },
  "bidict": {
    "bidict": [],
    "bidict._abc": [],
    "bidict._base": [],
    "bidict._bidict": [],
    "bidict._dup": [],
    "bidict._exc": [],
    "bidict._frozen": [],
    "bidict._iter": [],
    "bidict._orderedbase": [],
    "bidict._orderedbidict": [],
    "bidict._typing": [],
    "bidict.metadata": []
  },
  "black": {
    "_black_version": [],
    "black": [],
    "blackd": [],
    "blib2to3": []
  },
  "bleach": {
    "bleach": [],
    "bleach.callbacks": [],
    "bleach.css_sanitizer": [],
    "bleach.html5lib_shim": [],
    "bleach.linkifier": [],
    "bleach.parse_shim": [],
    "bleach.sanitizer": []
  },
  "blinker": {
    "blinker": [],
    "blinker._utilities": [],
    "blinker.base": []
  },
  "bokeh": {
    "bokeh": []
  },
  "boto3": {
    "boto3": [],
    "boto3.s3": [
      {
        "code": "direct-filesystem-access",
        "message": "AWS IAM Instance Profiles are not compatible with Databricks Unity Catalog, that routes access through Storage Credentials."
      }
    ]
  },
  "botocore": {
    "botocore": [
      {
        "code": "aws-cloud-access",
        "message": "AWS IAM Instance Profiles are not compatible with Databricks Unity Catalog, that routes access through Storage Credentials."
      }
    ]
  },
  "cachetools": {
    "cachetools": []
  },
  "certifi": {
    "certifi": []
  },
  "cffi": {
    "cffi": [],
    "cffi._imp_emulation": [],
    "cffi._shimmed_dist_utils": [],
    "cffi.api": [],
    "cffi.backend_ctypes": [],
    "cffi.cffi_opcode": [],
    "cffi.commontypes": [],
    "cffi.cparser": [],
    "cffi.error": [],
    "cffi.ffiplatform": [],
    "cffi.lock": [],
    "cffi.model": [],
    "cffi.pkgconfig": [],
    "cffi.recompiler": [],
    "cffi.setuptools_ext": [],
    "cffi.vengine_cpy": [],
    "cffi.vengine_gen": [],
    "cffi.verifier": []
  },
  "charset-normalizer": {
    "charset_normalizer": []
  },
  "clang": {
    "clang": [],
    "clang.cindex": [
      {
        "code": "table-migrate",
        "message": "Can't migrate 'register' because its table name argument is not a constant"
      }
    ],
    "clang.enumerations": []
  },
  "click": {
    "click": []
  },
  "cloudpickle": {
    "cloudpickle": [],
    "cloudpickle.cloudpickle": [],
    "cloudpickle.cloudpickle_fast": []
  },
  "comm": {
    "comm": [],
    "comm.base_comm": []
  },
  "contourpy": {
    "contourpy": []
  },
  "coverage": {
    "coverage": []
  },
  "cycler": {
    "cycler": []
  },
  "databricks-labs-blueprint": {
    "databricks.labs.blueprint": []
  },
  "databricks-labs-lsql": {
    "databricks.labs.lsql": []
  },
  "databricks-labs-pylint": {
    "databricks.labs.pylint": []
  },
  "databricks-labs-ucx": {
    "databricks.labs.ucx": []
  },
  "databricks-sdk": {
    "databricks.sdk": []
  },
  "debugpy": {
    "debugpy": []
  },
  "decorator": {
    "decorator": []
  },
  "deprecated": {
    "deprecated": [],
    "deprecated.classic": [],
    "deprecated.sphinx": []
  },
  "dill": {
    "dill": []
  },
  "docker": {
    "docker": []
  },
  "docker-pycreds": {
    "dockerpycreds": [],
    "dockerpycreds.constants": [],
    "dockerpycreds.errors": [],
    "dockerpycreds.store": [],
    "dockerpycreds.utils": [],
    "dockerpycreds.version": []
  },
  "entrypoints": {
    "entrypoints": []
  },
  "eradicate": {
    "eradicate": []
  },
  "exceptiongroup": {
    "exceptiongroup": []
  },
  "execnet": {
    "execnet": []
  },
  "executing": {
    "executing": []
  },
  "fastcluster": {
    "fastcluster": []
  },
  "filelock": {
    "filelock": [],
    "filelock._api": [],
    "filelock._error": [],
    "filelock._soft": [],
    "filelock._unix": [],
    "filelock._util": [],
    "filelock._windows": [],
    "filelock.version": []
  },
  "flask": {
    "flask": []
  },
  "flatbuffers": {
    "flatbuffers": [],
    "flatbuffers._version": [],
    "flatbuffers.builder": [],
    "flatbuffers.compat": [],
    "flatbuffers.encode": [],
    "flatbuffers.flexbuffers": [],
    "flatbuffers.number_types": [],
    "flatbuffers.packer": [],
    "flatbuffers.table": [],
    "flatbuffers.util": []
  },
  "fonttools": {
    "fontTools": []
  },
  "frozendict": {
    "frozendict": []
  },
  "frozenlist": {
    "frozenlist": []
  },
  "fsspec": {
    "fsspec": [],
    "fsspec._version": [],
    "fsspec.archive": [],
    "fsspec.asyn": [],
    "fsspec.caching": [],
    "fsspec.callbacks": [],
    "fsspec.compression": [],
    "fsspec.config": [],
    "fsspec.conftest": [],
    "fsspec.core": [],
    "fsspec.dircache": [],
    "fsspec.exceptions": [],
    "fsspec.fuse": [],
    "fsspec.generic": [],
    "fsspec.gui": [],
    "fsspec.implementations": [],
    "fsspec.implementations.arrow": [],
    "fsspec.implementations.cache_mapper": [],
    "fsspec.implementations.cache_metadata": [],
    "fsspec.implementations.cached": [],
    "fsspec.implementations.dask": [],
    "fsspec.implementations.data": [],
    "fsspec.implementations.dbfs": [],
    "fsspec.implementations.dirfs": [],
    "fsspec.implementations.ftp": [],
    "fsspec.implementations.git": [],
    "fsspec.implementations.github": [],
    "fsspec.implementations.http": [],
    "fsspec.implementations.jupyter": [],
    "fsspec.implementations.libarchive": [],
    "fsspec.implementations.local": [],
    "fsspec.implementations.memory": [],
    "fsspec.implementations.reference": [],
    "fsspec.implementations.sftp": [],
    "fsspec.implementations.smb": [],
    "fsspec.implementations.tar": [],
    "fsspec.implementations.webhdfs": [],
    "fsspec.implementations.zip": [],
    "fsspec.json": [],
    "fsspec.mapping": [],
    "fsspec.parquet": [],
    "fsspec.registry": [],
    "fsspec.spec": [],
    "fsspec.tests.abstract": [],
    "fsspec.tests.abstract.common": [],
    "fsspec.tests.abstract.copy": [],
    "fsspec.tests.abstract.get": [],
    "fsspec.tests.abstract.mv": [],
    "fsspec.tests.abstract.put": [],
    "fsspec.transaction": [],
    "fsspec.utils": []
  },
  "gast": {
    "gast": []
  },
  "gitdb": {
    "gitdb": []
  },
  "gitpython": {
    "git": []
  },
  "glow": {
    "glow": [],
    "glow._array": [],
    "glow._coro": [],
    "glow._debug": [],
    "glow._ic": [],
    "glow._import_hook": [],
    "glow._more": [],
    "glow._parallel": [],
    "glow._patch_len": [],
    "glow._patch_print": [],
    "glow._patch_scipy": [],
    "glow._profile": [],
    "glow._reduction": [],
    "glow._repr": [],
    "glow._sizeof": [],
    "glow._thread_quota": [],
    "glow._uuid": [],
    "glow.api": [],
    "glow.api.config": [],
    "glow.api.exporting": [],
    "glow.cli": [],
    "glow.io": [],
    "glow.io._sound": [],
    "glow.io._svg": [],
    "glow.wrap": [],
    "glow.wrap.cache": [],
    "glow.wrap.concurrency": [],
    "glow.wrap.reusable": [],
    "glow.wrap.util": []
  },
  "google-auth": {
    "google.auth": [],
    "google.oauth2": []
  },
  "google-pasta": {
    "pasta": []
  },
  "graphene": {
    "graphene": []
  },
  "graphql-core": {
    "graphql": []
  },
  "graphql-relay": {
    "graphql_relay": []
  },
  "grpcio": {
    "grpc": []
  },
  "gunicorn": {
    "gunicorn": []
  },
  "h5py": {
    "h5py": []
  },
  "html5lib": {
    "html5lib": []
  },
  "huggingface-hub": {
    "huggingface_hub": []
  },
  "hyperopt": {
    "hyperopt": [],
    "hyperopt.algobase": [],
    "hyperopt.anneal": [],
    "hyperopt.atpe": [],
    "hyperopt.base": [],
    "hyperopt.criteria": [],
    "hyperopt.early_stop": [],
    "hyperopt.exceptions": [],
    "hyperopt.fmin": [],
    "hyperopt.graph_viz": [],
    "hyperopt.hp": [],
    "hyperopt.ipy": [],
    "hyperopt.main": [],
    "hyperopt.mix": [],
    "hyperopt.mongoexp": [],
    "hyperopt.plotting": [],
    "hyperopt.progress": [],
    "hyperopt.pyll": [],
    "hyperopt.pyll.base": [],
    "hyperopt.pyll.stochastic": [],
    "hyperopt.pyll.tests": [],
    "hyperopt.pyll.tests.test_base": [],
    "hyperopt.pyll.tests.test_stochastic": [],
    "hyperopt.pyll_utils": [],
    "hyperopt.rand": [],
    "hyperopt.rdists": [],
    "hyperopt.spark": [
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sparkContext is not supported on UC Shared Clusters. Rewrite it using spark"
      },
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Use mapInArrow() or Pandas UDFs instead"
      }
    ],
    "hyperopt.std_out_err_redirect_tqdm": [],
    "hyperopt.tests": [],
    "hyperopt.tests.integration": [],
    "hyperopt.tests.integration.test_mongoexp": [],
    "hyperopt.tests.integration.test_spark": [
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Rewrite it using DataFrame API"
      },
      {
        "code": "spark-logging-in-shared-clusters",
        "message": "Cannot set Spark log level directly from code on UC Shared Clusters. Remove the call and set the cluster spark conf 'spark.log.level' instead"
      }
    ],
    "hyperopt.tests.test_anneal": [],
    "hyperopt.tests.test_atpe_basic": [],
    "hyperopt.tests.test_base": [],
    "hyperopt.tests.test_criteria": [],
    "hyperopt.tests.test_domains": [],
    "hyperopt.tests.test_fmin": [],
    "hyperopt.tests.test_ipy": [],
    "hyperopt.tests.test_mongoexp": [],
    "hyperopt.tests.test_pchoice": [],
    "hyperopt.tests.test_plotting": [],
    "hyperopt.tests.test_progress": [],
    "hyperopt.tests.test_pyll_utils": [],
    "hyperopt.tests.test_rand": [],
    "hyperopt.tests.test_randint": [],
    "hyperopt.tests.test_rdists": [],
    "hyperopt.tests.test_spark": [
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Rewrite it using DataFrame API"
      },
      {
        "code": "spark-logging-in-shared-clusters",
        "message": "Cannot set Spark log level directly from code on UC Shared Clusters. Remove the call and set the cluster spark conf 'spark.log.level' instead"
      }
    ],
    "hyperopt.tests.test_tpe": [],
    "hyperopt.tests.test_utils": [],
    "hyperopt.tests.test_vectorize": [],
    "hyperopt.tests.test_webpage": [],
    "hyperopt.tests.unit": [],
    "hyperopt.tests.unit.test_anneal": [],
    "hyperopt.tests.unit.test_atpe_basic": [],
    "hyperopt.tests.unit.test_criteria": [],
    "hyperopt.tests.unit.test_domains": [],
    "hyperopt.tests.unit.test_fmin": [],
    "hyperopt.tests.unit.test_ipy": [],
    "hyperopt.tests.unit.test_pchoice": [],
    "hyperopt.tests.unit.test_plotting": [],
    "hyperopt.tests.unit.test_progress": [],
    "hyperopt.tests.unit.test_pyll_utils": [],
    "hyperopt.tests.unit.test_rand": [],
    "hyperopt.tests.unit.test_randint": [],
    "hyperopt.tests.unit.test_rdists": [],
    "hyperopt.tests.unit.test_tpe": [],
    "hyperopt.tests.unit.test_utils": [],
    "hyperopt.tests.unit.test_vectorize": [],
    "hyperopt.tests.unit.test_webpage": [],
    "hyperopt.tpe": [],
    "hyperopt.utils": [],
    "hyperopt.vectorize": []
  },
  "idna": {
    "idna": []
  },
  "importlib_metadata": {
    "importlib_metadata": [],
    "importlib_metadata._adapters": [],
    "importlib_metadata._collections": [],
    "importlib_metadata._compat": [],
    "importlib_metadata._functools": [],
    "importlib_metadata._itertools": [],
    "importlib_metadata._meta": [],
    "importlib_metadata._text": [],
    "importlib_metadata.compat": [],
    "importlib_metadata.compat.py39": [],
    "importlib_metadata.diagnose": []
  },
  "iniconfig": {
    "iniconfig": []
  },
  "ipykernel": {
    "ipykernel": []
  },
  "ipython": {
    "IPython": []
  },
  "ipywidgets": {
    "ipywidgets": [],
    "ipywidgets._version": [],
    "ipywidgets.comm": [],
    "ipywidgets.embed": [],
    "ipywidgets.tests": [],
    "ipywidgets.tests.test_embed": [],
    "ipywidgets.widgets": [],
    "ipywidgets.widgets.docutils": [],
    "ipywidgets.widgets.domwidget": [],
    "ipywidgets.widgets.interaction": [],
    "ipywidgets.widgets.tests": [],
    "ipywidgets.widgets.tests.test_datetime_serializers": [],
    "ipywidgets.widgets.tests.test_docutils": [],
    "ipywidgets.widgets.tests.test_interaction": [],
    "ipywidgets.widgets.tests.test_link": [],
    "ipywidgets.widgets.tests.test_selectioncontainer": [],
    "ipywidgets.widgets.tests.test_send_state": [],
    "ipywidgets.widgets.tests.test_set_state": [],
    "ipywidgets.widgets.tests.test_traits": [],
    "ipywidgets.widgets.tests.test_utils": [],
    "ipywidgets.widgets.tests.test_widget": [],
    "ipywidgets.widgets.tests.test_widget_box": [],
    "ipywidgets.widgets.tests.test_widget_button": [],
    "ipywidgets.widgets.tests.test_widget_datetime": [],
    "ipywidgets.widgets.tests.test_widget_float": [],
    "ipywidgets.widgets.tests.test_widget_image": [],
    "ipywidgets.widgets.tests.test_widget_naive_datetime": [],
    "ipywidgets.widgets.tests.test_widget_output": [],
    "ipywidgets.widgets.tests.test_widget_selection": [],
    "ipywidgets.widgets.tests.test_widget_string": [],
    "ipywidgets.widgets.tests.test_widget_templates": [],
    "ipywidgets.widgets.tests.test_widget_time": [],
    "ipywidgets.widgets.tests.test_widget_upload": [],
    "ipywidgets.widgets.tests.utils": [],
    "ipywidgets.widgets.trait_types": [],
    "ipywidgets.widgets.utils": [],
    "ipywidgets.widgets.valuewidget": [],
    "ipywidgets.widgets.widget": [],
    "ipywidgets.widgets.widget_bool": [],
    "ipywidgets.widgets.widget_box": [],
    "ipywidgets.widgets.widget_button": [],
    "ipywidgets.widgets.widget_color": [],
    "ipywidgets.widgets.widget_controller": [],
    "ipywidgets.widgets.widget_core": [],
    "ipywidgets.widgets.widget_date": [],
    "ipywidgets.widgets.widget_datetime": [],
    "ipywidgets.widgets.widget_description": [],
    "ipywidgets.widgets.widget_float": [],
    "ipywidgets.widgets.widget_int": [],
    "ipywidgets.widgets.widget_layout": [],
    "ipywidgets.widgets.widget_link": [],
    "ipywidgets.widgets.widget_media": [],
    "ipywidgets.widgets.widget_output": [],
    "ipywidgets.widgets.widget_selection": [],
    "ipywidgets.widgets.widget_selectioncontainer": [],
    "ipywidgets.widgets.widget_string": [],
    "ipywidgets.widgets.widget_style": [],
    "ipywidgets.widgets.widget_tagsinput": [],
    "ipywidgets.widgets.widget_templates": [],
    "ipywidgets.widgets.widget_time": [],
    "ipywidgets.widgets.widget_upload": []
  },
  "isort": {
    "isort": []
  },
  "itsdangerous": {
    "itsdangerous": []
  },
  "jedi": {
    "jedi": []
  },
  "jinja2": {
    "jinja2": []
  },
  "jmespath": {
    "jmespath": []
  },
  "joblib": {
    "joblib": []
  },
  "jupyter_client": {
    "jupyter_client": []
  },
  "jupyter_core": {
    "jupyter": []
  },
  "keras": {
    "keras": []
  },
  "kiwisolver": {
    "kiwisolver": [],
    "kiwisolver.exceptions": []
  },
  "langchain": {
    "langchain": [],
    "langchain._api": [],
    "langchain._api.deprecation": [],
    "langchain._api.interactive_env": [],
    "langchain._api.module_import": [],
    "langchain._api.path": [],
    "langchain.adapters": [],
    "langchain.adapters.openai": [],
    "langchain.agents": [],
    "langchain.agents.agent": [],
    "langchain.agents.agent_iterator": [],
    "langchain.agents.agent_toolkits": [],
    "langchain.agents.agent_toolkits.ainetwork": [],
    "langchain.agents.agent_toolkits.ainetwork.toolkit": [],
    "langchain.agents.agent_toolkits.amadeus.toolkit": [],
    "langchain.agents.agent_toolkits.azure_cognitive_services": [],
    "langchain.agents.agent_toolkits.base": [],
    "langchain.agents.agent_toolkits.clickup": [],
    "langchain.agents.agent_toolkits.clickup.toolkit": [],
    "langchain.agents.agent_toolkits.conversational_retrieval": [],
    "langchain.agents.agent_toolkits.conversational_retrieval.openai_functions": [],
    "langchain.agents.agent_toolkits.conversational_retrieval.tool": [],
    "langchain.agents.agent_toolkits.csv": [],
    "langchain.agents.agent_toolkits.file_management": [],
    "langchain.agents.agent_toolkits.file_management.toolkit": [],
    "langchain.agents.agent_toolkits.github": [],
    "langchain.agents.agent_toolkits.github.toolkit": [],
    "langchain.agents.agent_toolkits.gitlab": [],
    "langchain.agents.agent_toolkits.gitlab.toolkit": [],
    "langchain.agents.agent_toolkits.gmail": [],
    "langchain.agents.agent_toolkits.gmail.toolkit": [],
    "langchain.agents.agent_toolkits.jira": [],
    "langchain.agents.agent_toolkits.jira.toolkit": [],
    "langchain.agents.agent_toolkits.json": [],
    "langchain.agents.agent_toolkits.json.base": [],
    "langchain.agents.agent_toolkits.json.prompt": [],
    "langchain.agents.agent_toolkits.json.toolkit": [],
    "langchain.agents.agent_toolkits.multion": [],
    "langchain.agents.agent_toolkits.multion.toolkit": [],
    "langchain.agents.agent_toolkits.nasa": [],
    "langchain.agents.agent_toolkits.nasa.toolkit": [],
    "langchain.agents.agent_toolkits.nla": [],
    "langchain.agents.agent_toolkits.nla.tool": [],
    "langchain.agents.agent_toolkits.nla.toolkit": [],
    "langchain.agents.agent_toolkits.office365": [],
    "langchain.agents.agent_toolkits.office365.toolkit": [],
    "langchain.agents.agent_toolkits.openapi": [],
    "langchain.agents.agent_toolkits.openapi.base": [],
    "langchain.agents.agent_toolkits.openapi.planner": [],
    "langchain.agents.agent_toolkits.openapi.planner_prompt": [],
    "langchain.agents.agent_toolkits.openapi.prompt": [],
    "langchain.agents.agent_toolkits.openapi.spec": [],
    "langchain.agents.agent_toolkits.openapi.toolkit": [],
    "langchain.agents.agent_toolkits.pandas": [],
    "langchain.agents.agent_toolkits.playwright": [],
    "langchain.agents.agent_toolkits.playwright.toolkit": [],
    "langchain.agents.agent_toolkits.powerbi": [],
    "langchain.agents.agent_toolkits.powerbi.base": [],
    "langchain.agents.agent_toolkits.powerbi.chat_base": [],
    "langchain.agents.agent_toolkits.powerbi.prompt": [],
    "langchain.agents.agent_toolkits.powerbi.toolkit": [],
    "langchain.agents.agent_toolkits.python": [],
    "langchain.agents.agent_toolkits.slack": [],
    "langchain.agents.agent_toolkits.slack.toolkit": [],
    "langchain.agents.agent_toolkits.spark": [],
    "langchain.agents.agent_toolkits.spark_sql": [],
    "langchain.agents.agent_toolkits.spark_sql.base": [],
    "langchain.agents.agent_toolkits.spark_sql.prompt": [],
    "langchain.agents.agent_toolkits.spark_sql.toolkit": [],
    "langchain.agents.agent_toolkits.sql": [],
    "langchain.agents.agent_toolkits.sql.base": [],
    "langchain.agents.agent_toolkits.sql.prompt": [],
    "langchain.agents.agent_toolkits.sql.toolkit": [],
    "langchain.agents.agent_toolkits.steam": [],
    "langchain.agents.agent_toolkits.steam.toolkit": [],
    "langchain.agents.agent_toolkits.vectorstore": [],
    "langchain.agents.agent_toolkits.vectorstore.base": [],
    "langchain.agents.agent_toolkits.vectorstore.prompt": [],
    "langchain.agents.agent_toolkits.vectorstore.toolkit": [],
    "langchain.agents.agent_toolkits.xorbits": [],
    "langchain.agents.agent_toolkits.zapier": [],
    "langchain.agents.agent_toolkits.zapier.toolkit": [],
    "langchain.agents.agent_types": [],
    "langchain.agents.chat": [],
    "langchain.agents.chat.base": [],
    "langchain.agents.chat.output_parser": [],
    "langchain.agents.chat.prompt": [],
    "langchain.agents.conversational": [],
    "langchain.agents.conversational.base": [],
    "langchain.agents.conversational.output_parser": [],
    "langchain.agents.conversational.prompt": [],
    "langchain.agents.conversational_chat": [],
    "langchain.agents.conversational_chat.base": [],
    "langchain.agents.conversational_chat.output_parser": [],
    "langchain.agents.conversational_chat.prompt": [],
    "langchain.agents.format_scratchpad": [],
    "langchain.agents.format_scratchpad.log": [],
    "langchain.agents.format_scratchpad.log_to_messages": [],
    "langchain.agents.format_scratchpad.openai_functions": [],
    "langchain.agents.format_scratchpad.openai_tools": [],
    "langchain.agents.format_scratchpad.tools": [],
    "langchain.agents.format_scratchpad.xml": [],
    "langchain.agents.initialize": [],
    "langchain.agents.json_chat": [],
    "langchain.agents.json_chat.base": [],
    "langchain.agents.json_chat.prompt": [],
    "langchain.agents.load_tools": [],
    "langchain.agents.loading": [],
    "langchain.agents.mrkl": [],
    "langchain.agents.mrkl.base": [],
    "langchain.agents.mrkl.output_parser": [],
    "langchain.agents.mrkl.prompt": [],
    "langchain.agents.openai_assistant": [],
    "langchain.agents.openai_assistant.base": [],
    "langchain.agents.openai_functions_agent": [],
    "langchain.agents.openai_functions_agent.agent_token_buffer_memory": [],
    "langchain.agents.openai_functions_agent.base": [],
    "langchain.agents.openai_functions_multi_agent": [],
    "langchain.agents.openai_functions_multi_agent.base": [],
    "langchain.agents.openai_tools": [],
    "langchain.agents.openai_tools.base": [],
    "langchain.agents.output_parsers": [],
    "langchain.agents.output_parsers.json": [],
    "langchain.agents.output_parsers.openai_functions": [],
    "langchain.agents.output_parsers.openai_tools": [],
    "langchain.agents.output_parsers.react_json_single_input": [],
    "langchain.agents.output_parsers.react_single_input": [],
    "langchain.agents.output_parsers.self_ask": [],
    "langchain.agents.output_parsers.tools": [],
    "langchain.agents.output_parsers.xml": [],
    "langchain.agents.react": [],
    "langchain.agents.react.agent": [],
    "langchain.agents.react.base": [],
    "langchain.agents.react.output_parser": [],
    "langchain.agents.react.textworld_prompt": [],
    "langchain.agents.react.wiki_prompt": [],
    "langchain.agents.schema": [],
    "langchain.agents.self_ask_with_search": [],
    "langchain.agents.self_ask_with_search.base": [],
    "langchain.agents.self_ask_with_search.output_parser": [],
    "langchain.agents.self_ask_with_search.prompt": [],
    "langchain.agents.structured_chat": [],
    "langchain.agents.structured_chat.base": [],
    "langchain.agents.structured_chat.output_parser": [],
    "langchain.agents.structured_chat.prompt": [],
    "langchain.agents.tool_calling_agent": [],
    "langchain.agents.tool_calling_agent.base": [],
    "langchain.agents.tools": [],
    "langchain.agents.types": [],
    "langchain.agents.utils": [],
    "langchain.agents.xml": [],
    "langchain.agents.xml.base": [],
    "langchain.agents.xml.prompt": [],
    "langchain.base_language": [],
    "langchain.cache": [],
    "langchain.callbacks": [],
    "langchain.callbacks.aim_callback": [],
    "langchain.callbacks.argilla_callback": [],
    "langchain.callbacks.arize_callback": [],
    "langchain.callbacks.arthur_callback": [],
    "langchain.callbacks.base": [],
    "langchain.callbacks.clearml_callback": [],
    "langchain.callbacks.comet_ml_callback": [],
    "langchain.callbacks.confident_callback": [],
    "langchain.callbacks.context_callback": [],
    "langchain.callbacks.file": [],
    "langchain.callbacks.flyte_callback": [],
    "langchain.callbacks.human": [],
    "langchain.callbacks.infino_callback": [],
    "langchain.callbacks.labelstudio_callback": [],
    "langchain.callbacks.llmonitor_callback": [],
    "langchain.callbacks.manager": [],
    "langchain.callbacks.mlflow_callback": [],
    "langchain.callbacks.openai_info": [],
    "langchain.callbacks.promptlayer_callback": [],
    "langchain.callbacks.sagemaker_callback": [],
    "langchain.callbacks.stdout": [],
    "langchain.callbacks.streaming_aiter": [],
    "langchain.callbacks.streaming_aiter_final_only": [],
    "langchain.callbacks.streaming_stdout": [],
    "langchain.callbacks.streaming_stdout_final_only": [],
    "langchain.callbacks.streamlit": [],
    "langchain.callbacks.streamlit.mutable_expander": [],
    "langchain.callbacks.streamlit.streamlit_callback_handler": [],
    "langchain.callbacks.tracers": [],
    "langchain.callbacks.tracers.base": [],
    "langchain.callbacks.tracers.comet": [],
    "langchain.callbacks.tracers.evaluation": [],
    "langchain.callbacks.tracers.langchain": [],
    "langchain.callbacks.tracers.langchain_v1": [],
    "langchain.callbacks.tracers.log_stream": [],
    "langchain.callbacks.tracers.logging": [],
    "langchain.callbacks.tracers.root_listeners": [],
    "langchain.callbacks.tracers.run_collector": [],
    "langchain.callbacks.tracers.schemas": [],
    "langchain.callbacks.tracers.stdout": [],
    "langchain.callbacks.tracers.wandb": [],
    "langchain.callbacks.trubrics_callback": [],
    "langchain.callbacks.utils": [],
    "langchain.callbacks.wandb_callback": [],
    "langchain.callbacks.whylabs_callback": [],
    "langchain.chains": [],
    "langchain.chains.api": [],
    "langchain.chains.api.base": [],
    "langchain.chains.api.news_docs": [],
    "langchain.chains.api.open_meteo_docs": [],
    "langchain.chains.api.openapi": [],
    "langchain.chains.api.openapi.chain": [],
    "langchain.chains.api.openapi.prompts": [],
    "langchain.chains.api.openapi.requests_chain": [],
    "langchain.chains.api.openapi.response_chain": [],
    "langchain.chains.api.podcast_docs": [],
    "langchain.chains.api.prompt": [],
    "langchain.chains.api.tmdb_docs": [],
    "langchain.chains.base": [],
    "langchain.chains.chat_vector_db": [],
    "langchain.chains.chat_vector_db.prompts": [],
    "langchain.chains.combine_documents": [],
    "langchain.chains.combine_documents.base": [],
    "langchain.chains.combine_documents.map_reduce": [],
    "langchain.chains.combine_documents.map_rerank": [],
    "langchain.chains.combine_documents.reduce": [],
    "langchain.chains.combine_documents.refine": [],
    "langchain.chains.combine_documents.stuff": [],
    "langchain.chains.constitutional_ai": [],
    "langchain.chains.constitutional_ai.base": [],
    "langchain.chains.constitutional_ai.models": [],
    "langchain.chains.constitutional_ai.principles": [],
    "langchain.chains.constitutional_ai.prompts": [],
    "langchain.chains.conversation": [],
    "langchain.chains.conversation.base": [],
    "langchain.chains.conversation.memory": [],
    "langchain.chains.conversation.prompt": [],
    "langchain.chains.conversational_retrieval": [],
    "langchain.chains.conversational_retrieval.base": [],
    "langchain.chains.conversational_retrieval.prompts": [],
    "langchain.chains.elasticsearch_database": [],
    "langchain.chains.elasticsearch_database.base": [],
    "langchain.chains.elasticsearch_database.prompts": [],
    "langchain.chains.ernie_functions": [],
    "langchain.chains.ernie_functions.base": [],
    "langchain.chains.example_generator": [],
    "langchain.chains.flare": [],
    "langchain.chains.flare.base": [],
    "langchain.chains.flare.prompts": [],
    "langchain.chains.graph_qa": [],
    "langchain.chains.graph_qa.arangodb": [],
    "langchain.chains.graph_qa.base": [],
    "langchain.chains.graph_qa.cypher": [],
    "langchain.chains.graph_qa.cypher_utils": [],
    "langchain.chains.graph_qa.falkordb": [],
    "langchain.chains.graph_qa.gremlin": [],
    "langchain.chains.graph_qa.hugegraph": [],
    "langchain.chains.graph_qa.kuzu": [],
    "langchain.chains.graph_qa.nebulagraph": [],
    "langchain.chains.graph_qa.neptune_cypher": [],
    "langchain.chains.graph_qa.neptune_sparql": [],
    "langchain.chains.graph_qa.ontotext_graphdb": [],
    "langchain.chains.graph_qa.prompts": [],
    "langchain.chains.graph_qa.sparql": [],
    "langchain.chains.history_aware_retriever": [],
    "langchain.chains.hyde": [],
    "langchain.chains.hyde.base": [],
    "langchain.chains.hyde.prompts": [],
    "langchain.chains.llm": [],
    "langchain.chains.llm_bash": [],
    "langchain.chains.llm_checker": [],
    "langchain.chains.llm_checker.base": [],
    "langchain.chains.llm_checker.prompt": [],
    "langchain.chains.llm_math": [],
    "langchain.chains.llm_math.base": [],
    "langchain.chains.llm_math.prompt": [],
    "langchain.chains.llm_requests": [],
    "langchain.chains.llm_summarization_checker": [],
    "langchain.chains.llm_summarization_checker.base": [],
    "langchain.chains.llm_symbolic_math": [],
    "langchain.chains.loading": [],
    "langchain.chains.mapreduce": [],
    "langchain.chains.moderation": [],
    "langchain.chains.natbot": [],
    "langchain.chains.natbot.base": [],
    "langchain.chains.natbot.crawler": [],
    "langchain.chains.natbot.prompt": [],
    "langchain.chains.openai_functions": [],
    "langchain.chains.openai_functions.base": [],
    "langchain.chains.openai_functions.citation_fuzzy_match": [],
    "langchain.chains.openai_functions.extraction": [],
    "langchain.chains.openai_functions.openapi": [],
    "langchain.chains.openai_functions.qa_with_structure": [],
    "langchain.chains.openai_functions.tagging": [],
    "langchain.chains.openai_functions.utils": [],
    "langchain.chains.openai_tools": [],
    "langchain.chains.openai_tools.extraction": [],
    "langchain.chains.prompt_selector": [],
    "langchain.chains.qa_generation": [],
    "langchain.chains.qa_generation.base": [],
    "langchain.chains.qa_generation.prompt": [],
    "langchain.chains.qa_with_sources": [],
    "langchain.chains.qa_with_sources.base": [],
    "langchain.chains.qa_with_sources.loading": [],
    "langchain.chains.qa_with_sources.map_reduce_prompt": [],
    "langchain.chains.qa_with_sources.refine_prompts": [],
    "langchain.chains.qa_with_sources.retrieval": [],
    "langchain.chains.qa_with_sources.stuff_prompt": [],
    "langchain.chains.qa_with_sources.vector_db": [],
    "langchain.chains.query_constructor": [],
    "langchain.chains.query_constructor.base": [],
    "langchain.chains.query_constructor.ir": [],
    "langchain.chains.query_constructor.parser": [],
    "langchain.chains.query_constructor.prompt": [],
    "langchain.chains.query_constructor.schema": [],
    "langchain.chains.question_answering": [],
    "langchain.chains.question_answering.chain": [],
    "langchain.chains.question_answering.map_reduce_prompt": [],
    "langchain.chains.question_answering.map_rerank_prompt": [],
    "langchain.chains.question_answering.refine_prompts": [],
    "langchain.chains.question_answering.stuff_prompt": [],
    "langchain.chains.retrieval": [],
    "langchain.chains.retrieval_qa": [],
    "langchain.chains.retrieval_qa.base": [],
    "langchain.chains.retrieval_qa.prompt": [],
    "langchain.chains.router": [],
    "langchain.chains.router.base": [],
    "langchain.chains.router.embedding_router": [],
    "langchain.chains.router.llm_router": [],
    "langchain.chains.router.multi_prompt": [],
    "langchain.chains.router.multi_prompt_prompt": [],
    "langchain.chains.router.multi_retrieval_prompt": [],
    "langchain.chains.router.multi_retrieval_qa": [],
    "langchain.chains.sequential": [],
    "langchain.chains.sql_database": [],
    "langchain.chains.sql_database.prompt": [],
    "langchain.chains.sql_database.query": [],
    "langchain.chains.structured_output": [],
    "langchain.chains.structured_output.base": [],
    "langchain.chains.summarize": [],
    "langchain.chains.summarize.chain": [],
    "langchain.chains.summarize.map_reduce_prompt": [],
    "langchain.chains.summarize.refine_prompts": [],
    "langchain.chains.summarize.stuff_prompt": [],
    "langchain.chains.transform": [],
    "langchain.chat_loaders": [],
    "langchain.chat_loaders.base": [],
    "langchain.chat_loaders.facebook_messenger": [],
    "langchain.chat_loaders.gmail": [],
    "langchain.chat_loaders.imessage": [],
    "langchain.chat_loaders.langsmith": [],
    "langchain.chat_loaders.slack": [],
    "langchain.chat_loaders.telegram": [],
    "langchain.chat_loaders.utils": [],
    "langchain.chat_loaders.whatsapp": [],
    "langchain.chat_models": [],
    "langchain.chat_models.anthropic": [],
    "langchain.chat_models.anyscale": [],
    "langchain.chat_models.azure_openai": [],
    "langchain.chat_models.azureml_endpoint": [],
    "langchain.chat_models.baichuan": [],
    "langchain.chat_models.baidu_qianfan_endpoint": [],
    "langchain.chat_models.base": [],
    "langchain.chat_models.bedrock": [],
    "langchain.chat_models.cohere": [],
    "langchain.chat_models.databricks": [],
    "langchain.chat_models.ernie": [],
    "langchain.chat_models.everlyai": [],
    "langchain.chat_models.fake": [],
    "langchain.chat_models.fireworks": [],
    "langchain.chat_models.gigachat": [],
    "langchain.chat_models.google_palm": [],
    "langchain.chat_models.human": [],
    "langchain.chat_models.hunyuan": [],
    "langchain.chat_models.javelin_ai_gateway": [],
    "langchain.chat_models.jinachat": [],
    "langchain.chat_models.konko": [],
    "langchain.chat_models.litellm": [],
    "langchain.chat_models.meta": [],
    "langchain.chat_models.minimax": [],
    "langchain.chat_models.mlflow": [],
    "langchain.chat_models.mlflow_ai_gateway": [],
    "langchain.chat_models.ollama": [],
    "langchain.chat_models.openai": [],
    "langchain.chat_models.pai_eas_endpoint": [],
    "langchain.chat_models.promptlayer_openai": [],
    "langchain.chat_models.tongyi": [],
    "langchain.chat_models.vertexai": [],
    "langchain.chat_models.volcengine_maas": [],
    "langchain.chat_models.yandex": [],
    "langchain.docstore": [],
    "langchain.docstore.arbitrary_fn": [],
    "langchain.docstore.base": [],
    "langchain.docstore.document": [],
    "langchain.docstore.in_memory": [],
    "langchain.docstore.wikipedia": [],
    "langchain.document_loaders": [],
    "langchain.document_loaders.acreom": [],
    "langchain.document_loaders.airbyte": [],
    "langchain.document_loaders.airbyte_json": [],
    "langchain.document_loaders.airtable": [],
    "langchain.document_loaders.apify_dataset": [],
    "langchain.document_loaders.arcgis_loader": [],
    "langchain.document_loaders.arxiv": [],
    "langchain.document_loaders.assemblyai": [],
    "langchain.document_loaders.async_html": [],
    "langchain.document_loaders.azlyrics": [],
    "langchain.document_loaders.azure_ai_data": [],
    "langchain.document_loaders.azure_blob_storage_container": [],
    "langchain.document_loaders.azure_blob_storage_file": [],
    "langchain.document_loaders.baiducloud_bos_directory": [],
    "langchain.document_loaders.baiducloud_bos_file": [],
    "langchain.document_loaders.base": [],
    "langchain.document_loaders.base_o365": [],
    "langchain.document_loaders.bibtex": [],
    "langchain.document_loaders.bigquery": [],
    "langchain.document_loaders.bilibili": [],
    "langchain.document_loaders.blackboard": [],
    "langchain.document_loaders.blob_loaders": [],
    "langchain.document_loaders.blob_loaders.file_system": [],
    "langchain.document_loaders.blob_loaders.schema": [],
    "langchain.document_loaders.blob_loaders.youtube_audio": [],
    "langchain.document_loaders.blockchain": [],
    "langchain.document_loaders.brave_search": [],
    "langchain.document_loaders.browserless": [],
    "langchain.document_loaders.chatgpt": [],
    "langchain.document_loaders.chromium": [],
    "langchain.document_loaders.college_confidential": [],
    "langchain.document_loaders.concurrent": [],
    "langchain.document_loaders.confluence": [],
    "langchain.document_loaders.conllu": [],
    "langchain.document_loaders.couchbase": [],
    "langchain.document_loaders.csv_loader": [],
    "langchain.document_loaders.cube_semantic": [],
    "langchain.document_loaders.datadog_logs": [],
    "langchain.document_loaders.dataframe": [],
    "langchain.document_loaders.diffbot": [],
    "langchain.document_loaders.directory": [],
    "langchain.document_loaders.discord": [],
    "langchain.document_loaders.docugami": [],
    "langchain.document_loaders.docusaurus": [],
    "langchain.document_loaders.dropbox": [],
    "langchain.document_loaders.duckdb_loader": [],
    "langchain.document_loaders.email": [],
    "langchain.document_loaders.epub": [],
    "langchain.document_loaders.etherscan": [],
    "langchain.document_loaders.evernote": [],
    "langchain.document_loaders.excel": [],
    "langchain.document_loaders.facebook_chat": [],
    "langchain.document_loaders.fauna": [],
    "langchain.document_loaders.figma": [],
    "langchain.document_loaders.gcs_directory": [],
    "langchain.document_loaders.gcs_file": [],
    "langchain.document_loaders.generic": [],
    "langchain.document_loaders.geodataframe": [],
    "langchain.document_loaders.git": [],
    "langchain.document_loaders.gitbook": [],
    "langchain.document_loaders.github": [],
    "langchain.document_loaders.google_speech_to_text": [],
    "langchain.document_loaders.googledrive": [],
    "langchain.document_loaders.gutenberg": [],
    "langchain.document_loaders.helpers": [],
    "langchain.document_loaders.hn": [],
    "langchain.document_loaders.html": [],
    "langchain.document_loaders.html_bs": [],
    "langchain.document_loaders.hugging_face_dataset": [],
    "langchain.document_loaders.ifixit": [],
    "langchain.document_loaders.image": [],
    "langchain.document_loaders.image_captions": [],
    "langchain.document_loaders.imsdb": [],
    "langchain.document_loaders.iugu": [],
    "langchain.document_loaders.joplin": [],
    "langchain.document_loaders.json_loader": [],
    "langchain.document_loaders.lakefs": [],
    "langchain.document_loaders.larksuite": [],
    "langchain.document_loaders.markdown": [],
    "langchain.document_loaders.mastodon": [],
    "langchain.document_loaders.max_compute": [],
    "langchain.document_loaders.mediawikidump": [],
    "langchain.document_loaders.merge": [],
    "langchain.document_loaders.mhtml": [],
    "langchain.document_loaders.modern_treasury": [],
    "langchain.document_loaders.mongodb": [],
    "langchain.document_loaders.news": [],
    "langchain.document_loaders.notebook": [],
    "langchain.document_loaders.notion": [],
    "langchain.document_loaders.notiondb": [],
    "langchain.document_loaders.nuclia": [],
    "langchain.document_loaders.obs_directory": [],
    "langchain.document_loaders.obs_file": [],
    "langchain.document_loaders.obsidian": [],
    "langchain.document_loaders.odt": [],
    "langchain.document_loaders.onedrive": [],
    "langchain.document_loaders.onedrive_file": [],
    "langchain.document_loaders.onenote": [],
    "langchain.document_loaders.open_city_data": [],
    "langchain.document_loaders.org_mode": [],
    "langchain.document_loaders.parsers": [],
    "langchain.document_loaders.parsers.audio": [],
    "langchain.document_loaders.parsers.docai": [],
    "langchain.document_loaders.parsers.generic": [],
    "langchain.document_loaders.parsers.grobid": [],
    "langchain.document_loaders.parsers.html": [],
    "langchain.document_loaders.parsers.html.bs4": [],
    "langchain.document_loaders.parsers.language": [],
    "langchain.document_loaders.parsers.language.cobol": [],
    "langchain.document_loaders.parsers.language.code_segmenter": [],
    "langchain.document_loaders.parsers.language.javascript": [],
    "langchain.document_loaders.parsers.language.language_parser": [],
    "langchain.document_loaders.parsers.language.python": [],
    "langchain.document_loaders.parsers.msword": [],
    "langchain.document_loaders.parsers.pdf": [],
    "langchain.document_loaders.parsers.registry": [],
    "langchain.document_loaders.parsers.txt": [],
    "langchain.document_loaders.pdf": [],
    "langchain.document_loaders.polars_dataframe": [],
    "langchain.document_loaders.powerpoint": [],
    "langchain.document_loaders.psychic": [],
    "langchain.document_loaders.pubmed": [],
    "langchain.document_loaders.pyspark_dataframe": [],
    "langchain.document_loaders.python": [],
    "langchain.document_loaders.quip": [],
    "langchain.document_loaders.readthedocs": [],
    "langchain.document_loaders.recursive_url_loader": [],
    "langchain.document_loaders.reddit": [],
    "langchain.document_loaders.roam": [],
    "langchain.document_loaders.rocksetdb": [],
    "langchain.document_loaders.rspace": [],
    "langchain.document_loaders.rss": [],
    "langchain.document_loaders.rst": [],
    "langchain.document_loaders.rtf": [],
    "langchain.document_loaders.s3_directory": [],
    "langchain.document_loaders.s3_file": [],
    "langchain.document_loaders.sharepoint": [],
    "langchain.document_loaders.sitemap": [],
    "langchain.document_loaders.slack_directory": [],
    "langchain.document_loaders.snowflake_loader": [],
    "langchain.document_loaders.spreedly": [],
    "langchain.document_loaders.srt": [],
    "langchain.document_loaders.stripe": [],
    "langchain.document_loaders.telegram": [],
    "langchain.document_loaders.tencent_cos_directory": [],
    "langchain.document_loaders.tencent_cos_file": [],
    "langchain.document_loaders.tensorflow_datasets": [],
    "langchain.document_loaders.text": [],
    "langchain.document_loaders.tomarkdown": [],
    "langchain.document_loaders.toml": [],
    "langchain.document_loaders.trello": [],
    "langchain.document_loaders.tsv": [],
    "langchain.document_loaders.twitter": [],
    "langchain.document_loaders.unstructured": [],
    "langchain.document_loaders.url": [],
    "langchain.document_loaders.url_playwright": [],
    "langchain.document_loaders.url_selenium": [],
    "langchain.document_loaders.weather": [],
    "langchain.document_loaders.web_base": [],
    "langchain.document_loaders.whatsapp_chat": [],
    "langchain.document_loaders.wikipedia": [],
    "langchain.document_loaders.word_document": [],
    "langchain.document_loaders.xml": [],
    "langchain.document_loaders.xorbits": [],
    "langchain.document_loaders.youtube": [],
    "langchain.document_transformers": [],
    "langchain.document_transformers.beautiful_soup_transformer": [],
    "langchain.document_transformers.doctran_text_extract": [],
    "langchain.document_transformers.doctran_text_qa": [],
    "langchain.document_transformers.doctran_text_translate": [],
    "langchain.document_transformers.embeddings_redundant_filter": [],
    "langchain.document_transformers.google_translate": [],
    "langchain.document_transformers.html2text": [],
    "langchain.document_transformers.long_context_reorder": [],
    "langchain.document_transformers.nuclia_text_transform": [],
    "langchain.document_transformers.openai_functions": [],
    "langchain.embeddings": [],
    "langchain.embeddings.aleph_alpha": [],
    "langchain.embeddings.awa": [],
    "langchain.embeddings.azure_openai": [],
    "langchain.embeddings.baidu_qianfan_endpoint": [],
    "langchain.embeddings.base": [],
    "langchain.embeddings.bedrock": [],
    "langchain.embeddings.bookend": [],
    "langchain.embeddings.cache": [],
    "langchain.embeddings.clarifai": [],
    "langchain.embeddings.cloudflare_workersai": [],
    "langchain.embeddings.cohere": [],
    "langchain.embeddings.dashscope": [],
    "langchain.embeddings.databricks": [],
    "langchain.embeddings.deepinfra": [],
    "langchain.embeddings.edenai": [],
    "langchain.embeddings.elasticsearch": [],
    "langchain.embeddings.embaas": [],
    "langchain.embeddings.ernie": [],
    "langchain.embeddings.fake": [],
    "langchain.embeddings.fastembed": [],
    "langchain.embeddings.google_palm": [],
    "langchain.embeddings.gpt4all": [],
    "langchain.embeddings.gradient_ai": [],
    "langchain.embeddings.huggingface": [],
    "langchain.embeddings.huggingface_hub": [],
    "langchain.embeddings.infinity": [],
    "langchain.embeddings.javelin_ai_gateway": [],
    "langchain.embeddings.jina": [],
    "langchain.embeddings.johnsnowlabs": [],
    "langchain.embeddings.llamacpp": [],
    "langchain.embeddings.llm_rails": [],
    "langchain.embeddings.localai": [],
    "langchain.embeddings.minimax": [],
    "langchain.embeddings.mlflow": [],
    "langchain.embeddings.mlflow_gateway": [],
    "langchain.embeddings.modelscope_hub": [],
    "langchain.embeddings.mosaicml": [],
    "langchain.embeddings.nlpcloud": [],
    "langchain.embeddings.octoai_embeddings": [],
    "langchain.embeddings.ollama": [],
    "langchain.embeddings.openai": [],
    "langchain.embeddings.sagemaker_endpoint": [],
    "langchain.embeddings.self_hosted": [],
    "langchain.embeddings.self_hosted_hugging_face": [],
    "langchain.embeddings.sentence_transformer": [],
    "langchain.embeddings.spacy_embeddings": [],
    "langchain.embeddings.tensorflow_hub": [],
    "langchain.embeddings.vertexai": [],
    "langchain.embeddings.voyageai": [],
    "langchain.embeddings.xinference": [],
    "langchain.env": [],
    "langchain.evaluation": [],
    "langchain.evaluation.agents": [],
    "langchain.evaluation.agents.trajectory_eval_chain": [],
    "langchain.evaluation.agents.trajectory_eval_prompt": [],
    "langchain.evaluation.comparison": [],
    "langchain.evaluation.comparison.eval_chain": [],
    "langchain.evaluation.comparison.prompt": [],
    "langchain.evaluation.criteria": [],
    "langchain.evaluation.criteria.eval_chain": [],
    "langchain.evaluation.criteria.prompt": [],
    "langchain.evaluation.embedding_distance": [],
    "langchain.evaluation.embedding_distance.base": [],
    "langchain.evaluation.exact_match": [],
    "langchain.evaluation.exact_match.base": [],
    "langchain.evaluation.loading": [],
    "langchain.evaluation.parsing": [],
    "langchain.evaluation.parsing.base": [],
    "langchain.evaluation.parsing.json_distance": [],
    "langchain.evaluation.parsing.json_schema": [],
    "langchain.evaluation.qa": [],
    "langchain.evaluation.qa.eval_chain": [],
    "langchain.evaluation.qa.eval_prompt": [],
    "langchain.evaluation.qa.generate_chain": [],
    "langchain.evaluation.qa.generate_prompt": [],
    "langchain.evaluation.regex_match": [],
    "langchain.evaluation.regex_match.base": [],
    "langchain.evaluation.schema": [],
    "langchain.evaluation.scoring": [],
    "langchain.evaluation.scoring.eval_chain": [],
    "langchain.evaluation.scoring.prompt": [],
    "langchain.evaluation.string_distance": [],
    "langchain.evaluation.string_distance.base": [],
    "langchain.example_generator": [],
    "langchain.formatting": [],
    "langchain.globals": [],
    "langchain.graphs": [],
    "langchain.graphs.arangodb_graph": [],
    "langchain.graphs.falkordb_graph": [],
    "langchain.graphs.graph_document": [],
    "langchain.graphs.graph_store": [],
    "langchain.graphs.hugegraph": [],
    "langchain.graphs.kuzu_graph": [],
    "langchain.graphs.memgraph_graph": [],
    "langchain.graphs.nebula_graph": [],
    "langchain.graphs.neo4j_graph": [],
    "langchain.graphs.neptune_graph": [],
    "langchain.graphs.networkx_graph": [],
    "langchain.graphs.rdf_graph": [],
    "langchain.hub": [],
    "langchain.indexes": [],
    "langchain.indexes._api": [],
    "langchain.indexes._sql_record_manager": [],
    "langchain.indexes.graph": [],
    "langchain.indexes.prompts": [],
    "langchain.indexes.prompts.entity_extraction": [],
    "langchain.indexes.prompts.entity_summarization": [],
    "langchain.indexes.prompts.knowledge_triplet_extraction": [],
    "langchain.indexes.vectorstore": [],
    "langchain.input": [],
    "langchain.llms": [],
    "langchain.llms.ai21": [],
    "langchain.llms.aleph_alpha": [],
    "langchain.llms.amazon_api_gateway": [],
    "langchain.llms.anthropic": [],
    "langchain.llms.anyscale": [],
    "langchain.llms.arcee": [],
    "langchain.llms.aviary": [],
    "langchain.llms.azureml_endpoint": [],
    "langchain.llms.baidu_qianfan_endpoint": [],
    "langchain.llms.bananadev": [],
    "langchain.llms.base": [],
    "langchain.llms.baseten": [],
    "langchain.llms.beam": [],
    "langchain.llms.bedrock": [],
    "langchain.llms.bittensor": [],
    "langchain.llms.cerebriumai": [],
    "langchain.llms.chatglm": [],
    "langchain.llms.clarifai": [],
    "langchain.llms.cloudflare_workersai": [],
    "langchain.llms.cohere": [],
    "langchain.llms.ctransformers": [],
    "langchain.llms.ctranslate2": [],
    "langchain.llms.databricks": [],
    "langchain.llms.deepinfra": [],
    "langchain.llms.deepsparse": [],
    "langchain.llms.edenai": [],
    "langchain.llms.fake": [],
    "langchain.llms.fireworks": [],
    "langchain.llms.forefrontai": [],
    "langchain.llms.gigachat": [],
    "langchain.llms.google_palm": [],
    "langchain.llms.gooseai": [],
    "langchain.llms.gpt4all": [],
    "langchain.llms.gradient_ai": [],
    "langchain.llms.huggingface_endpoint": [],
    "langchain.llms.huggingface_hub": [],
    "langchain.llms.huggingface_pipeline": [],
    "langchain.llms.huggingface_text_gen_inference": [],
    "langchain.llms.human": [],
    "langchain.llms.javelin_ai_gateway": [],
    "langchain.llms.koboldai": [],
    "langchain.llms.llamacpp": [],
    "langchain.llms.loading": [],
    "langchain.llms.manifest": [],
    "langchain.llms.minimax": [],
    "langchain.llms.mlflow": [],
    "langchain.llms.mlflow_ai_gateway": [],
    "langchain.llms.modal": [],
    "langchain.llms.mosaicml": [],
    "langchain.llms.nlpcloud": [],
    "langchain.llms.octoai_endpoint": [],
    "langchain.llms.ollama": [],
    "langchain.llms.opaqueprompts": [],
    "langchain.llms.openai": [],
    "langchain.llms.openllm": [],
    "langchain.llms.openlm": [],
    "langchain.llms.pai_eas_endpoint": [],
    "langchain.llms.petals": [],
    "langchain.llms.pipelineai": [],
    "langchain.llms.predibase": [],
    "langchain.llms.predictionguard": [],
    "langchain.llms.promptlayer_openai": [],
    "langchain.llms.replicate": [],
    "langchain.llms.rwkv": [],
    "langchain.llms.sagemaker_endpoint": [],
    "langchain.llms.self_hosted": [],
    "langchain.llms.self_hosted_hugging_face": [],
    "langchain.llms.stochasticai": [],
    "langchain.llms.symblai_nebula": [],
    "langchain.llms.textgen": [],
    "langchain.llms.titan_takeoff": [],
    "langchain.llms.titan_takeoff_pro": [],
    "langchain.llms.together": [],
    "langchain.llms.tongyi": [],
    "langchain.llms.utils": [],
    "langchain.llms.vertexai": [],
    "langchain.llms.vllm": [],
    "langchain.llms.volcengine_maas": [],
    "langchain.llms.watsonxllm": [],
    "langchain.llms.writer": [],
    "langchain.llms.xinference": [],
    "langchain.llms.yandex": [],
    "langchain.load": [],
    "langchain.load.dump": [],
    "langchain.load.load": [],
    "langchain.load.serializable": [],
    "langchain.memory": [],
    "langchain.memory.buffer": [],
    "langchain.memory.buffer_window": [],
    "langchain.memory.chat_memory": [],
    "langchain.memory.chat_message_histories": [],
    "langchain.memory.chat_message_histories.astradb": [],
    "langchain.memory.chat_message_histories.cassandra": [],
    "langchain.memory.chat_message_histories.cosmos_db": [],
    "langchain.memory.chat_message_histories.dynamodb": [],
    "langchain.memory.chat_message_histories.elasticsearch": [],
    "langchain.memory.chat_message_histories.file": [],
    "langchain.memory.chat_message_histories.firestore": [],
    "langchain.memory.chat_message_histories.in_memory": [],
    "langchain.memory.chat_message_histories.momento": [],
    "langchain.memory.chat_message_histories.mongodb": [],
    "langchain.memory.chat_message_histories.neo4j": [],
    "langchain.memory.chat_message_histories.postgres": [],
    "langchain.memory.chat_message_histories.redis": [],
    "langchain.memory.chat_message_histories.rocksetdb": [],
    "langchain.memory.chat_message_histories.singlestoredb": [],
    "langchain.memory.chat_message_histories.sql": [],
    "langchain.memory.chat_message_histories.streamlit": [],
    "langchain.memory.chat_message_histories.upstash_redis": [],
    "langchain.memory.chat_message_histories.xata": [],
    "langchain.memory.chat_message_histories.zep": [],
    "langchain.memory.combined": [],
    "langchain.memory.entity": [],
    "langchain.memory.kg": [],
    "langchain.memory.motorhead_memory": [],
    "langchain.memory.prompt": [],
    "langchain.memory.readonly": [],
    "langchain.memory.simple": [],
    "langchain.memory.summary": [],
    "langchain.memory.summary_buffer": [],
    "langchain.memory.token_buffer": [],
    "langchain.memory.utils": [],
    "langchain.memory.vectorstore": [],
    "langchain.memory.zep_memory": [],
    "langchain.model_laboratory": [],
    "langchain.output_parsers": [],
    "langchain.output_parsers.boolean": [],
    "langchain.output_parsers.combining": [],
    "langchain.output_parsers.datetime": [],
    "langchain.output_parsers.enum": [],
    "langchain.output_parsers.ernie_functions": [],
    "langchain.output_parsers.fix": [],
    "langchain.output_parsers.format_instructions": [],
    "langchain.output_parsers.json": [],
    "langchain.output_parsers.list": [],
    "langchain.output_parsers.loading": [],
    "langchain.output_parsers.openai_functions": [],
    "langchain.output_parsers.openai_tools": [],
    "langchain.output_parsers.pandas_dataframe": [],
    "langchain.output_parsers.prompts": [],
    "langchain.output_parsers.pydantic": [],
    "langchain.output_parsers.rail_parser": [],
    "langchain.output_parsers.regex": [],
    "langchain.output_parsers.regex_dict": [],
    "langchain.output_parsers.retry": [],
    "langchain.output_parsers.structured": [],
    "langchain.output_parsers.xml": [],
    "langchain.output_parsers.yaml": [],
    "langchain.prompts": [],
    "langchain.prompts.base": [],
    "langchain.prompts.chat": [],
    "langchain.prompts.example_selector": [],
    "langchain.prompts.example_selector.base": [],
    "langchain.prompts.example_selector.length_based": [],
    "langchain.prompts.example_selector.ngram_overlap": [],
    "langchain.prompts.example_selector.semantic_similarity": [],
    "langchain.prompts.few_shot": [],
    "langchain.prompts.few_shot_with_templates": [],
    "langchain.prompts.loading": [],
    "langchain.prompts.pipeline": [],
    "langchain.prompts.prompt": [],
    "langchain.pydantic_v1": [],
    "langchain.pydantic_v1.dataclasses": [],
    "langchain.pydantic_v1.main": [],
    "langchain.python": [],
    "langchain.requests": [],
    "langchain.retrievers": [],
    "langchain.retrievers.arcee": [],
    "langchain.retrievers.arxiv": [],
    "langchain.retrievers.azure_ai_search": [],
    "langchain.retrievers.bedrock": [],
    "langchain.retrievers.bm25": [],
    "langchain.retrievers.chaindesk": [],
    "langchain.retrievers.chatgpt_plugin_retriever": [],
    "langchain.retrievers.cohere_rag_retriever": [],
    "langchain.retrievers.contextual_compression": [],
    "langchain.retrievers.databerry": [],
    "langchain.retrievers.docarray": [],
    "langchain.retrievers.document_compressors": [],
    "langchain.retrievers.document_compressors.base": [],
    "langchain.retrievers.document_compressors.chain_extract": [],
    "langchain.retrievers.document_compressors.chain_extract_prompt": [],
    "langchain.retrievers.document_compressors.chain_filter": [],
    "langchain.retrievers.document_compressors.chain_filter_prompt": [],
    "langchain.retrievers.document_compressors.cohere_rerank": [],
    "langchain.retrievers.document_compressors.cross_encoder": [],
    "langchain.retrievers.document_compressors.cross_encoder_rerank": [],
    "langchain.retrievers.document_compressors.embeddings_filter": [],
    "langchain.retrievers.document_compressors.flashrank_rerank": [],
    "langchain.retrievers.elastic_search_bm25": [],
    "langchain.retrievers.embedchain": [],
    "langchain.retrievers.ensemble": [],
    "langchain.retrievers.google_cloud_documentai_warehouse": [],
    "langchain.retrievers.google_vertex_ai_search": [],
    "langchain.retrievers.kay": [],
    "langchain.retrievers.kendra": [],
    "langchain.retrievers.knn": [],
    "langchain.retrievers.llama_index": [],
    "langchain.retrievers.merger_retriever": [],
    "langchain.retrievers.metal": [],
    "langchain.retrievers.milvus": [],
    "langchain.retrievers.multi_query": [],
    "langchain.retrievers.multi_vector": [],
    "langchain.retrievers.outline": [],
    "langchain.retrievers.parent_document_retriever": [],
    "langchain.retrievers.pinecone_hybrid_search": [],
    "langchain.retrievers.pubmed": [],
    "langchain.retrievers.pupmed": [],
    "langchain.retrievers.re_phraser": [],
    "langchain.retrievers.remote_retriever": [],
    "langchain.retrievers.self_query": [],
    "langchain.retrievers.self_query.astradb": [],
    "langchain.retrievers.self_query.base": [],
    "langchain.retrievers.self_query.chroma": [],
    "langchain.retrievers.self_query.dashvector": [],
    "langchain.retrievers.self_query.databricks_vector_search": [],
    "langchain.retrievers.self_query.deeplake": [],
    "langchain.retrievers.self_query.dingo": [],
    "langchain.retrievers.self_query.elasticsearch": [],
    "langchain.retrievers.self_query.milvus": [],
    "langchain.retrievers.self_query.mongodb_atlas": [],
    "langchain.retrievers.self_query.myscale": [],
    "langchain.retrievers.self_query.opensearch": [],
    "langchain.retrievers.self_query.pgvector": [],
    "langchain.retrievers.self_query.pinecone": [],
    "langchain.retrievers.self_query.qdrant": [],
    "langchain.retrievers.self_query.redis": [],
    "langchain.retrievers.self_query.supabase": [],
    "langchain.retrievers.self_query.tencentvectordb": [],
    "langchain.retrievers.self_query.timescalevector": [],
    "langchain.retrievers.self_query.vectara": [],
    "langchain.retrievers.self_query.weaviate": [],
    "langchain.retrievers.svm": [],
    "langchain.retrievers.tavily_search_api": [],
    "langchain.retrievers.tfidf": [],
    "langchain.retrievers.time_weighted_retriever": [],
    "langchain.retrievers.vespa_retriever": [],
    "langchain.retrievers.weaviate_hybrid_search": [],
    "langchain.retrievers.web_research": [],
    "langchain.retrievers.wikipedia": [],
    "langchain.retrievers.you": [],
    "langchain.retrievers.zep": [],
    "langchain.retrievers.zilliz": [],
    "langchain.runnables": [],
    "langchain.runnables.hub": [],
    "langchain.runnables.openai_functions": [],
    "langchain.schema": [],
    "langchain.schema.agent": [],
    "langchain.schema.cache": [],
    "langchain.schema.callbacks": [],
    "langchain.schema.callbacks.base": [],
    "langchain.schema.callbacks.manager": [],
    "langchain.schema.callbacks.stdout": [],
    "langchain.schema.callbacks.streaming_stdout": [],
    "langchain.schema.callbacks.tracers": [],
    "langchain.schema.callbacks.tracers.base": [],
    "langchain.schema.callbacks.tracers.evaluation": [],
    "langchain.schema.callbacks.tracers.langchain": [],
    "langchain.schema.callbacks.tracers.langchain_v1": [],
    "langchain.schema.callbacks.tracers.log_stream": [],
    "langchain.schema.callbacks.tracers.root_listeners": [],
    "langchain.schema.callbacks.tracers.run_collector": [],
    "langchain.schema.callbacks.tracers.schemas": [],
    "langchain.schema.callbacks.tracers.stdout": [],
    "langchain.schema.chat": [],
    "langchain.schema.chat_history": [],
    "langchain.schema.document": [],
    "langchain.schema.embeddings": [],
    "langchain.schema.exceptions": [],
    "langchain.schema.language_model": [],
    "langchain.schema.memory": [],
    "langchain.schema.messages": [],
    "langchain.schema.output": [],
    "langchain.schema.output_parser": [],
    "langchain.schema.prompt": [],
    "langchain.schema.prompt_template": [],
    "langchain.schema.retriever": [],
    "langchain.schema.runnable": [],
    "langchain.schema.runnable.base": [],
    "langchain.schema.runnable.branch": [],
    "langchain.schema.runnable.config": [],
    "langchain.schema.runnable.configurable": [],
    "langchain.schema.runnable.fallbacks": [],
    "langchain.schema.runnable.history": [],
    "langchain.schema.runnable.passthrough": [],
    "langchain.schema.runnable.retry": [],
    "langchain.schema.runnable.router": [],
    "langchain.schema.runnable.utils": [],
    "langchain.schema.storage": [],
    "langchain.schema.vectorstore": [],
    "langchain.serpapi": [],
    "langchain.smith": [],
    "langchain.smith.evaluation": [],
    "langchain.smith.evaluation.config": [],
    "langchain.smith.evaluation.name_generation": [],
    "langchain.smith.evaluation.progress": [],
    "langchain.smith.evaluation.runner_utils": [],
    "langchain.smith.evaluation.string_run_evaluator": [],
    "langchain.smith.evaluation.utils": [],
    "langchain.sql_database": [],
    "langchain.storage": [],
    "langchain.storage._lc_store": [],
    "langchain.storage.encoder_backed": [],
    "langchain.storage.exceptions": [],
    "langchain.storage.file_system": [],
    "langchain.storage.in_memory": [],
    "langchain.storage.redis": [],
    "langchain.storage.upstash_redis": [],
    "langchain.text_splitter": [],
    "langchain.tools": [],
    "langchain.tools.ainetwork": [],
    "langchain.tools.ainetwork.app": [],
    "langchain.tools.ainetwork.base": [],
    "langchain.tools.ainetwork.owner": [],
    "langchain.tools.ainetwork.rule": [],
    "langchain.tools.ainetwork.transfer": [],
    "langchain.tools.ainetwork.value": [],
    "langchain.tools.amadeus": [],
    "langchain.tools.amadeus.base": [],
    "langchain.tools.amadeus.closest_airport": [],
    "langchain.tools.amadeus.flight_search": [],
    "langchain.tools.arxiv": [],
    "langchain.tools.arxiv.tool": [],
    "langchain.tools.azure_cognitive_services": [],
    "langchain.tools.azure_cognitive_services.form_recognizer": [],
    "langchain.tools.azure_cognitive_services.image_analysis": [],
    "langchain.tools.azure_cognitive_services.speech2text": [],
    "langchain.tools.azure_cognitive_services.text2speech": [],
    "langchain.tools.azure_cognitive_services.text_analytics_health": [],
    "langchain.tools.base": [],
    "langchain.tools.bearly": [],
    "langchain.tools.bearly.tool": [],
    "langchain.tools.bing_search": [],
    "langchain.tools.bing_search.tool": [],
    "langchain.tools.brave_search": [],
    "langchain.tools.brave_search.tool": [],
    "langchain.tools.clickup": [],
    "langchain.tools.clickup.tool": [],
    "langchain.tools.convert_to_openai": [],
    "langchain.tools.dataforseo_api_search": [],
    "langchain.tools.dataforseo_api_search.tool": [],
    "langchain.tools.ddg_search": [],
    "langchain.tools.ddg_search.tool": [],
    "langchain.tools.e2b_data_analysis": [],
    "langchain.tools.e2b_data_analysis.tool": [],
    "langchain.tools.edenai": [],
    "langchain.tools.edenai.audio_speech_to_text": [],
    "langchain.tools.edenai.audio_text_to_speech": [],
    "langchain.tools.edenai.edenai_base_tool": [],
    "langchain.tools.edenai.image_explicitcontent": [],
    "langchain.tools.edenai.image_objectdetection": [],
    "langchain.tools.edenai.ocr_identityparser": [],
    "langchain.tools.edenai.ocr_invoiceparser": [],
    "langchain.tools.edenai.text_moderation": [],
    "langchain.tools.eleven_labs": [],
    "langchain.tools.eleven_labs.models": [],
    "langchain.tools.eleven_labs.text2speech": [],
    "langchain.tools.file_management": [],
    "langchain.tools.file_management.copy": [],
    "langchain.tools.file_management.delete": [],
    "langchain.tools.file_management.file_search": [],
    "langchain.tools.file_management.list_dir": [],
    "langchain.tools.file_management.move": [],
    "langchain.tools.file_management.read": [],
    "langchain.tools.file_management.write": [],
    "langchain.tools.github": [],
    "langchain.tools.github.tool": [],
    "langchain.tools.gitlab": [],
    "langchain.tools.gitlab.tool": [],
    "langchain.tools.gmail": [],
    "langchain.tools.gmail.base": [],
    "langchain.tools.gmail.create_draft": [],
    "langchain.tools.gmail.get_message": [],
    "langchain.tools.gmail.get_thread": [],
    "langchain.tools.gmail.search": [],
    "langchain.tools.gmail.send_message": [],
    "langchain.tools.golden_query": [],
    "langchain.tools.golden_query.tool": [],
    "langchain.tools.google_cloud": [],
    "langchain.tools.google_cloud.texttospeech": [],
    "langchain.tools.google_finance": [],
    "langchain.tools.google_finance.tool": [],
    "langchain.tools.google_jobs": [],
    "langchain.tools.google_jobs.tool": [],
    "langchain.tools.google_lens": [],
    "langchain.tools.google_lens.tool": [],
    "langchain.tools.google_places": [],
    "langchain.tools.google_places.tool": [],
    "langchain.tools.google_scholar": [],
    "langchain.tools.google_scholar.tool": [],
    "langchain.tools.google_search": [],
    "langchain.tools.google_search.tool": [],
    "langchain.tools.google_serper": [],
    "langchain.tools.google_serper.tool": [],
    "langchain.tools.google_trends": [],
    "langchain.tools.google_trends.tool": [],
    "langchain.tools.graphql": [],
    "langchain.tools.graphql.tool": [],
    "langchain.tools.human": [],
    "langchain.tools.human.tool": [],
    "langchain.tools.ifttt": [],
    "langchain.tools.interaction": [],
    "langchain.tools.interaction.tool": [],
    "langchain.tools.jira": [],
    "langchain.tools.jira.tool": [],
    "langchain.tools.json": [],
    "langchain.tools.json.tool": [],
    "langchain.tools.memorize": [],
    "langchain.tools.memorize.tool": [],
    "langchain.tools.merriam_webster": [],
    "langchain.tools.merriam_webster.tool": [],
    "langchain.tools.metaphor_search": [],
    "langchain.tools.metaphor_search.tool": [],
    "langchain.tools.multion": [],
    "langchain.tools.multion.close_session": [],
    "langchain.tools.multion.create_session": [],
    "langchain.tools.multion.update_session": [],
    "langchain.tools.nasa": [],
    "langchain.tools.nasa.tool": [],
    "langchain.tools.nuclia": [],
    "langchain.tools.nuclia.tool": [],
    "langchain.tools.office365": [],
    "langchain.tools.office365.base": [],
    "langchain.tools.office365.create_draft_message": [],
    "langchain.tools.office365.events_search": [],
    "langchain.tools.office365.messages_search": [],
    "langchain.tools.office365.send_event": [],
    "langchain.tools.office365.send_message": [],
    "langchain.tools.openapi": [],
    "langchain.tools.openapi.utils": [],
    "langchain.tools.openapi.utils.api_models": [],
    "langchain.tools.openapi.utils.openapi_utils": [],
    "langchain.tools.openweathermap": [],
    "langchain.tools.openweathermap.tool": [],
    "langchain.tools.playwright": [],
    "langchain.tools.playwright.base": [],
    "langchain.tools.playwright.click": [],
    "langchain.tools.playwright.current_page": [],
    "langchain.tools.playwright.extract_hyperlinks": [],
    "langchain.tools.playwright.extract_text": [],
    "langchain.tools.playwright.get_elements": [],
    "langchain.tools.playwright.navigate": [],
    "langchain.tools.playwright.navigate_back": [],
    "langchain.tools.plugin": [],
    "langchain.tools.powerbi": [],
    "langchain.tools.powerbi.tool": [],
    "langchain.tools.pubmed": [],
    "langchain.tools.pubmed.tool": [],
    "langchain.tools.python": [],
    "langchain.tools.reddit_search": [],
    "langchain.tools.reddit_search.tool": [],
    "langchain.tools.render": [],
    "langchain.tools.requests": [],
    "langchain.tools.requests.tool": [],
    "langchain.tools.retriever": [],
    "langchain.tools.scenexplain": [],
    "langchain.tools.scenexplain.tool": [],
    "langchain.tools.searchapi": [],
    "langchain.tools.searchapi.tool": [],
    "langchain.tools.searx_search": [],
    "langchain.tools.searx_search.tool": [],
    "langchain.tools.shell": [],
    "langchain.tools.shell.tool": [],
    "langchain.tools.slack": [],
    "langchain.tools.slack.base": [],
    "langchain.tools.slack.get_channel": [],
    "langchain.tools.slack.get_message": [],
    "langchain.tools.slack.schedule_message": [],
    "langchain.tools.slack.send_message": [],
    "langchain.tools.sleep": [],
    "langchain.tools.sleep.tool": [],
    "langchain.tools.spark_sql": [],
    "langchain.tools.spark_sql.tool": [],
    "langchain.tools.sql_database": [],
    "langchain.tools.sql_database.prompt": [],
    "langchain.tools.sql_database.tool": [],
    "langchain.tools.stackexchange": [],
    "langchain.tools.stackexchange.tool": [],
    "langchain.tools.steam": [],
    "langchain.tools.steam.tool": [],
    "langchain.tools.steamship_image_generation": [],
    "langchain.tools.steamship_image_generation.tool": [],
    "langchain.tools.tavily_search": [],
    "langchain.tools.tavily_search.tool": [],
    "langchain.tools.vectorstore": [],
    "langchain.tools.vectorstore.tool": [],
    "langchain.tools.wikipedia": [],
    "langchain.tools.wikipedia.tool": [],
    "langchain.tools.wolfram_alpha": [],
    "langchain.tools.wolfram_alpha.tool": [],
    "langchain.tools.yahoo_finance_news": [],
    "langchain.tools.youtube": [],
    "langchain.tools.youtube.search": [],
    "langchain.tools.zapier": [],
    "langchain.tools.zapier.tool": [],
    "langchain.utilities": [],
    "langchain.utilities.alpha_vantage": [],
    "langchain.utilities.anthropic": [],
    "langchain.utilities.apify": [],
    "langchain.utilities.arcee": [],
    "langchain.utilities.arxiv": [],
    "langchain.utilities.asyncio": [],
    "langchain.utilities.awslambda": [],
    "langchain.utilities.bibtex": [],
    "langchain.utilities.bing_search": [],
    "langchain.utilities.brave_search": [],
    "langchain.utilities.clickup": [],
    "langchain.utilities.dalle_image_generator": [],
    "langchain.utilities.dataforseo_api_search": [],
    "langchain.utilities.duckduckgo_search": [],
    "langchain.utilities.github": [],
    "langchain.utilities.gitlab": [],
    "langchain.utilities.golden_query": [],
    "langchain.utilities.google_finance": [],
    "langchain.utilities.google_jobs": [],
    "langchain.utilities.google_lens": [],
    "langchain.utilities.google_places_api": [],
    "langchain.utilities.google_scholar": [],
    "langchain.utilities.google_search": [],
    "langchain.utilities.google_serper": [],
    "langchain.utilities.google_trends": [],
    "langchain.utilities.graphql": [],
    "langchain.utilities.jira": [],
    "langchain.utilities.loading": [],
    "langchain.utilities.max_compute": [],
    "langchain.utilities.merriam_webster": [],
    "langchain.utilities.metaphor_search": [],
    "langchain.utilities.nasa": [],
    "langchain.utilities.opaqueprompts": [],
    "langchain.utilities.openapi": [],
    "langchain.utilities.openweathermap": [],
    "langchain.utilities.outline": [],
    "langchain.utilities.portkey": [],
    "langchain.utilities.powerbi": [],
    "langchain.utilities.pubmed": [],
    "langchain.utilities.python": [],
    "langchain.utilities.reddit_search": [],
    "langchain.utilities.redis": [],
    "langchain.utilities.requests": [],
    "langchain.utilities.scenexplain": [],
    "langchain.utilities.searchapi": [],
    "langchain.utilities.searx_search": [],
    "langchain.utilities.serpapi": [],
    "langchain.utilities.spark_sql": [],
    "langchain.utilities.sql_database": [],
    "langchain.utilities.stackexchange": [],
    "langchain.utilities.steam": [],
    "langchain.utilities.tavily_search": [],
    "langchain.utilities.tensorflow_datasets": [],
    "langchain.utilities.twilio": [],
    "langchain.utilities.vertexai": [],
    "langchain.utilities.wikipedia": [],
    "langchain.utilities.wolfram_alpha": [],
    "langchain.utilities.zapier": [],
    "langchain.utils": [],
    "langchain.utils.aiter": [],
    "langchain.utils.env": [],
    "langchain.utils.ernie_functions": [],
    "langchain.utils.formatting": [],
    "langchain.utils.html": [],
    "langchain.utils.input": [],
    "langchain.utils.iter": [],
    "langchain.utils.json_schema": [],
    "langchain.utils.loading": [],
    "langchain.utils.math": [],
    "langchain.utils.openai": [],
    "langchain.utils.openai_functions": [],
    "langchain.utils.pydantic": [],
    "langchain.utils.strings": [],
    "langchain.utils.utils": [],
    "langchain.vectorstores": [],
    "langchain.vectorstores.alibabacloud_opensearch": [],
    "langchain.vectorstores.analyticdb": [],
    "langchain.vectorstores.annoy": [],
    "langchain.vectorstores.astradb": [],
    "langchain.vectorstores.atlas": [],
    "langchain.vectorstores.awadb": [],
    "langchain.vectorstores.azure_cosmos_db": [],
    "langchain.vectorstores.azuresearch": [],
    "langchain.vectorstores.bageldb": [],
    "langchain.vectorstores.baiducloud_vector_search": [],
    "langchain.vectorstores.base": [],
    "langchain.vectorstores.cassandra": [],
    "langchain.vectorstores.chroma": [],
    "langchain.vectorstores.clarifai": [],
    "langchain.vectorstores.clickhouse": [],
    "langchain.vectorstores.dashvector": [],
    "langchain.vectorstores.databricks_vector_search": [],
    "langchain.vectorstores.deeplake": [],
    "langchain.vectorstores.dingo": [],
    "langchain.vectorstores.docarray": [],
    "langchain.vectorstores.docarray.base": [],
    "langchain.vectorstores.docarray.hnsw": [],
    "langchain.vectorstores.docarray.in_memory": [],
    "langchain.vectorstores.elastic_vector_search": [],
    "langchain.vectorstores.elasticsearch": [],
    "langchain.vectorstores.epsilla": [],
    "langchain.vectorstores.faiss": [],
    "langchain.vectorstores.hippo": [],
    "langchain.vectorstores.hologres": [],
    "langchain.vectorstores.lancedb": [],
    "langchain.vectorstores.llm_rails": [],
    "langchain.vectorstores.marqo": [],
    "langchain.vectorstores.matching_engine": [],
    "langchain.vectorstores.meilisearch": [],
    "langchain.vectorstores.milvus": [],
    "langchain.vectorstores.momento_vector_index": [],
    "langchain.vectorstores.mongodb_atlas": [],
    "langchain.vectorstores.myscale": [],
    "langchain.vectorstores.neo4j_vector": [],
    "langchain.vectorstores.nucliadb": [],
    "langchain.vectorstores.opensearch_vector_search": [],
    "langchain.vectorstores.pgembedding": [],
    "langchain.vectorstores.pgvecto_rs": [],
    "langchain.vectorstores.pgvector": [],
    "langchain.vectorstores.pinecone": [],
    "langchain.vectorstores.qdrant": [],
    "langchain.vectorstores.redis": [],
    "langchain.vectorstores.redis.base": [],
    "langchain.vectorstores.redis.filters": [],
    "langchain.vectorstores.redis.schema": [],
    "langchain.vectorstores.rocksetdb": [],
    "langchain.vectorstores.scann": [],
    "langchain.vectorstores.semadb": [],
    "langchain.vectorstores.singlestoredb": [],
    "langchain.vectorstores.sklearn": [],
    "langchain.vectorstores.sqlitevss": [],
    "langchain.vectorstores.starrocks": [],
    "langchain.vectorstores.supabase": [],
    "langchain.vectorstores.tair": [],
    "langchain.vectorstores.tencentvectordb": [],
    "langchain.vectorstores.tigris": [],
    "langchain.vectorstores.tiledb": [],
    "langchain.vectorstores.timescalevector": [],
    "langchain.vectorstores.typesense": [],
    "langchain.vectorstores.usearch": [],
    "langchain.vectorstores.utils": [],
    "langchain.vectorstores.vald": [],
    "langchain.vectorstores.vearch": [],
    "langchain.vectorstores.vectara": [],
    "langchain.vectorstores.vespa": [],
    "langchain.vectorstores.weaviate": [],
    "langchain.vectorstores.xata": [],
    "langchain.vectorstores.yellowbrick": [],
    "langchain.vectorstores.zep": [],
    "langchain.vectorstores.zilliz": []
  },
  "langchain-core": {
    "langchain_core": [],
    "langchain_core._api": [],
    "langchain_core._api.beta_decorator": [],
    "langchain_core._api.deprecation": [],
    "langchain_core._api.internal": [],
    "langchain_core._api.path": [],
    "langchain_core.agents": [],
    "langchain_core.beta": [],
    "langchain_core.beta.runnables": [],
    "langchain_core.beta.runnables.context": [],
    "langchain_core.caches": [],
    "langchain_core.callbacks": [],
    "langchain_core.callbacks.base": [],
    "langchain_core.callbacks.file": [],
    "langchain_core.callbacks.manager": [],
    "langchain_core.callbacks.stdout": [],
    "langchain_core.callbacks.streaming_stdout": [],
    "langchain_core.chat_history": [],
    "langchain_core.chat_loaders": [],
    "langchain_core.chat_sessions": [],
    "langchain_core.document_loaders": [],
    "langchain_core.document_loaders.base": [],
    "langchain_core.document_loaders.blob_loaders": [],
    "langchain_core.documents": [],
    "langchain_core.documents.base": [],
    "langchain_core.documents.compressor": [],
    "langchain_core.documents.transformers": [],
    "langchain_core.embeddings": [],
    "langchain_core.embeddings.embeddings": [],
    "langchain_core.embeddings.fake": [],
    "langchain_core.env": [],
    "langchain_core.example_selectors": [],
    "langchain_core.example_selectors.base": [],
    "langchain_core.example_selectors.length_based": [],
    "langchain_core.example_selectors.semantic_similarity": [],
    "langchain_core.exceptions": [],
    "langchain_core.globals": [],
    "langchain_core.indexing": [],
    "langchain_core.indexing.api": [],
    "langchain_core.indexing.base": [],
    "langchain_core.language_models": [],
    "langchain_core.language_models.base": [],
    "langchain_core.language_models.chat_models": [],
    "langchain_core.language_models.fake": [],
    "langchain_core.language_models.fake_chat_models": [],
    "langchain_core.language_models.llms": [],
    "langchain_core.load": [],
    "langchain_core.load.dump": [],
    "langchain_core.load.load": [],
    "langchain_core.load.mapping": [],
    "langchain_core.load.serializable": [],
    "langchain_core.memory": [],
    "langchain_core.messages": [],
    "langchain_core.messages.ai": [],
    "langchain_core.messages.base": [],
    "langchain_core.messages.chat": [],
    "langchain_core.messages.function": [],
    "langchain_core.messages.human": [],
    "langchain_core.messages.system": [],
    "langchain_core.messages.tool": [],
    "langchain_core.messages.utils": [],
    "langchain_core.output_parsers": [],
    "langchain_core.output_parsers.base": [],
    "langchain_core.output_parsers.format_instructions": [],
    "langchain_core.output_parsers.json": [],
    "langchain_core.output_parsers.list": [],
    "langchain_core.output_parsers.openai_functions": [],
    "langchain_core.output_parsers.openai_tools": [],
    "langchain_core.output_parsers.pydantic": [],
    "langchain_core.output_parsers.string": [],
    "langchain_core.output_parsers.transform": [],
    "langchain_core.output_parsers.xml": [],
    "langchain_core.outputs": [],
    "langchain_core.outputs.chat_generation": [],
    "langchain_core.outputs.chat_result": [],
    "langchain_core.outputs.generation": [],
    "langchain_core.outputs.llm_result": [],
    "langchain_core.outputs.run_info": [],
    "langchain_core.prompt_values": [],
    "langchain_core.prompts": [],
    "langchain_core.prompts.base": [],
    "langchain_core.prompts.chat": [],
    "langchain_core.prompts.few_shot": [],
    "langchain_core.prompts.few_shot_with_templates": [],
    "langchain_core.prompts.image": [],
    "langchain_core.prompts.loading": [],
    "langchain_core.prompts.pipeline": [],
    "langchain_core.prompts.prompt": [],
    "langchain_core.prompts.string": [],
    "langchain_core.prompts.structured": [],
    "langchain_core.pydantic_v1": [],
    "langchain_core.pydantic_v1.dataclasses": [],
    "langchain_core.pydantic_v1.main": [],
    "langchain_core.retrievers": [],
    "langchain_core.runnables": [],
    "langchain_core.runnables.base": [],
    "langchain_core.runnables.branch": [],
    "langchain_core.runnables.config": [],
    "langchain_core.runnables.configurable": [],
    "langchain_core.runnables.fallbacks": [],
    "langchain_core.runnables.graph": [],
    "langchain_core.runnables.graph_ascii": [],
    "langchain_core.runnables.graph_mermaid": [],
    "langchain_core.runnables.graph_png": [],
    "langchain_core.runnables.history": [],
    "langchain_core.runnables.learnable": [],
    "langchain_core.runnables.passthrough": [],
    "langchain_core.runnables.retry": [],
    "langchain_core.runnables.router": [],
    "langchain_core.runnables.schema": [],
    "langchain_core.runnables.utils": [],
    "langchain_core.stores": [],
    "langchain_core.structured_query": [],
    "langchain_core.sys_info": [],
    "langchain_core.tools": [],
    "langchain_core.tracers": [],
    "langchain_core.tracers._streaming": [],
    "langchain_core.tracers.base": [],
    "langchain_core.tracers.context": [],
    "langchain_core.tracers.core": [],
    "langchain_core.tracers.evaluation": [],
    "langchain_core.tracers.event_stream": [],
    "langchain_core.tracers.langchain": [],
    "langchain_core.tracers.langchain_v1": [],
    "langchain_core.tracers.log_stream": [],
    "langchain_core.tracers.memory_stream": [],
    "langchain_core.tracers.root_listeners": [],
    "langchain_core.tracers.run_collector": [],
    "langchain_core.tracers.schemas": [],
    "langchain_core.tracers.stdout": [],
    "langchain_core.utils": [],
    "langchain_core.utils._merge": [],
    "langchain_core.utils.aiter": [],
    "langchain_core.utils.env": [],
    "langchain_core.utils.formatting": [],
    "langchain_core.utils.function_calling": [],
    "langchain_core.utils.html": [],
    "langchain_core.utils.image": [],
    "langchain_core.utils.input": [],
    "langchain_core.utils.interactive_env": [],
    "langchain_core.utils.iter": [],
    "langchain_core.utils.json": [],
    "langchain_core.utils.json_schema": [],
    "langchain_core.utils.loading": [],
    "langchain_core.utils.mustache": [],
    "langchain_core.utils.pydantic": [],
    "langchain_core.utils.strings": [],
    "langchain_core.utils.utils": [],
    "langchain_core.vectorstores": []
  },
  "langchain-text-splitters": {
    "langchain_text_splitters": [],
    "langchain_text_splitters.base": [],
    "langchain_text_splitters.character": [],
    "langchain_text_splitters.html": [],
    "langchain_text_splitters.json": [],
    "langchain_text_splitters.konlpy": [],
    "langchain_text_splitters.latex": [],
    "langchain_text_splitters.markdown": [],
    "langchain_text_splitters.nltk": [],
    "langchain_text_splitters.python": [],
    "langchain_text_splitters.sentence_transformers": [],
    "langchain_text_splitters.spacy": []
  },
  "langsmith": {
    "langsmith": [],
    "langsmith._expect": [],
    "langsmith._internal": [],
    "langsmith._internal._aiter": [],
    "langsmith._internal._edit_distance": [],
    "langsmith._internal._embedding_distance": [],
    "langsmith._testing": [],
    "langsmith.anonymizer": [],
    "langsmith.beta": [],
    "langsmith.beta._evals": [],
    "langsmith.beta._utils": [],
    "langsmith.cli": [],
    "langsmith.cli.main": [],
    "langsmith.client": [],
    "langsmith.env": [],
    "langsmith.env._git": [],
    "langsmith.env._runtime_env": [],
    "langsmith.evaluation": [],
    "langsmith.evaluation._arunner": [],
    "langsmith.evaluation._name_generation": [],
    "langsmith.evaluation._runner": [],
    "langsmith.evaluation.evaluator": [],
    "langsmith.evaluation.integrations": [],
    "langsmith.evaluation.integrations._langchain": [],
    "langsmith.evaluation.string_evaluator": [],
    "langsmith.run_helpers": [],
    "langsmith.run_trees": [],
    "langsmith.schemas": [],
    "langsmith.utils": [],
    "langsmith.wrappers": [],
    "langsmith.wrappers._openai": []
  },
  "libclang": {
    "clang": [],
    "clang.cindex": [],
    "clang.enumerations": [],
    "clang.native": []
  },
  "lxml": {
    "lxml": []
  },
  "mako": {
    "mako": []
  },
  "markdown": {
    "markdown": []
  },
  "markdown-it-py": {
    "markdown_it": []
  },
  "markupsafe": {
    "markupsafe": [],
    "markupsafe._native": []
  },
  "matplotlib": {
    "matplotlib": [],
    "mpl_toolkits": [],
    "pylab": []
  },
  "matplotlib-inline": {
    "matplotlib_inline": []
  },
  "mccabe": {
    "mccabe": []
  },
  "mdurl": {
    "mdurl": [],
    "mdurl._decode": [],
    "mdurl._encode": [],
    "mdurl._format": [],
    "mdurl._parse": [],
    "mdurl._url": []
  },
  "megatron": {
    "megatron": [],
    "megatron.io": [],
    "megatron.io.dataset": [],
    "megatron.io.generator": [],
    "megatron.io.storage": [],
    "megatron.layers": [],
    "megatron.layers.adapters": [],
    "megatron.layers.core": [],
    "megatron.layers.explore": [],
    "megatron.layers.image": [],
    "megatron.layers.metrics": [],
    "megatron.layers.missing": [],
    "megatron.layers.numeric": [],
    "megatron.layers.shaping": [],
    "megatron.layers.text": [],
    "megatron.layertools": [],
    "megatron.layertools.helpers": [],
    "megatron.layertools.wrappers": [],
    "megatron.nodes": [],
    "megatron.nodes.auxiliary": [],
    "megatron.nodes.core": [],
    "megatron.nodes.fromfile": [],
    "megatron.pipeline": [],
    "megatron.utils": [],
    "megatron.utils.errors": [],
    "megatron.utils.generic": [],
    "megatron.utils.hash": [],
    "megatron.utils.pipeline": [],
    "megatron.visuals": []
  },
  "ml-dtypes": {
    "ml_dtypes": [],
    "ml_dtypes._finfo": [],
    "ml_dtypes._iinfo": []
  },
  "mlflow": {
    "mlflow": [],
    "mlflow.data.delta_dataset_source": [
      {
        "code": "table-migrate",
        "message": "The default format changed in Databricks Runtime 8.0, from Parquet to Delta"
      }
    ],
    "mlflow.data.spark_dataset": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Rewrite it using DataFrame API"
      },
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Use mapInArrow() or Pandas UDFs instead"
      }
    ],
    "mlflow.data.spark_delta_utils": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "mlflow.pyspark.ml": [
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sparkContext and _conf are not supported on UC Shared Clusters. Rewrite it using spark.conf"
      }
    ],
    "mlflow.recipes.steps.predict": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "mlflow.recipes.steps.train": [
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "mlflow.spark": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "mlflow.spark.autologging": [
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "mlflow.store.artifact.databricks_artifact_repo": [
      {
        "code": "dbfs-usage",
        "message": "Deprecated file system path: dbfs://profile@databricks/<path>"
      }
    ],
    "mlflow.store.artifact.dbfs_artifact_repo": [
      {
        "code": "dbfs-usage",
        "message": "Deprecated file system path: dbfs://profile@databricks/<path>"
      }
    ],
    "mlflow.tracking.artifact_utils": [
      {
        "code": "dbfs-usage",
        "message": "Deprecated file system path: dbfs:/databricks/mlflow/tmp-external-source/"
      }
    ],
    "mlflow.utils._spark_utils": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sparkContext is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "mlflow.utils.uri": [
      {
        "code": "dbfs-usage",
        "message": "Deprecated file system path: dbfs:/"
      }
    ]
  },
  "mpmath": {
    "mpmath": []
  },
  "multidict": {
    "multidict": []
  },
  "multitasking": {
    "multitasking": []
  },
  "mypy": {
    "mypy": [],
    "mypyc": []
  },
  "mypy-extensions": {
    "mypy_extensions": []
  },
  "namex": {
    "namex": [],
    "namex.convert": [],
    "namex.export": [],
    "namex.generate": []
  },
  "nest-asyncio": {
    "nest_asyncio": []
  },
  "networkx": {
    "networkx": []
  },
  "numba": {
    "numba": [],
    "numba._version": [],
    "numba.cext": [],
    "numba.cloudpickle": [],
    "numba.cloudpickle.cloudpickle": [],
    "numba.cloudpickle.cloudpickle_fast": [],
    "numba.core": [],
    "numba.core.analysis": [],
    "numba.core.annotations": [],
    "numba.core.annotations.pretty_annotate": [],
    "numba.core.annotations.type_annotations": [],
    "numba.core.base": [],
    "numba.core.boxing": [],
    "numba.core.bytecode": [],
    "numba.core.byteflow": [],
    "numba.core.caching": [],
    "numba.core.callconv": [],
    "numba.core.callwrapper": [],
    "numba.core.ccallback": [],
    "numba.core.cgutils": [],
    "numba.core.codegen": [],
    "numba.core.compiler": [],
    "numba.core.compiler_lock": [],
    "numba.core.compiler_machinery": [],
    "numba.core.config": [],
    "numba.core.consts": [],
    "numba.core.controlflow": [],
    "numba.core.cpu": [],
    "numba.core.cpu_options": [],
    "numba.core.datamodel": [],
    "numba.core.datamodel.manager": [],
    "numba.core.datamodel.models": [],
    "numba.core.datamodel.packer": [],
    "numba.core.datamodel.registry": [],
    "numba.core.datamodel.testing": [],
    "numba.core.debuginfo": [],
    "numba.core.decorators": [],
    "numba.core.descriptors": [],
    "numba.core.dispatcher": [],
    "numba.core.entrypoints": [],
    "numba.core.environment": [],
    "numba.core.errors": [],
    "numba.core.event": [],
    "numba.core.extending": [],
    "numba.core.externals": [],
    "numba.core.fastmathpass": [],
    "numba.core.funcdesc": [],
    "numba.core.generators": [],
    "numba.core.imputils": [],
    "numba.core.inline_closurecall": [],
    "numba.core.interpreter": [],
    "numba.core.intrinsics": [],
    "numba.core.ir": [],
    "numba.core.ir_utils": [],
    "numba.core.itanium_mangler": [],
    "numba.core.llvm_bindings": [],
    "numba.core.lowering": [],
    "numba.core.object_mode_passes": [],
    "numba.core.optional": [],
    "numba.core.options": [],
    "numba.core.postproc": [],
    "numba.core.pylowering": [],
    "numba.core.pythonapi": [],
    "numba.core.registry": [],
    "numba.core.removerefctpass": [],
    "numba.core.rewrites": [],
    "numba.core.rewrites.ir_print": [],
    "numba.core.rewrites.registry": [],
    "numba.core.rewrites.static_binop": [],
    "numba.core.rewrites.static_getitem": [],
    "numba.core.rewrites.static_raise": [],
    "numba.core.runtime": [],
    "numba.core.runtime.context": [],
    "numba.core.runtime.nrt": [],
    "numba.core.runtime.nrtdynmod": [],
    "numba.core.runtime.nrtopt": [],
    "numba.core.rvsdg_frontend": [],
    "numba.core.rvsdg_frontend.bcinterp": [],
    "numba.core.rvsdg_frontend.rvsdg": [],
    "numba.core.rvsdg_frontend.rvsdg.bc2rvsdg": [],
    "numba.core.rvsdg_frontend.rvsdg.regionpasses": [],
    "numba.core.rvsdg_frontend.rvsdg.regionrenderer": [],
    "numba.core.serialize": [],
    "numba.core.sigutils": [],
    "numba.core.ssa": [],
    "numba.core.target_extension": [],
    "numba.core.targetconfig": [],
    "numba.core.tracing": [],
    "numba.core.transforms": [],
    "numba.core.typeconv": [],
    "numba.core.typeconv.castgraph": [],
    "numba.core.typeconv.rules": [],
    "numba.core.typeconv.typeconv": [],
    "numba.core.typed_passes": [],
    "numba.core.typeinfer": [],
    "numba.core.types": [],
    "numba.core.types.abstract": [],
    "numba.core.types.common": [],
    "numba.core.types.containers": [],
    "numba.core.types.function_type": [],
    "numba.core.types.functions": [],
    "numba.core.types.iterators": [],
    "numba.core.types.misc": [],
    "numba.core.types.npytypes": [],
    "numba.core.types.scalars": [],
    "numba.core.typing": [],
    "numba.core.typing.arraydecl": [],
    "numba.core.typing.asnumbatype": [],
    "numba.core.typing.bufproto": [],
    "numba.core.typing.builtins": [],
    "numba.core.typing.cffi_utils": [],
    "numba.core.typing.cmathdecl": [],
    "numba.core.typing.collections": [],
    "numba.core.typing.context": [],
    "numba.core.typing.ctypes_utils": [],
    "numba.core.typing.dictdecl": [],
    "numba.core.typing.enumdecl": [],
    "numba.core.typing.listdecl": [],
    "numba.core.typing.mathdecl": [],
    "numba.core.typing.npdatetime": [],
    "numba.core.typing.npydecl": [],
    "numba.core.typing.setdecl": [],
    "numba.core.typing.templates": [],
    "numba.core.typing.typeof": [],
    "numba.core.unsafe": [],
    "numba.core.unsafe.bytes": [],
    "numba.core.unsafe.eh": [],
    "numba.core.unsafe.nrt": [],
    "numba.core.unsafe.refcount": [],
    "numba.core.untyped_passes": [],
    "numba.core.utils": [],
    "numba.core.withcontexts": [],
    "numba.cpython": [],
    "numba.cpython.builtins": [],
    "numba.cpython.charseq": [],
    "numba.cpython.cmathimpl": [],
    "numba.cpython.enumimpl": [],
    "numba.cpython.hashing": [],
    "numba.cpython.heapq": [],
    "numba.cpython.iterators": [],
    "numba.cpython.listobj": [],
    "numba.cpython.mathimpl": [],
    "numba.cpython.numbers": [],
    "numba.cpython.printimpl": [],
    "numba.cpython.randomimpl": [],
    "numba.cpython.rangeobj": [],
    "numba.cpython.setobj": [],
    "numba.cpython.slicing": [],
    "numba.cpython.tupleobj": [],
    "numba.cpython.unicode": [],
    "numba.cpython.unicode_support": [],
    "numba.cpython.unsafe": [],
    "numba.cpython.unsafe.numbers": [],
    "numba.cpython.unsafe.tuple": [],
    "numba.cuda": [],
    "numba.cuda.api": [],
    "numba.cuda.api_util": [],
    "numba.cuda.args": [],
    "numba.cuda.cg": [],
    "numba.cuda.codegen": [],
    "numba.cuda.compiler": [],
    "numba.cuda.cuda_paths": [],
    "numba.cuda.cudadecl": [],
    "numba.cuda.cudadrv": [],
    "numba.cuda.cudadrv.devicearray": [],
    "numba.cuda.cudadrv.devices": [],
    "numba.cuda.cudadrv.driver": [],
    "numba.cuda.cudadrv.drvapi": [],
    "numba.cuda.cudadrv.enums": [],
    "numba.cuda.cudadrv.error": [],
    "numba.cuda.cudadrv.libs": [],
    "numba.cuda.cudadrv.ndarray": [],
    "numba.cuda.cudadrv.nvrtc": [],
    "numba.cuda.cudadrv.nvvm": [],
    "numba.cuda.cudadrv.rtapi": [],
    "numba.cuda.cudadrv.runtime": [],
    "numba.cuda.cudaimpl": [],
    "numba.cuda.cudamath": [],
    "numba.cuda.decorators": [],
    "numba.cuda.descriptor": [],
    "numba.cuda.device_init": [],
    "numba.cuda.dispatcher": [],
    "numba.cuda.errors": [],
    "numba.cuda.extending": [],
    "numba.cuda.initialize": [],
    "numba.cuda.intrinsic_wrapper": [],
    "numba.cuda.intrinsics": [],
    "numba.cuda.kernels": [],
    "numba.cuda.kernels.reduction": [],
    "numba.cuda.kernels.transpose": [],
    "numba.cuda.libdevice": [],
    "numba.cuda.libdevicedecl": [],
    "numba.cuda.libdevicefuncs": [],
    "numba.cuda.libdeviceimpl": [],
    "numba.cuda.mathimpl": [],
    "numba.cuda.models": [],
    "numba.cuda.nvvmutils": [],
    "numba.cuda.printimpl": [],
    "numba.cuda.random": [],
    "numba.cuda.simulator": [],
    "numba.cuda.simulator.api": [],
    "numba.cuda.simulator.compiler": [],
    "numba.cuda.simulator.cudadrv": [],
    "numba.cuda.simulator.cudadrv.devicearray": [],
    "numba.cuda.simulator.cudadrv.devices": [],
    "numba.cuda.simulator.cudadrv.driver": [],
    "numba.cuda.simulator.cudadrv.drvapi": [],
    "numba.cuda.simulator.cudadrv.error": [],
    "numba.cuda.simulator.cudadrv.libs": [],
    "numba.cuda.simulator.cudadrv.nvvm": [],
    "numba.cuda.simulator.cudadrv.runtime": [],
    "numba.cuda.simulator.kernel": [],
    "numba.cuda.simulator.kernelapi": [],
    "numba.cuda.simulator.reduction": [],
    "numba.cuda.simulator.vector_types": [],
    "numba.cuda.simulator_init": [],
    "numba.cuda.stubs": [],
    "numba.cuda.target": [],
    "numba.cuda.testing": [],
    "numba.cuda.tests": [],
    "numba.cuda.tests.cudadrv": [],
    "numba.cuda.tests.cudadrv.test_array_attr": [],
    "numba.cuda.tests.cudadrv.test_context_stack": [],
    "numba.cuda.tests.cudadrv.test_cuda_array_slicing": [],
    "numba.cuda.tests.cudadrv.test_cuda_auto_context": [],
    "numba.cuda.tests.cudadrv.test_cuda_devicerecord": [],
    "numba.cuda.tests.cudadrv.test_cuda_driver": [],
    "numba.cuda.tests.cudadrv.test_cuda_libraries": [],
    "numba.cuda.tests.cudadrv.test_cuda_memory": [],
    "numba.cuda.tests.cudadrv.test_cuda_ndarray": [],
    "numba.cuda.tests.cudadrv.test_deallocations": [],
    "numba.cuda.tests.cudadrv.test_detect": [],
    "numba.cuda.tests.cudadrv.test_emm_plugins": [],
    "numba.cuda.tests.cudadrv.test_events": [],
    "numba.cuda.tests.cudadrv.test_host_alloc": [],
    "numba.cuda.tests.cudadrv.test_init": [],
    "numba.cuda.tests.cudadrv.test_inline_ptx": [],
    "numba.cuda.tests.cudadrv.test_is_fp16": [],
    "numba.cuda.tests.cudadrv.test_linker": [],
    "numba.cuda.tests.cudadrv.test_managed_alloc": [],
    "numba.cuda.tests.cudadrv.test_mvc": [],
    "numba.cuda.tests.cudadrv.test_nvvm_driver": [],
    "numba.cuda.tests.cudadrv.test_pinned": [],
    "numba.cuda.tests.cudadrv.test_profiler": [],
    "numba.cuda.tests.cudadrv.test_ptds": [],
    "numba.cuda.tests.cudadrv.test_reset_device": [],
    "numba.cuda.tests.cudadrv.test_runtime": [],
    "numba.cuda.tests.cudadrv.test_select_device": [],
    "numba.cuda.tests.cudadrv.test_streams": [],
    "numba.cuda.tests.cudapy": [],
    "numba.cuda.tests.cudapy.cache_usecases": [],
    "numba.cuda.tests.cudapy.cache_with_cpu_usecases": [],
    "numba.cuda.tests.cudapy.extensions_usecases": [],
    "numba.cuda.tests.cudapy.recursion_usecases": [],
    "numba.cuda.tests.cudapy.test_alignment": [],
    "numba.cuda.tests.cudapy.test_array": [],
    "numba.cuda.tests.cudapy.test_array_args": [],
    "numba.cuda.tests.cudapy.test_array_methods": [],
    "numba.cuda.tests.cudapy.test_atomics": [],
    "numba.cuda.tests.cudapy.test_blackscholes": [],
    "numba.cuda.tests.cudapy.test_boolean": [],
    "numba.cuda.tests.cudapy.test_caching": [],
    "numba.cuda.tests.cudapy.test_casting": [],
    "numba.cuda.tests.cudapy.test_cffi": [],
    "numba.cuda.tests.cudapy.test_compiler": [],
    "numba.cuda.tests.cudapy.test_complex": [],
    "numba.cuda.tests.cudapy.test_complex_kernel": [],
    "numba.cuda.tests.cudapy.test_const_string": [],
    "numba.cuda.tests.cudapy.test_constmem": [],
    "numba.cuda.tests.cudapy.test_cooperative_groups": [],
    "numba.cuda.tests.cudapy.test_cuda_array_interface": [],
    "numba.cuda.tests.cudapy.test_cuda_jit_no_types": [],
    "numba.cuda.tests.cudapy.test_datetime": [],
    "numba.cuda.tests.cudapy.test_debug": [],
    "numba.cuda.tests.cudapy.test_debuginfo": [],
    "numba.cuda.tests.cudapy.test_device_func": [],
    "numba.cuda.tests.cudapy.test_dispatcher": [],
    "numba.cuda.tests.cudapy.test_enums": [],
    "numba.cuda.tests.cudapy.test_errors": [],
    "numba.cuda.tests.cudapy.test_exception": [],
    "numba.cuda.tests.cudapy.test_extending": [],
    "numba.cuda.tests.cudapy.test_fastmath": [],
    "numba.cuda.tests.cudapy.test_forall": [],
    "numba.cuda.tests.cudapy.test_freevar": [],
    "numba.cuda.tests.cudapy.test_frexp_ldexp": [],
    "numba.cuda.tests.cudapy.test_globals": [],
    "numba.cuda.tests.cudapy.test_gufunc": [],
    "numba.cuda.tests.cudapy.test_gufunc_scalar": [],
    "numba.cuda.tests.cudapy.test_gufunc_scheduling": [],
    "numba.cuda.tests.cudapy.test_idiv": [],
    "numba.cuda.tests.cudapy.test_inspect": [],
    "numba.cuda.tests.cudapy.test_intrinsics": [],
    "numba.cuda.tests.cudapy.test_ipc": [],
    "numba.cuda.tests.cudapy.test_iterators": [],
    "numba.cuda.tests.cudapy.test_lang": [],
    "numba.cuda.tests.cudapy.test_laplace": [],
    "numba.cuda.tests.cudapy.test_libdevice": [],
    "numba.cuda.tests.cudapy.test_lineinfo": [],
    "numba.cuda.tests.cudapy.test_localmem": [],
    "numba.cuda.tests.cudapy.test_mandel": [],
    "numba.cuda.tests.cudapy.test_math": [],
    "numba.cuda.tests.cudapy.test_matmul": [],
    "numba.cuda.tests.cudapy.test_minmax": [],
    "numba.cuda.tests.cudapy.test_montecarlo": [],
    "numba.cuda.tests.cudapy.test_multigpu": [],
    "numba.cuda.tests.cudapy.test_multiprocessing": [],
    "numba.cuda.tests.cudapy.test_multithreads": [],
    "numba.cuda.tests.cudapy.test_nondet": [],
    "numba.cuda.tests.cudapy.test_operator": [],
    "numba.cuda.tests.cudapy.test_optimization": [],
    "numba.cuda.tests.cudapy.test_overload": [],
    "numba.cuda.tests.cudapy.test_powi": [],
    "numba.cuda.tests.cudapy.test_print": [],
    "numba.cuda.tests.cudapy.test_py2_div_issue": [],
    "numba.cuda.tests.cudapy.test_random": [],
    "numba.cuda.tests.cudapy.test_record_dtype": [],
    "numba.cuda.tests.cudapy.test_recursion": [],
    "numba.cuda.tests.cudapy.test_reduction": [],
    "numba.cuda.tests.cudapy.test_retrieve_autoconverted_arrays": [],
    "numba.cuda.tests.cudapy.test_serialize": [],
    "numba.cuda.tests.cudapy.test_slicing": [],
    "numba.cuda.tests.cudapy.test_sm": [],
    "numba.cuda.tests.cudapy.test_sm_creation": [],
    "numba.cuda.tests.cudapy.test_sync": [],
    "numba.cuda.tests.cudapy.test_transpose": [],
    "numba.cuda.tests.cudapy.test_ufuncs": [],
    "numba.cuda.tests.cudapy.test_userexc": [],
    "numba.cuda.tests.cudapy.test_vector_type": [],
    "numba.cuda.tests.cudapy.test_vectorize": [],
    "numba.cuda.tests.cudapy.test_vectorize_complex": [],
    "numba.cuda.tests.cudapy.test_vectorize_decor": [],
    "numba.cuda.tests.cudapy.test_vectorize_device": [],
    "numba.cuda.tests.cudapy.test_vectorize_scalar_arg": [],
    "numba.cuda.tests.cudapy.test_warning": [],
    "numba.cuda.tests.cudapy.test_warp_ops": [],
    "numba.cuda.tests.cudasim": [],
    "numba.cuda.tests.cudasim.support": [],
    "numba.cuda.tests.cudasim.test_cudasim_issues": [],
    "numba.cuda.tests.data": [],
    "numba.cuda.tests.doc_examples": [],
    "numba.cuda.tests.doc_examples.ffi": [],
    "numba.cuda.tests.doc_examples.test_cg": [],
    "numba.cuda.tests.doc_examples.test_cpu_gpu_compat": [],
    "numba.cuda.tests.doc_examples.test_ffi": [],
    "numba.cuda.tests.doc_examples.test_laplace": [],
    "numba.cuda.tests.doc_examples.test_matmul": [],
    "numba.cuda.tests.doc_examples.test_montecarlo": [],
    "numba.cuda.tests.doc_examples.test_random": [],
    "numba.cuda.tests.doc_examples.test_reduction": [],
    "numba.cuda.tests.doc_examples.test_sessionize": [],
    "numba.cuda.tests.doc_examples.test_ufunc": [],
    "numba.cuda.tests.doc_examples.test_vecadd": [],
    "numba.cuda.tests.nocuda": [],
    "numba.cuda.tests.nocuda.test_function_resolution": [],
    "numba.cuda.tests.nocuda.test_import": [],
    "numba.cuda.tests.nocuda.test_library_lookup": [],
    "numba.cuda.tests.nocuda.test_nvvm": [],
    "numba.cuda.types": [],
    "numba.cuda.ufuncs": [],
    "numba.cuda.vector_types": [],
    "numba.cuda.vectorizers": [],
    "numba.experimental": [],
    "numba.experimental.function_type": [],
    "numba.experimental.jitclass": [],
    "numba.experimental.jitclass.base": [],
    "numba.experimental.jitclass.boxing": [],
    "numba.experimental.jitclass.decorators": [],
    "numba.experimental.jitclass.overloads": [],
    "numba.experimental.structref": [],
    "numba.extending": [],
    "numba.misc.POST": [],
    "numba.misc": [],
    "numba.misc.appdirs": [],
    "numba.misc.cffiimpl": [],
    "numba.misc.dummyarray": [],
    "numba.misc.dump_style": [],
    "numba.misc.findlib": [],
    "numba.misc.firstlinefinder": [],
    "numba.misc.gdb_hook": [],
    "numba.misc.gdb_print_extension": [],
    "numba.misc.help": [],
    "numba.misc.help.inspector": [],
    "numba.misc.init_utils": [],
    "numba.misc.inspection": [],
    "numba.misc.literal": [],
    "numba.misc.llvm_pass_timings": [],
    "numba.misc.mergesort": [],
    "numba.misc.numba_entry": [],
    "numba.misc.numba_gdbinfo": [],
    "numba.misc.numba_sysinfo": [],
    "numba.misc.quicksort": [],
    "numba.misc.special": [],
    "numba.misc.timsort": [],
    "numba.np": [],
    "numba.np.arraymath": [],
    "numba.np.arrayobj": [],
    "numba.np.extensions": [],
    "numba.np.linalg": [],
    "numba.np.math": [],
    "numba.np.math.cmathimpl": [],
    "numba.np.math.mathimpl": [],
    "numba.np.math.numbers": [],
    "numba.np.npdatetime": [],
    "numba.np.npdatetime_helpers": [],
    "numba.np.npyfuncs": [],
    "numba.np.npyimpl": [],
    "numba.np.numpy_support": [],
    "numba.np.polynomial": [],
    "numba.np.polynomial.polynomial_core": [],
    "numba.np.polynomial.polynomial_functions": [],
    "numba.np.random": [],
    "numba.np.random._constants": [],
    "numba.np.random.distributions": [],
    "numba.np.random.generator_core": [],
    "numba.np.random.generator_methods": [],
    "numba.np.random.random_methods": [],
    "numba.np.ufunc": [],
    "numba.np.ufunc.array_exprs": [],
    "numba.np.ufunc.decorators": [],
    "numba.np.ufunc.deviceufunc": [],
    "numba.np.ufunc.dufunc": [],
    "numba.np.ufunc.gufunc": [],
    "numba.np.ufunc.parallel": [],
    "numba.np.ufunc.sigparse": [],
    "numba.np.ufunc.ufunc_base": [],
    "numba.np.ufunc.ufuncbuilder": [],
    "numba.np.ufunc.wrappers": [],
    "numba.np.ufunc_db": [],
    "numba.np.unsafe": [],
    "numba.np.unsafe.ndarray": [],
    "numba.parfors": [],
    "numba.parfors.array_analysis": [],
    "numba.parfors.parfor": [],
    "numba.parfors.parfor_lowering": [],
    "numba.parfors.parfor_lowering_utils": [],
    "numba.pycc": [],
    "numba.pycc.cc": [],
    "numba.pycc.compiler": [],
    "numba.pycc.decorators": [],
    "numba.pycc.llvm_types": [],
    "numba.pycc.platform": [],
    "numba.runtests": [],
    "numba.scripts": [],
    "numba.scripts.generate_lower_listing": [],
    "numba.stencils": [],
    "numba.stencils.stencil": [],
    "numba.stencils.stencilparfor": [],
    "numba.testing": [],
    "numba.testing._runtests": [],
    "numba.testing.loader": [],
    "numba.testing.main": [],
    "numba.testing.notebook": [],
    "numba.tests": [],
    "numba.tests.annotation_usecases": [],
    "numba.tests.cache_usecases": [],
    "numba.tests.cffi_usecases": [],
    "numba.tests.cfunc_cache_usecases": [],
    "numba.tests.chained_assign_usecases": [],
    "numba.tests.cloudpickle_main_class": [],
    "numba.tests.compile_with_pycc": [],
    "numba.tests.complex_usecases": [],
    "numba.tests.ctypes_usecases": [],
    "numba.tests.doc_examples": [],
    "numba.tests.doc_examples.test_examples": [],
    "numba.tests.doc_examples.test_interval_example": [],
    "numba.tests.doc_examples.test_jitclass": [],
    "numba.tests.doc_examples.test_literal_container_usage": [],
    "numba.tests.doc_examples.test_literally_usage": [],
    "numba.tests.doc_examples.test_llvm_pass_timings": [],
    "numba.tests.doc_examples.test_numpy_generators": [],
    "numba.tests.doc_examples.test_parallel_chunksize": [],
    "numba.tests.doc_examples.test_rec_array": [],
    "numba.tests.doc_examples.test_structref_usage": [],
    "numba.tests.doc_examples.test_typed_dict_usage": [],
    "numba.tests.doc_examples.test_typed_list_usage": [],
    "numba.tests.doctest_usecase": [],
    "numba.tests.dummy_module": [],
    "numba.tests.enum_usecases": [],
    "numba.tests.error_usecases": [],
    "numba.tests.errorhandling_usecases": [],
    "numba.tests.gdb": [],
    "numba.tests.gdb.test_array_arg": [],
    "numba.tests.gdb.test_basic": [],
    "numba.tests.gdb.test_break_on_symbol": [],
    "numba.tests.gdb.test_break_on_symbol_version": [],
    "numba.tests.gdb.test_conditional_breakpoint": [],
    "numba.tests.gdb.test_pretty_print": [],
    "numba.tests.gdb_support": [],
    "numba.tests.inlining_usecases": [],
    "numba.tests.matmul_usecase": [],
    "numba.tests.npyufunc": [],
    "numba.tests.npyufunc.cache_usecases": [],
    "numba.tests.npyufunc.test_caching": [],
    "numba.tests.npyufunc.test_dufunc": [],
    "numba.tests.npyufunc.test_errors": [],
    "numba.tests.npyufunc.test_gufunc": [],
    "numba.tests.npyufunc.test_parallel_env_variable": [],
    "numba.tests.npyufunc.test_parallel_low_work": [],
    "numba.tests.npyufunc.test_parallel_ufunc_issues": [],
    "numba.tests.npyufunc.test_ufunc": [],
    "numba.tests.npyufunc.test_ufuncbuilding": [],
    "numba.tests.npyufunc.test_update_inplace": [],
    "numba.tests.npyufunc.test_vectorize_decor": [],
    "numba.tests.npyufunc.ufuncbuilding_usecases": [],
    "numba.tests.orphaned_semaphore_usecase": [],
    "numba.tests.overload_usecases": [],
    "numba.tests.parfor_iss9490_usecase": [],
    "numba.tests.parfors_cache_usecases": [],
    "numba.tests.pdlike_usecase": [],
    "numba.tests.pycc_distutils_usecase": [],
    "numba.tests.pycc_distutils_usecase.nested": [],
    "numba.tests.pycc_distutils_usecase.nested.source_module": [],
    "numba.tests.pycc_distutils_usecase.setup_distutils": [],
    "numba.tests.pycc_distutils_usecase.setup_distutils_nested": [],
    "numba.tests.pycc_distutils_usecase.setup_setuptools": [],
    "numba.tests.pycc_distutils_usecase.setup_setuptools_nested": [],
    "numba.tests.pycc_distutils_usecase.source_module": [],
    "numba.tests.recursion_usecases": [],
    "numba.tests.serialize_usecases": [],
    "numba.tests.support": [],
    "numba.tests.test_alignment": [],
    "numba.tests.test_analysis": [],
    "numba.tests.test_annotations": [],
    "numba.tests.test_api": [],
    "numba.tests.test_array_analysis": [],
    "numba.tests.test_array_attr": [],
    "numba.tests.test_array_constants": [],
    "numba.tests.test_array_exprs": [],
    "numba.tests.test_array_iterators": [],
    "numba.tests.test_array_manipulation": [],
    "numba.tests.test_array_methods": [],
    "numba.tests.test_array_reductions": [],
    "numba.tests.test_array_return": [],
    "numba.tests.test_asnumbatype": [],
    "numba.tests.test_auto_constants": [],
    "numba.tests.test_blackscholes": [],
    "numba.tests.test_boundscheck": [],
    "numba.tests.test_buffer_protocol": [],
    "numba.tests.test_builtins": [],
    "numba.tests.test_byteflow": [],
    "numba.tests.test_caching": [],
    "numba.tests.test_casting": [],
    "numba.tests.test_cffi": [],
    "numba.tests.test_cfunc": [],
    "numba.tests.test_cgutils": [],
    "numba.tests.test_chained_assign": [],
    "numba.tests.test_chrome_trace": [],
    "numba.tests.test_cli": [],
    "numba.tests.test_closure": [],
    "numba.tests.test_codegen": [],
    "numba.tests.test_compile_cache": [],
    "numba.tests.test_compiler_flags": [],
    "numba.tests.test_compiler_lock": [],
    "numba.tests.test_complex": [],
    "numba.tests.test_comprehension": [],
    "numba.tests.test_conditions_as_predicates": [],
    "numba.tests.test_config": [],
    "numba.tests.test_conversion": [],
    "numba.tests.test_copy_propagate": [],
    "numba.tests.test_ctypes": [],
    "numba.tests.test_dataflow": [],
    "numba.tests.test_datamodel": [],
    "numba.tests.test_debug": [],
    "numba.tests.test_debuginfo": [],
    "numba.tests.test_deprecations": [],
    "numba.tests.test_dictimpl": [],
    "numba.tests.test_dictobject": [],
    "numba.tests.test_dicts": [],
    "numba.tests.test_dispatcher": [],
    "numba.tests.test_doctest": [],
    "numba.tests.test_dummyarray": [],
    "numba.tests.test_dyn_array": [],
    "numba.tests.test_dyn_func": [],
    "numba.tests.test_entrypoints": [],
    "numba.tests.test_enums": [],
    "numba.tests.test_errorhandling": [],
    "numba.tests.test_errormodels": [],
    "numba.tests.test_event": [],
    "numba.tests.test_exceptions": [],
    "numba.tests.test_extended_arg": [],
    "numba.tests.test_extending": [],
    "numba.tests.test_extending_types": [],
    "numba.tests.test_fancy_indexing": [],
    "numba.tests.test_fastmath": [],
    "numba.tests.test_findlib": [],
    "numba.tests.test_firstlinefinder": [],
    "numba.tests.test_flow_control": [],
    "numba.tests.test_func_interface": [],
    "numba.tests.test_func_lifetime": [],
    "numba.tests.test_funcdesc": [],
    "numba.tests.test_function_type": [],
    "numba.tests.test_gdb_bindings": [],
    "numba.tests.test_gdb_dwarf": [],
    "numba.tests.test_generators": [],
    "numba.tests.test_getitem_on_types": [],
    "numba.tests.test_gil": [],
    "numba.tests.test_globals": [],
    "numba.tests.test_hashing": [],
    "numba.tests.test_heapq": [],
    "numba.tests.test_help": [],
    "numba.tests.test_import": [],
    "numba.tests.test_indexing": [],
    "numba.tests.test_init_utils": [],
    "numba.tests.test_inlining": [],
    "numba.tests.test_interpreter": [],
    "numba.tests.test_interproc": [],
    "numba.tests.test_intwidth": [],
    "numba.tests.test_ir": [],
    "numba.tests.test_ir_inlining": [],
    "numba.tests.test_ir_utils": [],
    "numba.tests.test_itanium_mangler": [],
    "numba.tests.test_iteration": [],
    "numba.tests.test_jit_module": [],
    "numba.tests.test_jitclasses": [],
    "numba.tests.test_jitmethod": [],
    "numba.tests.test_linalg": [],
    "numba.tests.test_listimpl": [],
    "numba.tests.test_listobject": [],
    "numba.tests.test_lists": [],
    "numba.tests.test_literal_dispatch": [],
    "numba.tests.test_llvm_pass_timings": [],
    "numba.tests.test_llvm_version_check": [],
    "numba.tests.test_locals": [],
    "numba.tests.test_looplifting": [],
    "numba.tests.test_make_function_to_jit_function": [],
    "numba.tests.test_mandelbrot": [],
    "numba.tests.test_mangling": [],
    "numba.tests.test_map_filter_reduce": [],
    "numba.tests.test_mathlib": [],
    "numba.tests.test_maxmin": [],
    "numba.tests.test_mixed_tuple_unroller": [],
    "numba.tests.test_moved_modules": [],
    "numba.tests.test_multi3": [],
    "numba.tests.test_nan": [],
    "numba.tests.test_ndarray_subclasses": [],
    "numba.tests.test_nested_calls": [],
    "numba.tests.test_np_functions": [],
    "numba.tests.test_np_randomgen": [],
    "numba.tests.test_npdatetime": [],
    "numba.tests.test_nrt": [],
    "numba.tests.test_nrt_refct": [],
    "numba.tests.test_num_threads": [],
    "numba.tests.test_numberctor": [],
    "numba.tests.test_numbers": [],
    "numba.tests.test_numconv": [],
    "numba.tests.test_numpy_support": [],
    "numba.tests.test_numpyadapt": [],
    "numba.tests.test_obj_lifetime": [],
    "numba.tests.test_object_mode": [],
    "numba.tests.test_objects": [],
    "numba.tests.test_operators": [],
    "numba.tests.test_optional": [],
    "numba.tests.test_overlap": [],
    "numba.tests.test_parallel_backend": [],
    "numba.tests.test_parfors": [],
    "numba.tests.test_parfors_caching": [],
    "numba.tests.test_parfors_passes": [],
    "numba.tests.test_pipeline": [],
    "numba.tests.test_polynomial": [],
    "numba.tests.test_practical_lowering_issues": [],
    "numba.tests.test_print": [],
    "numba.tests.test_profiler": [],
    "numba.tests.test_pycc": [],
    "numba.tests.test_python_int": [],
    "numba.tests.test_pythonapi": [],
    "numba.tests.test_random": [],
    "numba.tests.test_range": [],
    "numba.tests.test_recarray_usecases": [],
    "numba.tests.test_record_dtype": [],
    "numba.tests.test_recursion": [],
    "numba.tests.test_refop_pruning": [],
    "numba.tests.test_remove_dead": [],
    "numba.tests.test_repr": [],
    "numba.tests.test_return_values": [],
    "numba.tests.test_runtests": [],
    "numba.tests.test_serialize": [],
    "numba.tests.test_sets": [],
    "numba.tests.test_slices": [],
    "numba.tests.test_sort": [],
    "numba.tests.test_ssa": [],
    "numba.tests.test_stencils": [],
    "numba.tests.test_storeslice": [],
    "numba.tests.test_struct_ref": [],
    "numba.tests.test_support": [],
    "numba.tests.test_svml": [],
    "numba.tests.test_sys_monitoring": [],
    "numba.tests.test_sys_stdin_assignment": [],
    "numba.tests.test_sysinfo": [],
    "numba.tests.test_target_extension": [],
    "numba.tests.test_target_overloadselector": [],
    "numba.tests.test_threadsafety": [],
    "numba.tests.test_tracing": [],
    "numba.tests.test_try_except": [],
    "numba.tests.test_tuples": [],
    "numba.tests.test_typeconv": [],
    "numba.tests.test_typedlist": [],
    "numba.tests.test_typedobjectutils": [],
    "numba.tests.test_typeguard": [],
    "numba.tests.test_typeinfer": [],
    "numba.tests.test_typenames": [],
    "numba.tests.test_typeof": [],
    "numba.tests.test_types": [],
    "numba.tests.test_typingerror": [],
    "numba.tests.test_ufuncs": [],
    "numba.tests.test_unicode": [],
    "numba.tests.test_unicode_array": [],
    "numba.tests.test_unicode_names": [],
    "numba.tests.test_unpack_sequence": [],
    "numba.tests.test_unpickle_without_module": [],
    "numba.tests.test_unsafe_intrinsics": [],
    "numba.tests.test_usecases": [],
    "numba.tests.test_vectorization": [],
    "numba.tests.test_vectorization_type_inference": [],
    "numba.tests.test_warnings": [],
    "numba.tests.test_withlifting": [],
    "numba.tests.threading_backend_usecases": [],
    "numba.tests.typedlist_usecases": [],
    "numba.tests.usecases": [],
    "numba.typed": [],
    "numba.typed.dictimpl": [],
    "numba.typed.dictobject": [],
    "numba.typed.listobject": [],
    "numba.typed.typeddict": [],
    "numba.typed.typedlist": [],
    "numba.typed.typedobjectutils": [],
    "numba.types": []
  },
  "numpy": {
    "numpy": []
  },
  "opentelemetry-api": {
    "opentelemetry._logs": [],
    "opentelemetry._logs._internal": [],
    "opentelemetry._logs.severity": [],
    "opentelemetry.attributes": [],
    "opentelemetry.baggage": [],
    "opentelemetry.baggage.propagation": [],
    "opentelemetry.context": [],
    "opentelemetry.context.context": [],
    "opentelemetry.context.contextvars_context": [],
    "opentelemetry.environment_variables": [],
    "opentelemetry.metrics": [],
    "opentelemetry.metrics._internal": [],
    "opentelemetry.metrics._internal.instrument": [],
    "opentelemetry.metrics._internal.observation": [],
    "opentelemetry.propagate": [],
    "opentelemetry.propagators.composite": [],
    "opentelemetry.propagators.textmap": [],
    "opentelemetry.trace": [],
    "opentelemetry.trace.propagation": [],
    "opentelemetry.trace.propagation.tracecontext": [],
    "opentelemetry.trace.span": [],
    "opentelemetry.trace.status": [],
    "opentelemetry.util._decorator": [],
    "opentelemetry.util._importlib_metadata": [],
    "opentelemetry.util._once": [],
    "opentelemetry.util._providers": [],
    "opentelemetry.util.re": [],
    "opentelemetry.util.types": [],
    "opentelemetry.version": []
  },
  "opentelemetry-sdk": {
    "opentelemetry.sdk._configuration": [],
    "opentelemetry.sdk._logs": [],
    "opentelemetry.sdk._logs._internal": [],
    "opentelemetry.sdk._logs._internal.export": [],
    "opentelemetry.sdk._logs._internal.export.in_memory_log_exporter": [],
    "opentelemetry.sdk._logs.export": [],
    "opentelemetry.sdk.environment_variables": [],
    "opentelemetry.sdk.error_handler": [],
    "opentelemetry.sdk.metrics": [],
    "opentelemetry.sdk.metrics._internal": [],
    "opentelemetry.sdk.metrics._internal._view_instrument_match": [],
    "opentelemetry.sdk.metrics._internal.aggregation": [],
    "opentelemetry.sdk.metrics._internal.exceptions": [],
    "opentelemetry.sdk.metrics._internal.exponential_histogram.buckets": [],
    "opentelemetry.sdk.metrics._internal.exponential_histogram.mapping": [],
    "opentelemetry.sdk.metrics._internal.exponential_histogram.mapping.errors": [],
    "opentelemetry.sdk.metrics._internal.exponential_histogram.mapping.exponent_mapping": [],
    "opentelemetry.sdk.metrics._internal.exponential_histogram.mapping.ieee_754": [],
    "opentelemetry.sdk.metrics._internal.exponential_histogram.mapping.logarithm_mapping": [],
    "opentelemetry.sdk.metrics._internal.export": [],
    "opentelemetry.sdk.metrics._internal.instrument": [],
    "opentelemetry.sdk.metrics._internal.measurement": [],
    "opentelemetry.sdk.metrics._internal.measurement_consumer": [],
    "opentelemetry.sdk.metrics._internal.metric_reader_storage": [],
    "opentelemetry.sdk.metrics._internal.point": [],
    "opentelemetry.sdk.metrics._internal.sdk_configuration": [],
    "opentelemetry.sdk.metrics._internal.view": [],
    "opentelemetry.sdk.metrics.export": [],
    "opentelemetry.sdk.metrics.view": [],
    "opentelemetry.sdk.resources": [],
    "opentelemetry.sdk.trace": [],
    "opentelemetry.sdk.trace.export": [],
    "opentelemetry.sdk.trace.export.in_memory_span_exporter": [],
    "opentelemetry.sdk.trace.id_generator": [],
    "opentelemetry.sdk.trace.sampling": [],
    "opentelemetry.sdk.util": [],
    "opentelemetry.sdk.util.instrumentation": [],
    "opentelemetry.sdk.version": []
  },
  "opentelemetry-semantic-conventions": {
    "opentelemetry.semconv": [],
    "opentelemetry.semconv._incubating.attributes.aws_attributes": [],
    "opentelemetry.semconv._incubating.attributes.browser_attributes": [],
    "opentelemetry.semconv._incubating.attributes.client_attributes": [],
    "opentelemetry.semconv._incubating.attributes.cloud_attributes": [],
    "opentelemetry.semconv._incubating.attributes.cloudevents_attributes": [],
    "opentelemetry.semconv._incubating.attributes.code_attributes": [],
    "opentelemetry.semconv._incubating.attributes.container_attributes": [],
    "opentelemetry.semconv._incubating.attributes.db_attributes": [],
    "opentelemetry.semconv._incubating.attributes.deployment_attributes": [],
    "opentelemetry.semconv._incubating.attributes.destination_attributes": [],
    "opentelemetry.semconv._incubating.attributes.device_attributes": [],
    "opentelemetry.semconv._incubating.attributes.disk_attributes": [],
    "opentelemetry.semconv._incubating.attributes.dns_attributes": [],
    "opentelemetry.semconv._incubating.attributes.enduser_attributes": [],
    "opentelemetry.semconv._incubating.attributes.error_attributes": [],
    "opentelemetry.semconv._incubating.attributes.event_attributes": [],
    "opentelemetry.semconv._incubating.attributes.exception_attributes": [],
    "opentelemetry.semconv._incubating.attributes.faas_attributes": [],
    "opentelemetry.semconv._incubating.attributes.feature_flag_attributes": [],
    "opentelemetry.semconv._incubating.attributes.file_attributes": [],
    "opentelemetry.semconv._incubating.attributes.gcp_attributes": [],
    "opentelemetry.semconv._incubating.attributes.graphql_attributes": [],
    "opentelemetry.semconv._incubating.attributes.heroku_attributes": [],
    "opentelemetry.semconv._incubating.attributes.host_attributes": [],
    "opentelemetry.semconv._incubating.attributes.http_attributes": [],
    "opentelemetry.semconv._incubating.attributes.k8s_attributes": [],
    "opentelemetry.semconv._incubating.attributes.log_attributes": [],
    "opentelemetry.semconv._incubating.attributes.message_attributes": [],
    "opentelemetry.semconv._incubating.attributes.messaging_attributes": [],
    "opentelemetry.semconv._incubating.attributes.network_attributes": [],
    "opentelemetry.semconv._incubating.attributes.oci_attributes": [],
    "opentelemetry.semconv._incubating.attributes.opentracing_attributes": [],
    "opentelemetry.semconv._incubating.attributes.otel_attributes": [],
    "opentelemetry.semconv._incubating.attributes.other_attributes": [],
    "opentelemetry.semconv._incubating.attributes.peer_attributes": [],
    "opentelemetry.semconv._incubating.attributes.pool_attributes": [],
    "opentelemetry.semconv._incubating.attributes.process_attributes": [],
    "opentelemetry.semconv._incubating.attributes.rpc_attributes": [],
    "opentelemetry.semconv._incubating.attributes.server_attributes": [],
    "opentelemetry.semconv._incubating.attributes.service_attributes": [],
    "opentelemetry.semconv._incubating.attributes.session_attributes": [],
    "opentelemetry.semconv._incubating.attributes.source_attributes": [],
    "opentelemetry.semconv._incubating.attributes.system_attributes": [],
    "opentelemetry.semconv._incubating.attributes.telemetry_attributes": [],
    "opentelemetry.semconv._incubating.attributes.thread_attributes": [],
    "opentelemetry.semconv._incubating.attributes.tls_attributes": [],
    "opentelemetry.semconv._incubating.attributes.url_attributes": [],
    "opentelemetry.semconv._incubating.attributes.user_agent_attributes": [],
    "opentelemetry.semconv._incubating.attributes.webengine_attributes": [],
    "opentelemetry.semconv._incubating.metrics.container_metrics": [],
    "opentelemetry.semconv._incubating.metrics.db_metrics": [],
    "opentelemetry.semconv._incubating.metrics.dns_metrics": [],
    "opentelemetry.semconv._incubating.metrics.faas_metrics": [],
    "opentelemetry.semconv._incubating.metrics.http_metrics": [],
    "opentelemetry.semconv._incubating.metrics.messaging_metrics": [],
    "opentelemetry.semconv._incubating.metrics.process_metrics": [],
    "opentelemetry.semconv._incubating.metrics.rpc_metrics": [],
    "opentelemetry.semconv._incubating.metrics.system_metrics": [],
    "opentelemetry.semconv.attributes.client_attributes": [],
    "opentelemetry.semconv.attributes.error_attributes": [],
    "opentelemetry.semconv.attributes.exception_attributes": [],
    "opentelemetry.semconv.attributes.http_attributes": [],
    "opentelemetry.semconv.attributes.network_attributes": [],
    "opentelemetry.semconv.attributes.otel_attributes": [],
    "opentelemetry.semconv.attributes.server_attributes": [],
    "opentelemetry.semconv.attributes.service_attributes": [],
    "opentelemetry.semconv.attributes.telemetry_attributes": [],
    "opentelemetry.semconv.attributes.url_attributes": [],
    "opentelemetry.semconv.attributes.user_agent_attributes": [],
    "opentelemetry.semconv.metrics": [],
    "opentelemetry.semconv.metrics.http_metrics": [],
    "opentelemetry.semconv.resource": [],
    "opentelemetry.semconv.schemas": [],
    "opentelemetry.semconv.trace": [],
    "opentelemetry.semconv.version": []
  },
  "opt-einsum": {
    "opt_einsum": []
  },
  "optree": {
    "optree": []
  },
  "packaging": {
    "packaging": []
  },
  "pandas": {
    "pandas": []
  },
  "parso": {
    "parso": []
  },
  "pathspec": {
    "pathspec": []
  },
  "peewee": {
    "peewee": [],
    "playhouse": [],
    "pwiz": []
  },
  "pexpect": {
    "pexpect": []
  },
  "pillow": {
    "PIL": []
  },
  "pip": {
    "pip": []
  },
  "platformdirs": {
    "platformdirs": []
  },
  "pluggy": {
    "pluggy": []
  },
  "prompt_toolkit": {
    "prompt_toolkit": []
  },
  "protobuf": {
    "google.protobuf": [],
    "google.protobuf.any_pb2": [],
    "google.protobuf.api_pb2": [],
    "google.protobuf.compiler": [],
    "google.protobuf.compiler.plugin_pb2": [],
    "google.protobuf.descriptor": [],
    "google.protobuf.descriptor_database": [],
    "google.protobuf.descriptor_pb2": [],
    "google.protobuf.descriptor_pool": [],
    "google.protobuf.duration_pb2": [],
    "google.protobuf.empty_pb2": [],
    "google.protobuf.field_mask_pb2": [],
    "google.protobuf.internal": [],
    "google.protobuf.internal._parameterized": [],
    "google.protobuf.internal.api_implementation": [],
    "google.protobuf.internal.builder": [],
    "google.protobuf.internal.containers": [],
    "google.protobuf.internal.decoder": [],
    "google.protobuf.internal.encoder": [],
    "google.protobuf.internal.enum_type_wrapper": [],
    "google.protobuf.internal.extension_dict": [],
    "google.protobuf.internal.field_mask": [],
    "google.protobuf.internal.message_listener": [],
    "google.protobuf.internal.python_edition_defaults": [],
    "google.protobuf.internal.python_message": [],
    "google.protobuf.internal.testing_refleaks": [],
    "google.protobuf.internal.type_checkers": [],
    "google.protobuf.internal.well_known_types": [],
    "google.protobuf.internal.wire_format": [],
    "google.protobuf.json_format": [],
    "google.protobuf.message": [],
    "google.protobuf.message_factory": [],
    "google.protobuf.proto_builder": [],
    "google.protobuf.pyext": [],
    "google.protobuf.pyext.cpp_message": [],
    "google.protobuf.reflection": [],
    "google.protobuf.runtime_version": [],
    "google.protobuf.service": [],
    "google.protobuf.service_reflection": [],
    "google.protobuf.source_context_pb2": [],
    "google.protobuf.struct_pb2": [],
    "google.protobuf.symbol_database": [],
    "google.protobuf.testdata": [],
    "google.protobuf.text_encoding": [],
    "google.protobuf.text_format": [],
    "google.protobuf.timestamp_pb2": [],
    "google.protobuf.type_pb2": [],
    "google.protobuf.unknown_fields": [],
    "google.protobuf.util": [],
    "google.protobuf.wrappers_pb2": []
  },
  "psutil": {
    "psutil": [],
    "psutil._common": [],
    "psutil._compat": [],
    "psutil._psaix": [],
    "psutil._psbsd": [],
    "psutil._pslinux": [],
    "psutil._psosx": [],
    "psutil._psposix": [],
    "psutil._pssunos": [],
    "psutil._pswindows": [],
    "psutil.tests": [],
    "psutil.tests.runner": [],
    "psutil.tests.test_aix": [],
    "psutil.tests.test_bsd": [],
    "psutil.tests.test_connections": [],
    "psutil.tests.test_contracts": [],
    "psutil.tests.test_linux": [],
    "psutil.tests.test_memleaks": [],
    "psutil.tests.test_misc": [],
    "psutil.tests.test_osx": [],
    "psutil.tests.test_posix": [],
    "psutil.tests.test_process": [],
    "psutil.tests.test_process_all": [],
    "psutil.tests.test_sunos": [],
    "psutil.tests.test_system": [],
    "psutil.tests.test_testutils": [],
    "psutil.tests.test_unicode": [],
    "psutil.tests.test_windows": []
  },
  "ptyprocess": {
    "ptyprocess": [],
    "ptyprocess._fork_pty": [],
    "ptyprocess.ptyprocess": [],
    "ptyprocess.util": []
  },
  "pure-eval": {
    "pure_eval": [],
    "pure_eval.core": [],
    "pure_eval.my_getattr_static": [],
    "pure_eval.utils": [],
    "pure_eval.version": []
  },
  "py4j": {
    "py4j": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ]
  },
  "pyarrow": {
    "pyarrow": []
  },
  "pyasn1": {
    "pyasn1": []
  },
  "pyasn1_modules": {
    "pyasn1_modules": []
  },
  "pygments": {
    "pygments": []
  },
  "pylint": {
    "pylint": []
  },
  "pylint-pytest": {
    "pylint_pytest": []
  },
  "pyparsing": {
    "pyparsing": [],
    "pyparsing.actions": [],
    "pyparsing.common": [],
    "pyparsing.core": [],
    "pyparsing.diagram": [],
    "pyparsing.exceptions": [],
    "pyparsing.helpers": [],
    "pyparsing.results": [],
    "pyparsing.testing": [],
    "pyparsing.unicode": [],
    "pyparsing.util": []
  },
  "pyspark": {
    "pyspark": [],
    "pyspark._globals": [],
    "pyspark.accumulators": [],
    "pyspark.broadcast": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.cloudpickle": [],
    "pyspark.cloudpickle.cloudpickle": [],
    "pyspark.cloudpickle.compat": [],
    "pyspark.conf": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "pyspark.context": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Rewrite it using DataFrame API"
      },
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Use mapInArrow() or Pandas UDFs instead"
      },
      {
        "code": "spark-logging-in-shared-clusters",
        "message": "Cannot set Spark log level directly from code on UC Shared Clusters. Remove the call and set the cluster spark conf 'spark.log.level' instead"
      },
      {
        "code": "table-migrate",
        "message": "Can't migrate 'register' because its table name argument is not a constant"
      }
    ],
    "pyspark.daemon": [],
    "pyspark.errors": [],
    "pyspark.errors.error_classes": [],
    "pyspark.errors.exceptions": [],
    "pyspark.errors.exceptions.base": [],
    "pyspark.errors.exceptions.captured": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "pyspark.errors.exceptions.connect": [],
    "pyspark.errors.utils": [],
    "pyspark.files": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "pyspark.find_spark_home": [],
    "pyspark.install": [],
    "pyspark.instrumentation_utils": [],
    "pyspark.java_gateway": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "pyspark.join": [],
    "pyspark.ml": [],
    "pyspark.ml.base": [],
    "pyspark.ml.classification": [
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.ml.clustering": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "pyspark.ml.common": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.ml.connect": [],
    "pyspark.ml.connect.base": [],
    "pyspark.ml.connect.classification": [],
    "pyspark.ml.connect.evaluation": [],
    "pyspark.ml.connect.feature": [],
    "pyspark.ml.connect.functions": [],
    "pyspark.ml.connect.io_utils": [
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sparkContext is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.ml.connect.pipeline": [],
    "pyspark.ml.connect.summarizer": [],
    "pyspark.ml.connect.tuning": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "pyspark.ml.connect.util": [],
    "pyspark.ml.deepspeed": [],
    "pyspark.ml.deepspeed.deepspeed_distributor": [],
    "pyspark.ml.dl_util": [],
    "pyspark.ml.evaluation": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "pyspark.ml.feature": [
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      },
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Rewrite it using DataFrame API"
      }
    ],
    "pyspark.ml.fpm": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "pyspark.ml.functions": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.ml.image": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "pyspark.ml.linalg": [],
    "pyspark.ml.model_cache": [],
    "pyspark.ml.param": [],
    "pyspark.ml.param._shared_params_code_gen": [],
    "pyspark.ml.param.shared": [],
    "pyspark.ml.pipeline": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "pyspark.ml.recommendation": [],
    "pyspark.ml.regression": [],
    "pyspark.ml.stat": [],
    "pyspark.ml.torch": [],
    "pyspark.ml.torch.data": [],
    "pyspark.ml.torch.distributor": [
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sparkContext is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.ml.torch.log_communication": [],
    "pyspark.ml.torch.torch_run_process_wrapper": [],
    "pyspark.ml.tree": [],
    "pyspark.ml.tuning": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      },
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Rewrite it using DataFrame API"
      }
    ],
    "pyspark.ml.util": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      },
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Rewrite it using DataFrame API"
      }
    ],
    "pyspark.ml.wrapper": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.mllib": [],
    "pyspark.mllib.classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.mllib.clustering": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.mllib.common": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.mllib.evaluation": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.mllib.feature": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.mllib.fpm": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.mllib.linalg": [],
    "pyspark.mllib.linalg.distributed": [
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Rewrite it using DataFrame API"
      }
    ],
    "pyspark.mllib.random": [
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.mllib.recommendation": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      },
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Rewrite it using DataFrame API"
      }
    ],
    "pyspark.mllib.regression": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.mllib.stat.KernelDensity": [],
    "pyspark.mllib.stat": [],
    "pyspark.mllib.stat._statistics": [],
    "pyspark.mllib.stat.distribution": [],
    "pyspark.mllib.stat.test": [],
    "pyspark.mllib.tree": [],
    "pyspark.mllib.util": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      },
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Rewrite it using DataFrame API"
      }
    ],
    "pyspark.pandas": [],
    "pyspark.pandas._typing": [],
    "pyspark.pandas.accessors": [],
    "pyspark.pandas.base": [
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Rewrite it using DataFrame API"
      }
    ],
    "pyspark.pandas.categorical": [],
    "pyspark.pandas.config": [],
    "pyspark.pandas.correlation": [],
    "pyspark.pandas.data_type_ops": [],
    "pyspark.pandas.data_type_ops.base": [],
    "pyspark.pandas.data_type_ops.binary_ops": [],
    "pyspark.pandas.data_type_ops.boolean_ops": [],
    "pyspark.pandas.data_type_ops.categorical_ops": [],
    "pyspark.pandas.data_type_ops.complex_ops": [],
    "pyspark.pandas.data_type_ops.date_ops": [],
    "pyspark.pandas.data_type_ops.datetime_ops": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "pyspark.pandas.data_type_ops.null_ops": [],
    "pyspark.pandas.data_type_ops.num_ops": [],
    "pyspark.pandas.data_type_ops.string_ops": [],
    "pyspark.pandas.data_type_ops.timedelta_ops": [],
    "pyspark.pandas.data_type_ops.udt_ops": [],
    "pyspark.pandas.datetimes": [],
    "pyspark.pandas.exceptions": [],
    "pyspark.pandas.extensions": [],
    "pyspark.pandas.generic": [],
    "pyspark.pandas.groupby": [],
    "pyspark.pandas.indexes": [],
    "pyspark.pandas.indexes.base": [],
    "pyspark.pandas.indexes.category": [],
    "pyspark.pandas.indexes.datetimes": [],
    "pyspark.pandas.indexes.multi": [],
    "pyspark.pandas.indexes.numeric": [],
    "pyspark.pandas.indexes.timedelta": [],
    "pyspark.pandas.indexing": [],
    "pyspark.pandas.internal": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "pyspark.pandas.missing": [],
    "pyspark.pandas.missing.common": [],
    "pyspark.pandas.missing.frame": [],
    "pyspark.pandas.missing.general_functions": [],
    "pyspark.pandas.missing.groupby": [],
    "pyspark.pandas.missing.indexes": [],
    "pyspark.pandas.missing.resample": [],
    "pyspark.pandas.missing.scalars": [],
    "pyspark.pandas.missing.series": [],
    "pyspark.pandas.missing.window": [],
    "pyspark.pandas.mlflow": [],
    "pyspark.pandas.numpy_compat": [],
    "pyspark.pandas.plot": [],
    "pyspark.pandas.plot.core": [
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Rewrite it using DataFrame API"
      }
    ],
    "pyspark.pandas.plot.matplotlib": [],
    "pyspark.pandas.plot.plotly": [],
    "pyspark.pandas.resample": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "pyspark.pandas.series": [],
    "pyspark.pandas.spark": [],
    "pyspark.pandas.spark.functions": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.pandas.spark.utils": [],
    "pyspark.pandas.strings": [],
    "pyspark.pandas.supported_api_gen": [],
    "pyspark.pandas.typedef": [],
    "pyspark.pandas.typedef.typehints": [],
    "pyspark.pandas.usage_logging": [],
    "pyspark.pandas.usage_logging.usage_logger": [],
    "pyspark.pandas.utils": [],
    "pyspark.pandas.window": [],
    "pyspark.python.pyspark.shell": [
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.rdd": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      },
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Rewrite it using DataFrame API"
      },
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Use mapInArrow() or Pandas UDFs instead"
      }
    ],
    "pyspark.rddsampler": [],
    "pyspark.resource": [],
    "pyspark.resource.information": [],
    "pyspark.resource.profile": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "pyspark.resource.requests": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "pyspark.resultiterable": [],
    "pyspark.serializers": [],
    "pyspark.shell": [
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.shuffle": [],
    "pyspark.sql": [],
    "pyspark.sql.avro": [],
    "pyspark.sql.avro.functions": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.sql.catalog": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "pyspark.sql.column": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.sql.conf": [],
    "pyspark.sql.connect": [],
    "pyspark.sql.connect._typing": [],
    "pyspark.sql.connect.avro": [],
    "pyspark.sql.connect.avro.functions": [],
    "pyspark.sql.connect.catalog": [],
    "pyspark.sql.connect.client": [],
    "pyspark.sql.connect.client.artifact": [],
    "pyspark.sql.connect.client.core": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "pyspark.sql.connect.client.reattach": [],
    "pyspark.sql.connect.column": [],
    "pyspark.sql.connect.conf": [],
    "pyspark.sql.connect.conversion": [],
    "pyspark.sql.connect.dataframe": [],
    "pyspark.sql.connect.expressions": [],
    "pyspark.sql.connect.functions": [],
    "pyspark.sql.connect.group": [],
    "pyspark.sql.connect.plan": [],
    "pyspark.sql.connect.proto": [],
    "pyspark.sql.connect.proto.base_pb2": [],
    "pyspark.sql.connect.proto.base_pb2_grpc": [],
    "pyspark.sql.connect.proto.catalog_pb2": [],
    "pyspark.sql.connect.proto.commands_pb2": [],
    "pyspark.sql.connect.proto.common_pb2": [],
    "pyspark.sql.connect.proto.example_plugins_pb2": [],
    "pyspark.sql.connect.proto.expressions_pb2": [],
    "pyspark.sql.connect.proto.relations_pb2": [],
    "pyspark.sql.connect.proto.types_pb2": [],
    "pyspark.sql.connect.readwriter": [],
    "pyspark.sql.connect.session": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "pyspark.sql.connect.streaming": [],
    "pyspark.sql.connect.streaming.query": [],
    "pyspark.sql.connect.streaming.readwriter": [],
    "pyspark.sql.connect.streaming.worker": [],
    "pyspark.sql.connect.streaming.worker.foreach_batch_worker": [],
    "pyspark.sql.connect.streaming.worker.listener_worker": [],
    "pyspark.sql.connect.types": [],
    "pyspark.sql.connect.udf": [],
    "pyspark.sql.connect.udtf": [],
    "pyspark.sql.connect.utils": [],
    "pyspark.sql.connect.window": [],
    "pyspark.sql.context": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sparkContext is not supported on UC Shared Clusters. Rewrite it using spark"
      },
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Rewrite it using DataFrame API"
      }
    ],
    "pyspark.sql.dataframe": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      },
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Rewrite it using DataFrame API"
      }
    ],
    "pyspark.sql.functions": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.sql.group": [],
    "pyspark.sql.observation": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.sql.pandas": [],
    "pyspark.sql.pandas.conversion": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "pyspark.sql.pandas.functions": [],
    "pyspark.sql.pandas.group_ops": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "pyspark.sql.pandas.map_ops": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "pyspark.sql.pandas.serializers": [],
    "pyspark.sql.pandas.typehints": [],
    "pyspark.sql.pandas.types": [],
    "pyspark.sql.pandas.utils": [],
    "pyspark.sql.protobuf": [],
    "pyspark.sql.protobuf.functions": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.sql.readwriter": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Rewrite it using DataFrame API"
      },
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Use mapInArrow() or Pandas UDFs instead"
      }
    ],
    "pyspark.sql.session": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sparkContext is not supported on UC Shared Clusters. Rewrite it using spark"
      },
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Rewrite it using DataFrame API"
      }
    ],
    "pyspark.sql.sql_formatter": [],
    "pyspark.sql.streaming": [],
    "pyspark.sql.streaming.listener": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "pyspark.sql.streaming.query": [],
    "pyspark.sql.streaming.readwriter": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "pyspark.sql.streaming.state": [],
    "pyspark.sql.types": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.sql.udf": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc and _conf are not supported on UC Shared Clusters. Rewrite it using spark.conf"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.sql.udtf": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.sql.utils": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.sql.window": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.statcounter": [],
    "pyspark.status": [],
    "pyspark.storagelevel": [],
    "pyspark.streaming": [],
    "pyspark.streaming.context": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      },
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Rewrite it using DataFrame API"
      }
    ],
    "pyspark.streaming.dstream": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Rewrite it using DataFrame API"
      },
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Use mapInArrow() or Pandas UDFs instead"
      }
    ],
    "pyspark.streaming.kinesis": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sparkContext is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "pyspark.streaming.listener": [],
    "pyspark.streaming.util": [],
    "pyspark.taskcontext": [],
    "pyspark.testing": [],
    "pyspark.testing.connectutils": [],
    "pyspark.testing.mllibutils": [],
    "pyspark.testing.mlutils": [],
    "pyspark.testing.pandasutils": [],
    "pyspark.testing.streamingutils": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Rewrite it using DataFrame API"
      }
    ],
    "pyspark.testing.utils": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      },
      {
        "code": "spark-logging-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM logger on UC Shared Clusters. Use logging.getLogger() instead"
      }
    ],
    "pyspark.traceback_utils": [],
    "pyspark.util": [],
    "pyspark.version": [],
    "pyspark.worker": [],
    "pyspark.worker_util": []
  },
  "pytest": {
    "_pytest": [],
    "py": [],
    "pytest": []
  },
  "pytest-cov": {
    "pytest_cov": []
  },
  "pytest-mock": {
    "pytest_mock": []
  },
  "pytest-timeout": {
    "pytest_timeout": []
  },
  "pytest-xdist": {
    "xdist": []
  },
  "python-dateutil": {
    "dateutil": []
  },
  "pytz": {
    "pytz": []
  },
  "pyyaml": {
    "_yaml": [],
    "yaml": []
  },
  "pyzmq": {
    "zmq": []
  },
  "querystring-parser": {
    "querystring_parser": [],
    "querystring_parser.builder": [],
    "querystring_parser.parser": [],
    "querystring_parser.tests": []
  },
  "regex": {
    "regex": [],
    "regex._regex_core": [],
    "regex.regex": [],
    "regex.test_regex": []
  },
  "requests": {
    "requests": []
  },
  "rich": {
    "rich": []
  },
  "rsa": {
    "rsa": []
  },
  "ruff": {
    "ruff": []
  },
  "s3fs": {
    "s3fs": [
      {
        "code": "direct-filesystem-access",
        "message": "S3fs library assumes AWS IAM Instance Profile to work with S3, which is not compatible with Databricks Unity Catalog, that routes access through Storage Credentials."
      }
    ]
  },
  "s3transfer": {
    "s3transfer": [
      {
        "code": "direct-filesystem-access",
        "message": "S3Transfer library assumes AWS IAM Instance Profile to work with S3, which is not compatible with Databricks Unity Catalog, that routes access through Storage Credentials."
      }
    ]
  },
  "safetensors": {
    "safetensors": [],
    "safetensors.flax": [],
    "safetensors.mlx": [],
    "safetensors.numpy": [],
    "safetensors.paddle": [],
    "safetensors.tensorflow": [],
    "safetensors.torch": []
  },
  "scikit-learn": {
    "sklearn": []
  },
  "scipy": {
    "scipy": []
  },
  "seaborn": {
    "seaborn": [],
    "seaborn._base": [],
    "seaborn._compat": [],
    "seaborn._core": [],
    "seaborn._core.data": [],
    "seaborn._core.exceptions": [],
    "seaborn._core.groupby": [],
    "seaborn._core.moves": [],
    "seaborn._core.plot": [],
    "seaborn._core.properties": [],
    "seaborn._core.rules": [],
    "seaborn._core.scales": [],
    "seaborn._core.subplots": [],
    "seaborn._core.typing": [],
    "seaborn._docstrings": [],
    "seaborn._marks": [],
    "seaborn._marks.area": [],
    "seaborn._marks.bar": [],
    "seaborn._marks.base": [],
    "seaborn._marks.dot": [],
    "seaborn._marks.line": [],
    "seaborn._marks.text": [],
    "seaborn._statistics": [],
    "seaborn._stats": [],
    "seaborn._stats.aggregation": [],
    "seaborn._stats.base": [],
    "seaborn._stats.counting": [],
    "seaborn._stats.density": [],
    "seaborn._stats.order": [],
    "seaborn._stats.regression": [],
    "seaborn._testing": [],
    "seaborn.algorithms": [],
    "seaborn.axisgrid": [],
    "seaborn.categorical": [],
    "seaborn.cm": [],
    "seaborn.colors": [],
    "seaborn.colors.crayons": [],
    "seaborn.colors.xkcd_rgb": [],
    "seaborn.distributions": [],
    "seaborn.external": [],
    "seaborn.external.appdirs": [],
    "seaborn.external.docscrape": [],
    "seaborn.external.husl": [],
    "seaborn.external.kde": [],
    "seaborn.external.version": [],
    "seaborn.matrix": [],
    "seaborn.miscplot": [],
    "seaborn.objects": [],
    "seaborn.palettes": [],
    "seaborn.rcmod": [],
    "seaborn.regression": [],
    "seaborn.relational": [],
    "seaborn.utils": [],
    "seaborn.widgets": []
  },
  "sentry-sdk": {
    "sentry_sdk": [],
    "sentry_sdk.integrations.spark.spark_driver": [
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ]
  },
  "setproctitle": {
    "setproctitle": []
  },
  "setuptools": {
    "_distutils_hack": [],
    "pkg_resources": [],
    "setuptools": []
  },
  "shap": {
    "shap": [],
    "shap._explanation": [],
    "shap._serializable": [],
    "shap._version": [],
    "shap.actions": [],
    "shap.actions._action": [],
    "shap.actions._optimizer": [],
    "shap.benchmark": [],
    "shap.benchmark._compute": [],
    "shap.benchmark._explanation_error": [],
    "shap.benchmark._result": [],
    "shap.benchmark._sequential": [],
    "shap.benchmark.experiments": [],
    "shap.benchmark.framework": [],
    "shap.benchmark.measures": [],
    "shap.benchmark.methods": [],
    "shap.benchmark.metrics": [],
    "shap.benchmark.models": [],
    "shap.benchmark.plots": [],
    "shap.datasets": [],
    "shap.explainers": [],
    "shap.explainers._additive": [],
    "shap.explainers._deep": [],
    "shap.explainers._deep.deep_pytorch": [],
    "shap.explainers._deep.deep_tf": [],
    "shap.explainers._deep.deep_utils": [],
    "shap.explainers._exact": [],
    "shap.explainers._explainer": [],
    "shap.explainers._gpu_tree": [],
    "shap.explainers._gradient": [],
    "shap.explainers._kernel": [],
    "shap.explainers._linear": [],
    "shap.explainers._partition": [],
    "shap.explainers._permutation": [],
    "shap.explainers._sampling": [],
    "shap.explainers._tree": [],
    "shap.explainers.other": [],
    "shap.explainers.other._coefficient": [],
    "shap.explainers.other._lime": [],
    "shap.explainers.other._maple": [],
    "shap.explainers.other._random": [],
    "shap.explainers.other._treegain": [],
    "shap.explainers.other._ubjson": [],
    "shap.explainers.pytree": [],
    "shap.explainers.tf_utils": [],
    "shap.links": [],
    "shap.maskers": [],
    "shap.maskers._composite": [],
    "shap.maskers._fixed": [],
    "shap.maskers._fixed_composite": [],
    "shap.maskers._image": [],
    "shap.maskers._masker": [],
    "shap.maskers._output_composite": [],
    "shap.maskers._tabular": [],
    "shap.maskers._text": [],
    "shap.models": [],
    "shap.models._model": [],
    "shap.models._teacher_forcing": [],
    "shap.models._text_generation": [],
    "shap.models._topk_lm": [],
    "shap.models._transformers_pipeline": [],
    "shap.plots": [],
    "shap.plots._bar": [],
    "shap.plots._beeswarm": [],
    "shap.plots._benchmark": [],
    "shap.plots._decision": [],
    "shap.plots._embedding": [],
    "shap.plots._force": [],
    "shap.plots._force_matplotlib": [],
    "shap.plots._group_difference": [],
    "shap.plots._heatmap": [],
    "shap.plots._image": [],
    "shap.plots._labels": [],
    "shap.plots._monitoring": [],
    "shap.plots._partial_dependence": [],
    "shap.plots._scatter": [],
    "shap.plots._text": [],
    "shap.plots._utils": [],
    "shap.plots._violin": [],
    "shap.plots._waterfall": [],
    "shap.plots.colors": [],
    "shap.plots.colors._colorconv": [],
    "shap.plots.colors._colors": [],
    "shap.utils": [],
    "shap.utils._clustering": [],
    "shap.utils._exceptions": [],
    "shap.utils._general": [],
    "shap.utils._keras": [],
    "shap.utils._legacy": [],
    "shap.utils._masked_model": [],
    "shap.utils._show_progress": [],
    "shap.utils.image": [],
    "shap.utils.transformers": []
  },
  "six": {
    "six": []
  },
  "sklearn": {},
  "sktime": {
    "build_tools.changelog": [],
    "build_tools.check_backticks": [],
    "build_tools.make_release": [],
    "docs.source.conf": [],
    "extension_templates.alignment": [],
    "extension_templates.annotation": [],
    "extension_templates.classification": [],
    "extension_templates.clustering": [],
    "extension_templates.dist_kern_panel": [],
    "extension_templates.dist_kern_tab": [],
    "extension_templates.early_classification": [],
    "extension_templates.forecasting": [],
    "extension_templates.forecasting_simple": [],
    "extension_templates.forecasting_supersimple": [],
    "extension_templates.param_est": [],
    "extension_templates.split": [],
    "extension_templates.transformer": [],
    "extension_templates.transformer_simple": [],
    "extension_templates.transformer_supersimple": [],
    "sktime": [],
    "sktime._contrib": [],
    "sktime._contrib._plot_path": [],
    "sktime._contrib.classification_examples": [],
    "sktime._contrib.classification_experiments": [],
    "sktime._contrib.classifier_capabilities_table": [],
    "sktime._contrib.clustering": [],
    "sktime._contrib.clustering._dba_plotting": [],
    "sktime._contrib.clustering.clustering_examples": [],
    "sktime._contrib.clustering_experiments": [],
    "sktime._contrib.data_io": [],
    "sktime._contrib.distance_based": [],
    "sktime._contrib.distance_based.elastic_ensemble_from_file": [],
    "sktime._contrib.distance_refactor": [],
    "sktime._contrib.notebooks": [],
    "sktime._contrib.notebooks.img": [],
    "sktime._contrib.notebooks.img.windows_installation": [],
    "sktime._contrib.set_classifier": [],
    "sktime._contrib.set_clusterer": [],
    "sktime._contrib.tests": [],
    "sktime._contrib.tests.test_experiments": [],
    "sktime._nopytest_tests": [],
    "sktime.alignment": [],
    "sktime.alignment.base": [],
    "sktime.alignment.dtw_numba": [],
    "sktime.alignment.dtw_python": [],
    "sktime.alignment.edit_numba": [],
    "sktime.alignment.lucky": [],
    "sktime.alignment.naive": [],
    "sktime.alignment.tests": [],
    "sktime.alignment.tests.test_all_aligners": [],
    "sktime.alignment.utils": [],
    "sktime.alignment.utils.utils_align": [],
    "sktime.annotation": [],
    "sktime.annotation.adapters": [],
    "sktime.annotation.adapters._pyod": [],
    "sktime.annotation.base": [],
    "sktime.annotation.base._base": [],
    "sktime.annotation.clasp": [],
    "sktime.annotation.datagen": [],
    "sktime.annotation.eagglo": [],
    "sktime.annotation.ggs": [],
    "sktime.annotation.hmm": [],
    "sktime.annotation.hmm_learn": [],
    "sktime.annotation.hmm_learn.base": [],
    "sktime.annotation.hmm_learn.gaussian": [],
    "sktime.annotation.hmm_learn.gmm": [],
    "sktime.annotation.hmm_learn.poisson": [],
    "sktime.annotation.igts": [],
    "sktime.annotation.plotting": [],
    "sktime.annotation.plotting.utils": [],
    "sktime.annotation.stray": [],
    "sktime.annotation.tests": [],
    "sktime.annotation.tests.test_all_annotators": [],
    "sktime.annotation.tests.test_base": [],
    "sktime.annotation.tests.test_clasp": [],
    "sktime.annotation.tests.test_datagen": [],
    "sktime.annotation.tests.test_eagglo": [],
    "sktime.annotation.tests.test_ggs": [],
    "sktime.annotation.tests.test_hmm": [],
    "sktime.annotation.tests.test_hmm_learn": [],
    "sktime.annotation.tests.test_igts": [],
    "sktime.annotation.tests.test_plotting": [],
    "sktime.annotation.tests.test_stray": [],
    "sktime.base": [],
    "sktime.base._base": [],
    "sktime.base._base_panel": [],
    "sktime.base._meta": [],
    "sktime.base._panel": [],
    "sktime.base._panel.forest": [],
    "sktime.base._panel.forest._composable": [],
    "sktime.base._panel.forest._tsf": [],
    "sktime.base._panel.forest.tests": [],
    "sktime.base._panel.forest.tests.test_feature_importances_": [],
    "sktime.base._panel.forest.tests.test_tsf": [],
    "sktime.base._serialize": [],
    "sktime.base._tagmanager": [],
    "sktime.base.adapters": [],
    "sktime.base.adapters._pyts": [],
    "sktime.base.adapters._tslearn": [],
    "sktime.base.tests": [],
    "sktime.base.tests.test_base": [],
    "sktime.base.tests.test_base_sktime": [],
    "sktime.benchmarking": [],
    "sktime.benchmarking._base_kotsu": [],
    "sktime.benchmarking._lib_mini_kotsu": [],
    "sktime.benchmarking._lib_mini_kotsu.registration": [],
    "sktime.benchmarking._lib_mini_kotsu.run": [],
    "sktime.benchmarking._lib_mini_kotsu.store": [],
    "sktime.benchmarking.base": [],
    "sktime.benchmarking.benchmarks": [],
    "sktime.benchmarking.critical_difference": [],
    "sktime.benchmarking.data": [],
    "sktime.benchmarking.evaluation": [],
    "sktime.benchmarking.experiments": [],
    "sktime.benchmarking.forecasting": [],
    "sktime.benchmarking.metrics": [],
    "sktime.benchmarking.orchestration": [],
    "sktime.benchmarking.results": [],
    "sktime.benchmarking.strategies": [],
    "sktime.benchmarking.tasks": [],
    "sktime.benchmarking.tests": [],
    "sktime.benchmarking.tests.test_TSCStrategy": [],
    "sktime.benchmarking.tests.test_benchmarks": [],
    "sktime.benchmarking.tests.test_evaluator": [],
    "sktime.benchmarking.tests.test_experiments": [],
    "sktime.benchmarking.tests.test_forecasting": [],
    "sktime.benchmarking.tests.test_orchestration": [],
    "sktime.benchmarking.tests.test_tasks": [],
    "sktime.classification": [],
    "sktime.classification._delegate": [],
    "sktime.classification.all": [],
    "sktime.classification.base": [],
    "sktime.classification.compose": [],
    "sktime.classification.compose._column_ensemble": [],
    "sktime.classification.compose._multiplexer": [],
    "sktime.classification.compose._pipeline": [],
    "sktime.classification.compose.tests": [],
    "sktime.classification.compose.tests.test_pipeline": [],
    "sktime.classification.deep_learning": [],
    "sktime.classification.deep_learning.base": [],
    "sktime.classification.deep_learning.cnn": [],
    "sktime.classification.deep_learning.cntc": [],
    "sktime.classification.deep_learning.fcn": [],
    "sktime.classification.deep_learning.inceptiontime": [],
    "sktime.classification.deep_learning.lstmfcn": [],
    "sktime.classification.deep_learning.macnn": [],
    "sktime.classification.deep_learning.mcdcnn": [],
    "sktime.classification.deep_learning.mlp": [],
    "sktime.classification.deep_learning.resnet": [],
    "sktime.classification.deep_learning.rnn": [],
    "sktime.classification.deep_learning.tapnet": [],
    "sktime.classification.dictionary_based": [],
    "sktime.classification.dictionary_based._boss": [],
    "sktime.classification.dictionary_based._boss_pyts": [],
    "sktime.classification.dictionary_based._cboss": [],
    "sktime.classification.dictionary_based._muse": [],
    "sktime.classification.dictionary_based._tde": [],
    "sktime.classification.dictionary_based._tde_numba": [],
    "sktime.classification.dictionary_based._weasel": [],
    "sktime.classification.dictionary_based.tests": [],
    "sktime.classification.dictionary_based.tests.test_boss": [],
    "sktime.classification.dictionary_based.tests.test_tde": [],
    "sktime.classification.distance_based": [],
    "sktime.classification.distance_based._elastic_ensemble": [],
    "sktime.classification.distance_based._proximity_forest": [],
    "sktime.classification.distance_based._shape_dtw": [],
    "sktime.classification.distance_based._time_series_neighbors": [],
    "sktime.classification.distance_based._time_series_neighbors_pyts": [],
    "sktime.classification.distance_based._time_series_neighbors_tslearn": [],
    "sktime.classification.distance_based.tests": [],
    "sktime.classification.distance_based.tests.test_time_series_neighbors": [],
    "sktime.classification.dummy": [],
    "sktime.classification.dummy._dummy": [],
    "sktime.classification.dummy.tests": [],
    "sktime.classification.dummy.tests.test_dummy": [],
    "sktime.classification.early_classification": [],
    "sktime.classification.early_classification._probability_threshold": [],
    "sktime.classification.early_classification._teaser": [],
    "sktime.classification.early_classification.base": [],
    "sktime.classification.early_classification.tests": [],
    "sktime.classification.early_classification.tests.test_all_early_classifiers": [],
    "sktime.classification.early_classification.tests.test_probability_threshold": [],
    "sktime.classification.early_classification.tests.test_teaser": [],
    "sktime.classification.ensemble": [],
    "sktime.classification.ensemble._bagging": [],
    "sktime.classification.ensemble._ctsf": [],
    "sktime.classification.ensemble._weighted": [],
    "sktime.classification.ensemble.tests": [],
    "sktime.classification.ensemble.tests.test_ensemble": [],
    "sktime.classification.feature_based": [],
    "sktime.classification.feature_based._catch22_classifier": [],
    "sktime.classification.feature_based._fresh_prince": [],
    "sktime.classification.feature_based._matrix_profile_classifier": [],
    "sktime.classification.feature_based._random_interval_classifier": [],
    "sktime.classification.feature_based._signature_classifier": [],
    "sktime.classification.feature_based._summary_classifier": [],
    "sktime.classification.feature_based._tsfresh_classifier": [],
    "sktime.classification.hybrid": [],
    "sktime.classification.hybrid._hivecote_v1": [],
    "sktime.classification.hybrid._hivecote_v2": [],
    "sktime.classification.hybrid.tests": [],
    "sktime.classification.hybrid.tests.test_hivecote_v2": [],
    "sktime.classification.interval_based": [],
    "sktime.classification.interval_based._cif": [],
    "sktime.classification.interval_based._drcif": [],
    "sktime.classification.interval_based._rise": [],
    "sktime.classification.interval_based._rise_numba": [],
    "sktime.classification.interval_based._stsf": [],
    "sktime.classification.interval_based._tsf": [],
    "sktime.classification.interval_based.tests": [],
    "sktime.classification.interval_based.tests.test_drcif": [],
    "sktime.classification.interval_based.tests.test_tsf": [],
    "sktime.classification.kernel_based": [],
    "sktime.classification.kernel_based._arsenal": [],
    "sktime.classification.kernel_based._rocket_classifier": [],
    "sktime.classification.kernel_based._svc": [],
    "sktime.classification.kernel_based._svc_tslearn": [],
    "sktime.classification.kernel_based.tests": [],
    "sktime.classification.kernel_based.tests.test_arsenal": [],
    "sktime.classification.model_selection": [],
    "sktime.classification.model_selection._tune": [],
    "sktime.classification.plotting": [],
    "sktime.classification.plotting.temporal_importance_diagram": [],
    "sktime.classification.shapelet_based": [],
    "sktime.classification.shapelet_based._learning_pyts": [],
    "sktime.classification.shapelet_based._learning_tslearn": [],
    "sktime.classification.shapelet_based._mrseql": [],
    "sktime.classification.shapelet_based._mrsqm": [],
    "sktime.classification.shapelet_based._stc": [],
    "sktime.classification.shapelet_based.tests": [],
    "sktime.classification.shapelet_based.tests.test_stc": [],
    "sktime.classification.sklearn": [],
    "sktime.classification.sklearn._continuous_interval_tree": [],
    "sktime.classification.sklearn._continuous_interval_tree_numba": [],
    "sktime.classification.sklearn._rotation_forest": [],
    "sktime.classification.sklearn.tests": [],
    "sktime.classification.sklearn.tests.test_all_classifiers": [],
    "sktime.classification.sklearn.tests.test_continuous_interval_tree": [],
    "sktime.classification.sklearn.tests.test_rotation_forest": [],
    "sktime.classification.tests": [],
    "sktime.classification.tests._classification_test_reproduction": [],
    "sktime.classification.tests._expected_outputs": [],
    "sktime.classification.tests.test_all_classifiers": [],
    "sktime.classification.tests.test_base": [],
    "sktime.classification.tests.test_sklearn_compatibility": [],
    "sktime.clustering": [],
    "sktime.clustering.base": [],
    "sktime.clustering.compose": [],
    "sktime.clustering.compose._pipeline": [],
    "sktime.clustering.compose.tests": [],
    "sktime.clustering.compose.tests.test_pipeline": [],
    "sktime.clustering.dbscan": [],
    "sktime.clustering.k_means": [],
    "sktime.clustering.k_means._k_means": [],
    "sktime.clustering.k_means._k_means_tslearn": [],
    "sktime.clustering.k_medoids": [],
    "sktime.clustering.k_shapes": [],
    "sktime.clustering.kernel_k_means": [],
    "sktime.clustering.metrics": [],
    "sktime.clustering.metrics.averaging": [],
    "sktime.clustering.metrics.averaging._averaging": [],
    "sktime.clustering.metrics.averaging._dba": [],
    "sktime.clustering.metrics.averaging._dba_numba": [],
    "sktime.clustering.metrics.medoids": [],
    "sktime.clustering.partitioning": [],
    "sktime.clustering.partitioning._lloyds": [],
    "sktime.clustering.tests": [],
    "sktime.clustering.tests.metrics": [],
    "sktime.clustering.tests.metrics.test_dba": [],
    "sktime.clustering.tests.metrics.test_medoids": [],
    "sktime.clustering.tests.test_k_means": [],
    "sktime.clustering.tests.test_k_medoids": [],
    "sktime.clustering.tests.test_k_shapes": [],
    "sktime.clustering.tests.test_kernel_k_means": [],
    "sktime.clustering.tests.test_lloyds": [],
    "sktime.clustering.utils": [],
    "sktime.clustering.utils.plotting": [],
    "sktime.clustering.utils.plotting._plot_partitions": [],
    "sktime.datasets": [],
    "sktime.datasets._data_io": [],
    "sktime.datasets._fpp3_loaders": [],
    "sktime.datasets._readers_writers": [],
    "sktime.datasets._readers_writers.arff": [],
    "sktime.datasets._readers_writers.long": [],
    "sktime.datasets._readers_writers.ts": [],
    "sktime.datasets._readers_writers.tsf": [],
    "sktime.datasets._readers_writers.tsv": [],
    "sktime.datasets._readers_writers.utils": [],
    "sktime.datasets._single_problem_loaders": [],
    "sktime.datasets.data.dataset_lists": [],
    "sktime.datasets.setup": [],
    "sktime.datasets.tests": [],
    "sktime.datasets.tests.test_data_io": [],
    "sktime.datasets.tests.test_datadownload": [],
    "sktime.datasets.tests.test_loaders": [],
    "sktime.datasets.tests.test_readers_writers": [],
    "sktime.datasets.tests.test_single_problem_loaders": [],
    "sktime.datasets.tsc_dataset_names": [],
    "sktime.datasets.tsf_dataset_names": [],
    "sktime.datatypes": [],
    "sktime.datatypes._adapter": [],
    "sktime.datatypes._adapter.dask_to_pd": [],
    "sktime.datatypes._adapter.gluonts_to_pd_multiindex": [],
    "sktime.datatypes._adapter.pd_multiindex_to_list_dataset": [],
    "sktime.datatypes._adapter.polars": [],
    "sktime.datatypes._adapter.tests": [],
    "sktime.datatypes._adapter.tests.test_dask_pd": [],
    "sktime.datatypes._adapter.tests.test_polars": [],
    "sktime.datatypes._alignment": [],
    "sktime.datatypes._alignment._check": [],
    "sktime.datatypes._alignment._examples": [],
    "sktime.datatypes._alignment._registry": [],
    "sktime.datatypes._check": [],
    "sktime.datatypes._common": [],
    "sktime.datatypes._convert": [],
    "sktime.datatypes._convert_utils": [],
    "sktime.datatypes._convert_utils._coerce": [],
    "sktime.datatypes._convert_utils._convert": [],
    "sktime.datatypes._examples": [],
    "sktime.datatypes._hierarchical": [],
    "sktime.datatypes._hierarchical._check": [],
    "sktime.datatypes._hierarchical._convert": [],
    "sktime.datatypes._hierarchical._examples": [],
    "sktime.datatypes._hierarchical._registry": [],
    "sktime.datatypes._panel": [],
    "sktime.datatypes._panel._check": [],
    "sktime.datatypes._panel._convert": [],
    "sktime.datatypes._panel._examples": [],
    "sktime.datatypes._panel._registry": [],
    "sktime.datatypes._proba": [],
    "sktime.datatypes._proba._check": [],
    "sktime.datatypes._proba._convert": [],
    "sktime.datatypes._proba._examples": [],
    "sktime.datatypes._proba._registry": [],
    "sktime.datatypes._registry": [],
    "sktime.datatypes._series": [],
    "sktime.datatypes._series._check": [],
    "sktime.datatypes._series._convert": [],
    "sktime.datatypes._series._examples": [],
    "sktime.datatypes._series._mtypes": [],
    "sktime.datatypes._series._registry": [],
    "sktime.datatypes._series_as_panel": [],
    "sktime.datatypes._series_as_panel._convert": [],
    "sktime.datatypes._table": [],
    "sktime.datatypes._table._check": [],
    "sktime.datatypes._table._convert": [],
    "sktime.datatypes._table._examples": [],
    "sktime.datatypes._table._registry": [],
    "sktime.datatypes._utilities": [],
    "sktime.datatypes._vectorize": [],
    "sktime.datatypes.tests": [],
    "sktime.datatypes.tests.test_check": [],
    "sktime.datatypes.tests.test_convert": [],
    "sktime.datatypes.tests.test_convert_bugfixes": [],
    "sktime.datatypes.tests.test_convert_to": [],
    "sktime.datatypes.tests.test_lookup": [],
    "sktime.datatypes.tests.test_panel_converters": [],
    "sktime.datatypes.tests.test_series_to_panel_converters": [],
    "sktime.datatypes.tests.test_utils": [],
    "sktime.datatypes.tests.test_vectorize": [],
    "sktime.distances": [],
    "sktime.distances._ddtw": [],
    "sktime.distances._ddtw_numba": [],
    "sktime.distances._distance": [],
    "sktime.distances._distance_alignment_paths": [],
    "sktime.distances._distance_pairwise": [],
    "sktime.distances._dtw": [],
    "sktime.distances._dtw_numba": [],
    "sktime.distances._edr": [],
    "sktime.distances._edr_numba": [],
    "sktime.distances._erp": [],
    "sktime.distances._erp_numba": [],
    "sktime.distances._euclidean": [],
    "sktime.distances._euclidean_numba": [],
    "sktime.distances._lcss": [],
    "sktime.distances._lcss_numba": [],
    "sktime.distances._lower_bounding_numba": [],
    "sktime.distances._msm": [],
    "sktime.distances._msm_numba": [],
    "sktime.distances._numba_utils": [],
    "sktime.distances._resolve_metric": [],
    "sktime.distances._squared": [],
    "sktime.distances._squared_numba": [],
    "sktime.distances._twe": [],
    "sktime.distances._twe_numba": [],
    "sktime.distances._wddtw": [],
    "sktime.distances._wdtw": [],
    "sktime.distances._wdtw_numba": [],
    "sktime.distances.base": [],
    "sktime.distances.base._base": [],
    "sktime.distances.base._types": [],
    "sktime.distances.lower_bounding": [],
    "sktime.distances.mpdist": [],
    "sktime.distances.tests": [],
    "sktime.distances.tests._expected_results": [],
    "sktime.distances.tests._shared_tests": [],
    "sktime.distances.tests._utils": [],
    "sktime.distances.tests.test_distance_alignment_path": [],
    "sktime.distances.tests.test_distance_correctness": [],
    "sktime.distances.tests.test_lower_bounding": [],
    "sktime.distances.tests.test_numba_distance_parameters": [],
    "sktime.distances.tests.test_numba_distances": [],
    "sktime.distances.tests.test_pairwise_distances": [],
    "sktime.dists_kernels": [],
    "sktime.dists_kernels.algebra": [],
    "sktime.dists_kernels.base": [],
    "sktime.dists_kernels.base._base": [],
    "sktime.dists_kernels.base._delegate": [],
    "sktime.dists_kernels.base.adapters": [],
    "sktime.dists_kernels.base.adapters._tslearn": [],
    "sktime.dists_kernels.compose": [],
    "sktime.dists_kernels.compose_from_align": [],
    "sktime.dists_kernels.compose_tab_to_panel": [],
    "sktime.dists_kernels.ctw": [],
    "sktime.dists_kernels.dist_to_kern": [],
    "sktime.dists_kernels.dtw": [],
    "sktime.dists_kernels.dtw._dtw_python": [],
    "sktime.dists_kernels.dtw._dtw_sktime": [],
    "sktime.dists_kernels.dtw._dtw_tslearn": [],
    "sktime.dists_kernels.dummy": [],
    "sktime.dists_kernels.edit_dist": [],
    "sktime.dists_kernels.gak": [],
    "sktime.dists_kernels.indep": [],
    "sktime.dists_kernels.lcss": [],
    "sktime.dists_kernels.lucky": [],
    "sktime.dists_kernels.scipy_dist": [],
    "sktime.dists_kernels.signature_kernel": [],
    "sktime.dists_kernels.tests": [],
    "sktime.dists_kernels.tests.test_all_dist_kernels": [],
    "sktime.dists_kernels.tests.test_compose_tab_to_panel": [],
    "sktime.dists_kernels.tests.test_dist_kernels_dunders": [],
    "sktime.dists_kernels.tests.test_scipy_dist": [],
    "sktime.exceptions": [],
    "sktime.forecasting": [],
    "sktime.forecasting.adapters": [],
    "sktime.forecasting.adapters._hcrystalball": [],
    "sktime.forecasting.all": [],
    "sktime.forecasting.arch": [],
    "sktime.forecasting.arch._statsforecast_arch": [],
    "sktime.forecasting.arch._uarch": [],
    "sktime.forecasting.ardl": [],
    "sktime.forecasting.arima": [],
    "sktime.forecasting.arima._pmdarima": [],
    "sktime.forecasting.arima._statsmodels": [],
    "sktime.forecasting.auto_reg": [],
    "sktime.forecasting.base": [],
    "sktime.forecasting.base._base": [],
    "sktime.forecasting.base._delegate": [],
    "sktime.forecasting.base._fh": [],
    "sktime.forecasting.base._meta": [],
    "sktime.forecasting.base._sktime": [],
    "sktime.forecasting.base.adapters": [],
    "sktime.forecasting.base.adapters._fbprophet": [],
    "sktime.forecasting.base.adapters._generalised_statsforecast": [],
    "sktime.forecasting.base.adapters._neuralforecast": [],
    "sktime.forecasting.base.adapters._pmdarima": [],
    "sktime.forecasting.base.adapters._pytorch": [],
    "sktime.forecasting.base.adapters._statsforecast": [],
    "sktime.forecasting.base.adapters._statsmodels": [],
    "sktime.forecasting.base.adapters._tbats": [],
    "sktime.forecasting.base.tests": [],
    "sktime.forecasting.base.tests.randomtest": [],
    "sktime.forecasting.base.tests.test_base": [],
    "sktime.forecasting.base.tests.test_base_bugs": [],
    "sktime.forecasting.base.tests.test_fh": [],
    "sktime.forecasting.bats": [],
    "sktime.forecasting.compose": [],
    "sktime.forecasting.compose._bagging": [],
    "sktime.forecasting.compose._column_ensemble": [],
    "sktime.forecasting.compose._ensemble": [],
    "sktime.forecasting.compose._fallback": [],
    "sktime.forecasting.compose._fhplex": [],
    "sktime.forecasting.compose._grouped": [],
    "sktime.forecasting.compose._hierarchy_ensemble": [],
    "sktime.forecasting.compose._ignore_x": [],
    "sktime.forecasting.compose._multiplexer": [],
    "sktime.forecasting.compose._pipeline": [],
    "sktime.forecasting.compose._reduce": [],
    "sktime.forecasting.compose._stack": [],
    "sktime.forecasting.compose._transform_select_forecaster": [],
    "sktime.forecasting.compose.tests": [],
    "sktime.forecasting.compose.tests.test_autoensemble": [],
    "sktime.forecasting.compose.tests.test_bagging": [],
    "sktime.forecasting.compose.tests.test_column_ensemble": [],
    "sktime.forecasting.compose.tests.test_ensemble": [],
    "sktime.forecasting.compose.tests.test_fallback": [],
    "sktime.forecasting.compose.tests.test_forecastx": [],
    "sktime.forecasting.compose.tests.test_hierarchy_ensemble": [],
    "sktime.forecasting.compose.tests.test_ignorex": [],
    "sktime.forecasting.compose.tests.test_multiplex": [],
    "sktime.forecasting.compose.tests.test_pipeline": [],
    "sktime.forecasting.compose.tests.test_reduce": [],
    "sktime.forecasting.compose.tests.test_reduce_global": [],
    "sktime.forecasting.compose.tests.test_transformer_select_forecaster": [],
    "sktime.forecasting.conditional_invertible_neural_network": [],
    "sktime.forecasting.conformal": [],
    "sktime.forecasting.croston": [],
    "sktime.forecasting.dummy": [],
    "sktime.forecasting.dynamic_factor": [],
    "sktime.forecasting.ets": [],
    "sktime.forecasting.exp_smoothing": [],
    "sktime.forecasting.fbprophet": [],
    "sktime.forecasting.hf_transformers_forecaster": [],
    "sktime.forecasting.ltsf": [],
    "sktime.forecasting.model_evaluation": [],
    "sktime.forecasting.model_evaluation._functions": [],
    "sktime.forecasting.model_evaluation.tests": [],
    "sktime.forecasting.model_evaluation.tests.test_evaluate": [],
    "sktime.forecasting.model_selection": [],
    "sktime.forecasting.model_selection._tune": [],
    "sktime.forecasting.model_selection.tests": [],
    "sktime.forecasting.model_selection.tests.test_tune": [],
    "sktime.forecasting.naive": [],
    "sktime.forecasting.neuralforecast": [],
    "sktime.forecasting.online_learning": [],
    "sktime.forecasting.online_learning._online_ensemble": [],
    "sktime.forecasting.online_learning._prediction_weighted_ensembler": [],
    "sktime.forecasting.online_learning.tests": [],
    "sktime.forecasting.online_learning.tests.test_online_learning": [],
    "sktime.forecasting.pykan_forecaster": [],
    "sktime.forecasting.reconcile": [],
    "sktime.forecasting.sarimax": [],
    "sktime.forecasting.squaring_residuals": [],
    "sktime.forecasting.statsforecast": [],
    "sktime.forecasting.stream": [],
    "sktime.forecasting.stream._update": [],
    "sktime.forecasting.structural": [],
    "sktime.forecasting.tbats": [],
    "sktime.forecasting.tests": [],
    "sktime.forecasting.tests._config": [],
    "sktime.forecasting.tests.test_all_forecasters": [],
    "sktime.forecasting.tests.test_ardl": [],
    "sktime.forecasting.tests.test_auto_reg": [],
    "sktime.forecasting.tests.test_conformal": [],
    "sktime.forecasting.tests.test_croston": [],
    "sktime.forecasting.tests.test_dynamic_factor": [],
    "sktime.forecasting.tests.test_ets": [],
    "sktime.forecasting.tests.test_exp_smoothing": [],
    "sktime.forecasting.tests.test_interval_wrappers": [],
    "sktime.forecasting.tests.test_naive": [],
    "sktime.forecasting.tests.test_neuralforecast": [],
    "sktime.forecasting.tests.test_pmdarima": [],
    "sktime.forecasting.tests.test_prophet": [],
    "sktime.forecasting.tests.test_reconcile": [],
    "sktime.forecasting.tests.test_sarimax": [],
    "sktime.forecasting.tests.test_statsforecast": [],
    "sktime.forecasting.tests.test_structural": [],
    "sktime.forecasting.tests.test_tbats": [],
    "sktime.forecasting.tests.test_theta": [],
    "sktime.forecasting.tests.test_var": [],
    "sktime.forecasting.tests.test_varmax": [],
    "sktime.forecasting.tests.test_vecm": [],
    "sktime.forecasting.tests.test_window_forecasters": [],
    "sktime.forecasting.theta": [],
    "sktime.forecasting.trend": [],
    "sktime.forecasting.trend._curve_fit_forecaster": [],
    "sktime.forecasting.trend._polynomial_trend_forecaster": [],
    "sktime.forecasting.trend._pwl_trend_forecaster": [],
    "sktime.forecasting.trend._stl_forecaster": [],
    "sktime.forecasting.trend._trend_forecaster": [],
    "sktime.forecasting.trend._util": [],
    "sktime.forecasting.trend.tests": [],
    "sktime.forecasting.trend.tests.test_pwl_trend": [],
    "sktime.forecasting.trend.tests.test_trend": [],
    "sktime.forecasting.var": [],
    "sktime.forecasting.varmax": [],
    "sktime.forecasting.vecm": [],
    "sktime.libs": [],
    "sktime.libs.pykalman": [],
    "sktime.libs.pykalman.datasets": [],
    "sktime.libs.pykalman.datasets.base": [],
    "sktime.libs.pykalman.datasets.descr": [],
    "sktime.libs.pykalman.sqrt": [],
    "sktime.libs.pykalman.sqrt.bierman": [],
    "sktime.libs.pykalman.sqrt.cholesky": [],
    "sktime.libs.pykalman.sqrt.tests": [],
    "sktime.libs.pykalman.sqrt.tests.test_unscented": [],
    "sktime.libs.pykalman.sqrt.unscented": [],
    "sktime.libs.pykalman.standard": [],
    "sktime.libs.pykalman.tests": [],
    "sktime.libs.pykalman.tests.test_standard": [],
    "sktime.libs.pykalman.tests.test_unscented": [],
    "sktime.libs.pykalman.unscented": [],
    "sktime.libs.pykalman.utils": [],
    "sktime.libs.vmdpy": [],
    "sktime.libs.vmdpy.tests": [],
    "sktime.libs.vmdpy.tests.test_readme_example": [],
    "sktime.libs.vmdpy.vmdpy": [],
    "sktime.networks": [],
    "sktime.networks.base": [],
    "sktime.networks.cinn": [],
    "sktime.networks.cnn": [],
    "sktime.networks.cntc": [],
    "sktime.networks.fcn": [],
    "sktime.networks.inceptiontime": [],
    "sktime.networks.lstmfcn": [],
    "sktime.networks.lstmfcn_layers": [],
    "sktime.networks.ltsf": [],
    "sktime.networks.ltsf._ltsf": [],
    "sktime.networks.ltsf.layers": [],
    "sktime.networks.macnn": [],
    "sktime.networks.mcdcnn": [],
    "sktime.networks.mlp": [],
    "sktime.networks.resnet": [],
    "sktime.networks.rnn": [],
    "sktime.networks.tapnet": [],
    "sktime.networks.tests": [],
    "sktime.networks.tests.test_all_networks": [],
    "sktime.param_est": [],
    "sktime.param_est.base": [],
    "sktime.param_est.compose": [],
    "sktime.param_est.compose._func_fitter": [],
    "sktime.param_est.compose._pipeline": [],
    "sktime.param_est.fixed": [],
    "sktime.param_est.plugin": [],
    "sktime.param_est.plugin._common": [],
    "sktime.param_est.plugin._forecaster": [],
    "sktime.param_est.plugin._transformer": [],
    "sktime.param_est.plugin.tests": [],
    "sktime.param_est.plugin.tests.test_plugin": [],
    "sktime.param_est.seasonality": [],
    "sktime.param_est.stationarity": [],
    "sktime.param_est.stationarity._arch": [],
    "sktime.param_est.stationarity._statsmodels": [],
    "sktime.param_est.tests": [],
    "sktime.param_est.tests.test_all_param_est": [],
    "sktime.param_est.tests.test_plugin": [],
    "sktime.param_est.tests.test_seasonality": [],
    "sktime.param_est.tests.test_stationarity": [],
    "sktime.performance_metrics": [],
    "sktime.performance_metrics.annotation": [],
    "sktime.performance_metrics.annotation.metrics": [],
    "sktime.performance_metrics.base": [],
    "sktime.performance_metrics.base._base": [],
    "sktime.performance_metrics.forecasting": [],
    "sktime.performance_metrics.forecasting._classes": [],
    "sktime.performance_metrics.forecasting._coerce": [],
    "sktime.performance_metrics.forecasting._functions": [],
    "sktime.performance_metrics.forecasting.probabilistic": [],
    "sktime.performance_metrics.forecasting.probabilistic._classes": [],
    "sktime.performance_metrics.forecasting.probabilistic.tests": [],
    "sktime.performance_metrics.forecasting.probabilistic.tests.test_distr_metrics": [],
    "sktime.performance_metrics.forecasting.probabilistic.tests.test_probabilistic_metrics": [],
    "sktime.performance_metrics.forecasting.tests": [],
    "sktime.performance_metrics.forecasting.tests.test_metrics": [],
    "sktime.performance_metrics.tests": [],
    "sktime.performance_metrics.tests._config": [],
    "sktime.performance_metrics.tests.test_metrics_classes": [],
    "sktime.performance_metrics.tests.test_numpy_metrics": [],
    "sktime.performance_metrics.tests.test_performance_metrics_forecasting": [],
    "sktime.performance_metrics.tests.test_segmentation_metrics": [],
    "sktime.pipeline": [],
    "sktime.pipeline._make_pipeline": [],
    "sktime.pipeline._sklearn_to_sktime": [],
    "sktime.pipeline.pipeline": [],
    "sktime.pipeline.step": [],
    "sktime.pipeline.tests": [],
    "sktime.pipeline.tests.regression_tests": [],
    "sktime.pipeline.tests.regression_tests.test_pipeline_regression": [],
    "sktime.pipeline.tests.test_pipeline": [],
    "sktime.pipeline.tests.test_step": [],
    "sktime.proba": [],
    "sktime.proba.base": [],
    "sktime.proba.empirical": [],
    "sktime.proba.laplace": [],
    "sktime.proba.mixture": [],
    "sktime.proba.normal": [],
    "sktime.proba.t": [],
    "sktime.proba.tests": [],
    "sktime.proba.tests.test_all_distrs": [],
    "sktime.proba.tests.test_base_default_methods": [],
    "sktime.proba.tests.test_proba_basic": [],
    "sktime.proba.tfp": [],
    "sktime.registry": [],
    "sktime.registry._alias": [],
    "sktime.registry._alias_str": [],
    "sktime.registry._base_classes": [],
    "sktime.registry._craft": [],
    "sktime.registry._lookup": [],
    "sktime.registry._scitype": [],
    "sktime.registry._tags": [],
    "sktime.registry.tests": [],
    "sktime.registry.tests.test_craft": [],
    "sktime.registry.tests.test_lookup": [],
    "sktime.registry.tests.test_scitype": [],
    "sktime.registry.tests.test_tags": [],
    "sktime.regression": [],
    "sktime.regression._delegate": [],
    "sktime.regression.all": [],
    "sktime.regression.base": [],
    "sktime.regression.compose": [],
    "sktime.regression.compose._ensemble": [],
    "sktime.regression.compose._multiplexer": [],
    "sktime.regression.compose._pipeline": [],
    "sktime.regression.deep_learning": [],
    "sktime.regression.deep_learning.base": [],
    "sktime.regression.deep_learning.cnn": [],
    "sktime.regression.deep_learning.cntc": [],
    "sktime.regression.deep_learning.fcn": [],
    "sktime.regression.deep_learning.inceptiontime": [],
    "sktime.regression.deep_learning.lstmfcn": [],
    "sktime.regression.deep_learning.macnn": [],
    "sktime.regression.deep_learning.mcdcnn": [],
    "sktime.regression.deep_learning.mlp": [],
    "sktime.regression.deep_learning.resnet": [],
    "sktime.regression.deep_learning.rnn": [],
    "sktime.regression.deep_learning.tapnet": [],
    "sktime.regression.distance_based": [],
    "sktime.regression.distance_based._time_series_neighbors": [],
    "sktime.regression.distance_based.tests": [],
    "sktime.regression.distance_based.tests.test_time_series_neighbors": [],
    "sktime.regression.dummy": [],
    "sktime.regression.dummy._dummy": [],
    "sktime.regression.dummy.tests": [],
    "sktime.regression.dummy.tests.test_dummy": [],
    "sktime.regression.interval_based": [],
    "sktime.regression.interval_based._tsf": [],
    "sktime.regression.kernel_based": [],
    "sktime.regression.kernel_based._rocket_regressor": [],
    "sktime.regression.kernel_based._svr_tslearn": [],
    "sktime.regression.tests": [],
    "sktime.regression.tests.test_all_regressors": [],
    "sktime.regression.tests.test_base": [],
    "sktime.series_as_features": [],
    "sktime.series_as_features.model_selection": [],
    "sktime.series_as_features.model_selection._split": [],
    "sktime.split": [],
    "sktime.split.base": [],
    "sktime.split.base._base_splitter": [],
    "sktime.split.base._base_windowsplitter": [],
    "sktime.split.base._common": [],
    "sktime.split.base.tests": [],
    "sktime.split.base.tests.test_base": [],
    "sktime.split.compose": [],
    "sktime.split.compose._repeat": [],
    "sktime.split.cutoff": [],
    "sktime.split.expandingcutoff": [],
    "sktime.split.expandinggreedy": [],
    "sktime.split.expandingwindow": [],
    "sktime.split.instance": [],
    "sktime.split.sameloc": [],
    "sktime.split.singlewindow": [],
    "sktime.split.slidingwindow": [],
    "sktime.split.temporal_train_test_split": [],
    "sktime.split.testplustrain": [],
    "sktime.split.tests": [],
    "sktime.split.tests.test_all_splitters": [],
    "sktime.split.tests.test_cutoff": [],
    "sktime.split.tests.test_expandingcutoff": [],
    "sktime.split.tests.test_expandinggreedy": [],
    "sktime.split.tests.test_expandingwindow": [],
    "sktime.split.tests.test_sameloc": [],
    "sktime.split.tests.test_singlewindow": [],
    "sktime.split.tests.test_slidingwindow": [],
    "sktime.split.tests.test_split": [],
    "sktime.split.tests.test_temporaltraintest": [],
    "sktime.tests": [],
    "sktime.tests._config": [],
    "sktime.tests.test_all_estimators": [],
    "sktime.tests.test_class_register": [],
    "sktime.tests.test_softdeps": [],
    "sktime.tests.test_switch": [],
    "sktime.tests.tests": [],
    "sktime.tests.tests.test_test_utils": [],
    "sktime.transformations": [],
    "sktime.transformations._delegate": [],
    "sktime.transformations.all": [],
    "sktime.transformations.base": [],
    "sktime.transformations.bootstrap": [],
    "sktime.transformations.bootstrap._mbb": [],
    "sktime.transformations.bootstrap._splitterboot": [],
    "sktime.transformations.bootstrap._tsbootstrap": [],
    "sktime.transformations.bootstrap.tests": [],
    "sktime.transformations.bootstrap.tests.test_mbb": [],
    "sktime.transformations.compose": [],
    "sktime.transformations.compose._column": [],
    "sktime.transformations.compose._common": [],
    "sktime.transformations.compose._featureunion": [],
    "sktime.transformations.compose._fitintransform": [],
    "sktime.transformations.compose._grouped": [],
    "sktime.transformations.compose._id": [],
    "sktime.transformations.compose._invert": [],
    "sktime.transformations.compose._ixtox": [],
    "sktime.transformations.compose._multiplex": [],
    "sktime.transformations.compose._optional": [],
    "sktime.transformations.compose._pipeline": [],
    "sktime.transformations.compose._transformif": [],
    "sktime.transformations.compose._ytox": [],
    "sktime.transformations.hierarchical": [],
    "sktime.transformations.hierarchical.aggregate": [],
    "sktime.transformations.hierarchical.reconcile": [],
    "sktime.transformations.hierarchical.tests": [],
    "sktime.transformations.hierarchical.tests.test_aggregate": [],
    "sktime.transformations.hierarchical.tests.test_reconcile": [],
    "sktime.transformations.merger": [],
    "sktime.transformations.panel": [],
    "sktime.transformations.panel._catch22_numba": [],
    "sktime.transformations.panel._shapelet_transform_numba": [],
    "sktime.transformations.panel.catch22": [],
    "sktime.transformations.panel.catch22wrapper": [],
    "sktime.transformations.panel.channel_selection": [],
    "sktime.transformations.panel.compose": [],
    "sktime.transformations.panel.compose_distance": [],
    "sktime.transformations.panel.dictionary_based": [],
    "sktime.transformations.panel.dictionary_based._paa": [],
    "sktime.transformations.panel.dictionary_based._sax": [],
    "sktime.transformations.panel.dictionary_based._sfa": [],
    "sktime.transformations.panel.dictionary_based._sfa_fast": [],
    "sktime.transformations.panel.dictionary_based._sfa_fast_numba": [],
    "sktime.transformations.panel.dictionary_based._sfa_numba": [],
    "sktime.transformations.panel.dictionary_based.tests": [],
    "sktime.transformations.panel.dictionary_based.tests.test_paa": [],
    "sktime.transformations.panel.dictionary_based.tests.test_sfa": [],
    "sktime.transformations.panel.dwt": [],
    "sktime.transformations.panel.hog1d": [],
    "sktime.transformations.panel.interpolate": [],
    "sktime.transformations.panel.matrix_profile": [],
    "sktime.transformations.panel.padder": [],
    "sktime.transformations.panel.pca": [],
    "sktime.transformations.panel.random_intervals": [],
    "sktime.transformations.panel.reduce": [],
    "sktime.transformations.panel.rocket": [],
    "sktime.transformations.panel.rocket._minirocket": [],
    "sktime.transformations.panel.rocket._minirocket_multi_numba": [],
    "sktime.transformations.panel.rocket._minirocket_multi_var_numba": [],
    "sktime.transformations.panel.rocket._minirocket_multivariate": [],
    "sktime.transformations.panel.rocket._minirocket_multivariate_variable": [],
    "sktime.transformations.panel.rocket._minirocket_numba": [],
    "sktime.transformations.panel.rocket._multirocket": [],
    "sktime.transformations.panel.rocket._multirocket_multi_numba": [],
    "sktime.transformations.panel.rocket._multirocket_multivariate": [],
    "sktime.transformations.panel.rocket._multirocket_numba": [],
    "sktime.transformations.panel.rocket._rocket": [],
    "sktime.transformations.panel.rocket._rocket_numba": [],
    "sktime.transformations.panel.rocket._rocket_pyts": [],
    "sktime.transformations.panel.rocket.tests": [],
    "sktime.transformations.panel.rocket.tests.test_MiniRocket": [],
    "sktime.transformations.panel.rocket.tests.test_MiniRocketMultivariate": [],
    "sktime.transformations.panel.rocket.tests.test_MiniRocketMultivariateVariable": [],
    "sktime.transformations.panel.rocket.tests.test_MultiRocket": [],
    "sktime.transformations.panel.rocket.tests.test_MultiRocketMultivariate": [],
    "sktime.transformations.panel.rocket.tests.test_Rocket": [],
    "sktime.transformations.panel.segment": [],
    "sktime.transformations.panel.shapelet_transform": [],
    "sktime.transformations.panel.shapelet_transform._shapelet_transform": [],
    "sktime.transformations.panel.shapelet_transform._shapelet_transform_pyts": [],
    "sktime.transformations.panel.shapelet_transform.tests": [],
    "sktime.transformations.panel.shapelet_transform.tests.test_shapelet_transform": [],
    "sktime.transformations.panel.shapelet_transform.tests.test_shapelet_transform_pyts": [],
    "sktime.transformations.panel.signature_based": [],
    "sktime.transformations.panel.signature_based._augmentations": [],
    "sktime.transformations.panel.signature_based._checks": [],
    "sktime.transformations.panel.signature_based._compute": [],
    "sktime.transformations.panel.signature_based._rescaling": [],
    "sktime.transformations.panel.signature_based._signature_method": [],
    "sktime.transformations.panel.signature_based._window": [],
    "sktime.transformations.panel.signature_based.tests": [],
    "sktime.transformations.panel.signature_based.tests.test_augmentations": [],
    "sktime.transformations.panel.signature_based.tests.test_method": [],
    "sktime.transformations.panel.slope": [],
    "sktime.transformations.panel.summarize": [],
    "sktime.transformations.panel.summarize._extract": [],
    "sktime.transformations.panel.summarize.tests": [],
    "sktime.transformations.panel.summarize.tests.test_FittedParamExtractor": [],
    "sktime.transformations.panel.summarize.tests.test_PlateauFinder": [],
    "sktime.transformations.panel.summarize.tests.test_RandomIntervalFeatureExtractor": [],
    "sktime.transformations.panel.supervised_intervals": [],
    "sktime.transformations.panel.tests": [],
    "sktime.transformations.panel.tests.test_ColumnConcatenator": [],
    "sktime.transformations.panel.tests.test_PCATransformer": [],
    "sktime.transformations.panel.tests.test_Padder": [],
    "sktime.transformations.panel.tests.test_Truncate": [],
    "sktime.transformations.panel.tests.test_catch22": [],
    "sktime.transformations.panel.tests.test_channel_selection": [],
    "sktime.transformations.panel.tests.test_compose": [],
    "sktime.transformations.panel.tests.test_dwt": [],
    "sktime.transformations.panel.tests.test_hog1d_transformer": [],
    "sktime.transformations.panel.tests.test_interpolate": [],
    "sktime.transformations.panel.tests.test_intervals": [],
    "sktime.transformations.panel.tests.test_segment": [],
    "sktime.transformations.panel.tests.test_sliding_window_segmenter_transformer": [],
    "sktime.transformations.panel.tests.test_slope_transformer": [],
    "sktime.transformations.panel.tests.test_timebinner": [],
    "sktime.transformations.panel.tests.test_tsfresh": [],
    "sktime.transformations.panel.truncation": [],
    "sktime.transformations.panel.tsfresh": [],
    "sktime.transformations.series": [],
    "sktime.transformations.series._clasp_numba": [],
    "sktime.transformations.series.acf": [],
    "sktime.transformations.series.adapt": [],
    "sktime.transformations.series.adi_cv": [],
    "sktime.transformations.series.augmenter": [],
    "sktime.transformations.series.binning": [],
    "sktime.transformations.series.bkfilter": [],
    "sktime.transformations.series.bollinger": [],
    "sktime.transformations.series.boxcox": [],
    "sktime.transformations.series.cffilter": [],
    "sktime.transformations.series.clasp": [],
    "sktime.transformations.series.clear_sky": [],
    "sktime.transformations.series.cos": [],
    "sktime.transformations.series.date": [],
    "sktime.transformations.series.detrend": [],
    "sktime.transformations.series.detrend._deseasonalize": [],
    "sktime.transformations.series.detrend._detrend": [],
    "sktime.transformations.series.detrend.mstl": [],
    "sktime.transformations.series.detrend.tests": [],
    "sktime.transformations.series.detrend.tests.test_deseasonalise": [],
    "sktime.transformations.series.detrend.tests.test_detrend": [],
    "sktime.transformations.series.detrend.tests.test_mstl": [],
    "sktime.transformations.series.difference": [],
    "sktime.transformations.series.dilation_mapping": [],
    "sktime.transformations.series.dobin": [],
    "sktime.transformations.series.dropna": [],
    "sktime.transformations.series.exponent": [],
    "sktime.transformations.series.feature_selection": [],
    "sktime.transformations.series.filter": [],
    "sktime.transformations.series.fourier": [],
    "sktime.transformations.series.func_transform": [],
    "sktime.transformations.series.hidalgo": [],
    "sktime.transformations.series.holiday": [],
    "sktime.transformations.series.holiday._holidayfeats": [],
    "sktime.transformations.series.holiday.country_holidays": [],
    "sktime.transformations.series.holiday.financial_holidays": [],
    "sktime.transformations.series.holiday.tests": [],
    "sktime.transformations.series.holiday.tests.test_holidays": [],
    "sktime.transformations.series.hpfilter": [],
    "sktime.transformations.series.impute": [],
    "sktime.transformations.series.kalman_filter": [],
    "sktime.transformations.series.kinematic": [],
    "sktime.transformations.series.lag": [],
    "sktime.transformations.series.matrix_profile": [],
    "sktime.transformations.series.outlier_detection": [],
    "sktime.transformations.series.paa": [],
    "sktime.transformations.series.peak": [],
    "sktime.transformations.series.sax": [],
    "sktime.transformations.series.scaledasinh": [],
    "sktime.transformations.series.scaledlogit": [],
    "sktime.transformations.series.subset": [],
    "sktime.transformations.series.summarize": [],
    "sktime.transformations.series.temporian": [],
    "sktime.transformations.series.tests": [],
    "sktime.transformations.series.tests.test_adapt": [],
    "sktime.transformations.series.tests.test_adi_cv": [],
    "sktime.transformations.series.tests.test_augmenter": [],
    "sktime.transformations.series.tests.test_bollinger": [],
    "sktime.transformations.series.tests.test_boxcox": [],
    "sktime.transformations.series.tests.test_clear_sky": [],
    "sktime.transformations.series.tests.test_date": [],
    "sktime.transformations.series.tests.test_differencer": [],
    "sktime.transformations.series.tests.test_dobin": [],
    "sktime.transformations.series.tests.test_dropna": [],
    "sktime.transformations.series.tests.test_exponent": [],
    "sktime.transformations.series.tests.test_featureizer": [],
    "sktime.transformations.series.tests.test_fourier": [],
    "sktime.transformations.series.tests.test_hidalgo": [],
    "sktime.transformations.series.tests.test_imputer": [],
    "sktime.transformations.series.tests.test_kalman_filter": [],
    "sktime.transformations.series.tests.test_kinematic": [],
    "sktime.transformations.series.tests.test_lag": [],
    "sktime.transformations.series.tests.test_optional_passthrough": [],
    "sktime.transformations.series.tests.test_paa": [],
    "sktime.transformations.series.tests.test_sax": [],
    "sktime.transformations.series.tests.test_scaledlogit": [],
    "sktime.transformations.series.tests.test_sklearn_adaptor": [],
    "sktime.transformations.series.tests.test_subset": [],
    "sktime.transformations.series.tests.test_summarize": [],
    "sktime.transformations.series.tests.test_temporian": [],
    "sktime.transformations.series.tests.test_theta": [],
    "sktime.transformations.series.tests.test_time_since": [],
    "sktime.transformations.series.tests.test_vmd": [],
    "sktime.transformations.series.tests.test_window_summarizer": [],
    "sktime.transformations.series.theta": [],
    "sktime.transformations.series.time_since": [],
    "sktime.transformations.series.vmd": [],
    "sktime.transformations.tests": [],
    "sktime.transformations.tests.test_all_transformers": [],
    "sktime.transformations.tests.test_base": [],
    "sktime.transformations.tests.test_bkfilter": [],
    "sktime.transformations.tests.test_cffilter": [],
    "sktime.transformations.tests.test_compose": [],
    "sktime.transformations.tests.test_fitintransform": [],
    "sktime.transformations.tests.test_hpfilter": [],
    "sktime.transformations.tests.test_multiplexer": [],
    "sktime.transformations.tests.test_optionalpassthrough": [],
    "sktime.transformations.tests.test_pipeline": [],
    "sktime.transformations.tests.test_transformif": [],
    "sktime.utils": [],
    "sktime.utils._maint": [],
    "sktime.utils._maint._show_versions": [],
    "sktime.utils._maint.tests": [],
    "sktime.utils._maint.tests.test_show_versions": [],
    "sktime.utils._testing": [],
    "sktime.utils._testing._conditional_fixtures": [],
    "sktime.utils._testing.annotation": [],
    "sktime.utils._testing.estimator_checks": [],
    "sktime.utils._testing.forecasting": [],
    "sktime.utils._testing.hierarchical": [],
    "sktime.utils._testing.panel": [],
    "sktime.utils._testing.scenarios": [],
    "sktime.utils._testing.scenarios_aligners": [],
    "sktime.utils._testing.scenarios_classification": [],
    "sktime.utils._testing.scenarios_clustering": [],
    "sktime.utils._testing.scenarios_forecasting": [],
    "sktime.utils._testing.scenarios_getter": [],
    "sktime.utils._testing.scenarios_param_est": [],
    "sktime.utils._testing.scenarios_transformers": [],
    "sktime.utils._testing.scenarios_transformers_pairwise": [],
    "sktime.utils._testing.series": [],
    "sktime.utils._testing.tests": [],
    "sktime.utils._testing.tests.test_check_imports": [],
    "sktime.utils._testing.tests.test_forecasting": [],
    "sktime.utils._testing.tests.test_panel": [],
    "sktime.utils._testing.tests.test_testscenario_getter": [],
    "sktime.utils._testing.tests.test_testscenarios": [],
    "sktime.utils.datetime": [],
    "sktime.utils.deep_equals": [],
    "sktime.utils.deep_equals._deep_equals": [],
    "sktime.utils.deep_equals.tests": [],
    "sktime.utils.deep_equals.tests.test_deep_equals": [],
    "sktime.utils.dependencies": [],
    "sktime.utils.dependencies._dependencies": [],
    "sktime.utils.estimator_checks": [],
    "sktime.utils.estimators": [],
    "sktime.utils.estimators._base": [],
    "sktime.utils.estimators._forecasters": [],
    "sktime.utils.estimators.dispatch": [],
    "sktime.utils.estimators.tests": [],
    "sktime.utils.estimators.tests.test_base": [],
    "sktime.utils.estimators.tests.test_forecasters": [],
    "sktime.utils.git_diff": [],
    "sktime.utils.index": [],
    "sktime.utils.mlflow_sktime": [],
    "sktime.utils.multiindex": [],
    "sktime.utils.numba": [],
    "sktime.utils.numba.general": [],
    "sktime.utils.numba.njit": [],
    "sktime.utils.numba.stats": [],
    "sktime.utils.numba.tests": [],
    "sktime.utils.numba.tests.test_general": [],
    "sktime.utils.pandas": [],
    "sktime.utils.parallel": [],
    "sktime.utils.plotting": [],
    "sktime.utils.profiling": [],
    "sktime.utils.random_state": [],
    "sktime.utils.sampling": [],
    "sktime.utils.seasonality": [],
    "sktime.utils.sklearn": [],
    "sktime.utils.sklearn._adapt_df": [],
    "sktime.utils.sklearn._scitype": [],
    "sktime.utils.sklearn.tests": [],
    "sktime.utils.sklearn.tests.test_sklearn_df_adapt": [],
    "sktime.utils.sklearn.tests.test_sklearn_typing": [],
    "sktime.utils.slope_and_trend": [],
    "sktime.utils.stats": [],
    "sktime.utils.strtobool": [],
    "sktime.utils.tests": [],
    "sktime.utils.tests.test_check_estimator": [],
    "sktime.utils.tests.test_datetime": [],
    "sktime.utils.tests.test_mlflow_sktime_model_export": [],
    "sktime.utils.tests.test_multiindex": [],
    "sktime.utils.tests.test_plotting": [],
    "sktime.utils.tests.test_sampling": [],
    "sktime.utils.tests.test_seasonal": [],
    "sktime.utils.tests.test_utils_time_series": [],
    "sktime.utils.validation": [],
    "sktime.utils.validation.annotation": [],
    "sktime.utils.validation.forecasting": [],
    "sktime.utils.validation.panel": [],
    "sktime.utils.validation.series": [],
    "sktime.utils.validation.tests": [],
    "sktime.utils.validation.tests.test_check_window_length": [],
    "sktime.utils.validation.tests.test_forecasting": [],
    "sktime.utils.validation.tests.test_panel": [],
    "sktime.utils.validation.tests.test_series": [],
    "sktime.utils.warnings": []
  },
  "smmap": {
    "smmap": []
  },
  "sniffio": {
    "sniffio": [],
    "sniffio._impl": [],
    "sniffio._tests": [],
    "sniffio._tests.test_sniffio": [],
    "sniffio._version": []
  },
  "solacc": {
    "solacc.companion": []
  },
  "soupsieve": {
    "soupsieve": [],
    "soupsieve.__meta__": [],
    "soupsieve.css_match": [],
    "soupsieve.css_parser": [],
    "soupsieve.css_types": [],
    "soupsieve.pretty": [],
    "soupsieve.util": []
  },
  "spark-nlp": {
    "com": [],
    "com.johnsnowlabs": [],
    "com.johnsnowlabs.nlp": [],
    "sparknlp": [],
    "sparknlp.annotation": [],
    "sparknlp.annotation_audio": [],
    "sparknlp.annotation_image": [],
    "sparknlp.annotator": [],
    "sparknlp.annotator.audio": [],
    "sparknlp.annotator.audio.hubert_for_ctc": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.audio.wav2vec2_for_ctc": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.audio.whisper_for_ctc": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.chunk2_doc": [],
    "sparknlp.annotator.chunker": [],
    "sparknlp.annotator.classifier_dl": [],
    "sparknlp.annotator.classifier_dl.albert_for_question_answering": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.albert_for_sequence_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.albert_for_token_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.bart_for_zero_shot_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.bert_for_question_answering": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.bert_for_sequence_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.bert_for_token_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.bert_for_zero_shot_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.camembert_for_question_answering": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.camembert_for_sequence_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.camembert_for_token_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.classifier_dl": [],
    "sparknlp.annotator.classifier_dl.deberta_for_question_answering": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.deberta_for_sequence_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.deberta_for_token_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.deberta_for_zero_shot_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.distil_bert_for_question_answering": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.distil_bert_for_sequence_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.distil_bert_for_token_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.distil_bert_for_zero_shot_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.longformer_for_question_answering": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.longformer_for_sequence_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.longformer_for_token_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.mpnet_for_question_answering": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.mpnet_for_sequence_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.multi_classifier_dl": [],
    "sparknlp.annotator.classifier_dl.roberta_for_question_answering": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.roberta_for_sequence_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.roberta_for_token_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.roberta_for_zero_shot_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.sentiment_dl": [],
    "sparknlp.annotator.classifier_dl.tapas_for_question_answering": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.xlm_roberta_for_question_answering": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.xlm_roberta_for_sequence_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.xlm_roberta_for_token_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.xlm_roberta_for_zero_shot_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.xlnet_for_sequence_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.classifier_dl.xlnet_for_token_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.coref": [],
    "sparknlp.annotator.coref.spanbert_coref": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.cv": [],
    "sparknlp.annotator.cv.clip_for_zero_shot_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.cv.convnext_for_image_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.cv.swin_for_image_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.cv.vision_encoder_decoder_for_image_captioning": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.cv.vit_for_image_classification": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.date2_chunk": [],
    "sparknlp.annotator.dependency": [],
    "sparknlp.annotator.dependency.dependency_parser": [],
    "sparknlp.annotator.dependency.typed_dependency_parser": [],
    "sparknlp.annotator.document_character_text_splitter": [],
    "sparknlp.annotator.document_normalizer": [],
    "sparknlp.annotator.document_token_splitter": [],
    "sparknlp.annotator.document_token_splitter_test": [],
    "sparknlp.annotator.embeddings": [],
    "sparknlp.annotator.embeddings.albert_embeddings": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.embeddings.bert_embeddings": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.embeddings.bert_sentence_embeddings": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.embeddings.bge_embeddings": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.embeddings.camembert_embeddings": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.embeddings.chunk_embeddings": [],
    "sparknlp.annotator.embeddings.deberta_embeddings": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.embeddings.distil_bert_embeddings": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.embeddings.doc2vec": [],
    "sparknlp.annotator.embeddings.e5_embeddings": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.embeddings.elmo_embeddings": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.embeddings.instructor_embeddings": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.embeddings.longformer_embeddings": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.embeddings.mpnet_embeddings": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.embeddings.roberta_embeddings": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.embeddings.roberta_sentence_embeddings": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.embeddings.sentence_embeddings": [],
    "sparknlp.annotator.embeddings.uae_embeddings": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.embeddings.universal_sentence_encoder": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.embeddings.word2vec": [],
    "sparknlp.annotator.embeddings.word_embeddings": [],
    "sparknlp.annotator.embeddings.xlm_roberta_embeddings": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.embeddings.xlm_roberta_sentence_embeddings": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.embeddings.xlnet_embeddings": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.er": [],
    "sparknlp.annotator.er.entity_ruler": [],
    "sparknlp.annotator.graph_extraction": [],
    "sparknlp.annotator.keyword_extraction": [],
    "sparknlp.annotator.keyword_extraction.yake_keyword_extraction": [],
    "sparknlp.annotator.ld_dl": [],
    "sparknlp.annotator.ld_dl.language_detector_dl": [],
    "sparknlp.annotator.lemmatizer": [],
    "sparknlp.annotator.matcher": [],
    "sparknlp.annotator.matcher.big_text_matcher": [],
    "sparknlp.annotator.matcher.date_matcher": [],
    "sparknlp.annotator.matcher.multi_date_matcher": [],
    "sparknlp.annotator.matcher.regex_matcher": [],
    "sparknlp.annotator.matcher.text_matcher": [],
    "sparknlp.annotator.n_gram_generator": [],
    "sparknlp.annotator.ner": [],
    "sparknlp.annotator.ner.ner_approach": [],
    "sparknlp.annotator.ner.ner_converter": [],
    "sparknlp.annotator.ner.ner_crf": [],
    "sparknlp.annotator.ner.ner_dl": [],
    "sparknlp.annotator.ner.ner_overwriter": [],
    "sparknlp.annotator.ner.zero_shot_ner_model": [],
    "sparknlp.annotator.normalizer": [],
    "sparknlp.annotator.openai": [],
    "sparknlp.annotator.openai.openai_completion": [],
    "sparknlp.annotator.openai.openai_embeddings": [],
    "sparknlp.annotator.param": [],
    "sparknlp.annotator.param.classifier_encoder": [],
    "sparknlp.annotator.param.evaluation_dl_params": [],
    "sparknlp.annotator.pos": [],
    "sparknlp.annotator.pos.perceptron": [],
    "sparknlp.annotator.sentence": [],
    "sparknlp.annotator.sentence.sentence_detector": [],
    "sparknlp.annotator.sentence.sentence_detector_dl": [],
    "sparknlp.annotator.sentiment": [],
    "sparknlp.annotator.sentiment.sentiment_detector": [],
    "sparknlp.annotator.sentiment.vivekn_sentiment": [],
    "sparknlp.annotator.seq2seq": [],
    "sparknlp.annotator.seq2seq.bart_transformer": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.seq2seq.gpt2_transformer": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.seq2seq.llama2_transformer": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.seq2seq.m2m100_transformer": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.seq2seq.marian_transformer": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.seq2seq.t5_transformer": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.annotator.similarity": [],
    "sparknlp.annotator.similarity.document_similarity_ranker": [],
    "sparknlp.annotator.spell_check": [],
    "sparknlp.annotator.spell_check.context_spell_checker": [],
    "sparknlp.annotator.spell_check.norvig_sweeting": [],
    "sparknlp.annotator.spell_check.symmetric_delete": [],
    "sparknlp.annotator.stemmer": [],
    "sparknlp.annotator.stop_words_cleaner": [],
    "sparknlp.annotator.tf_ner_dl_graph_builder": [],
    "sparknlp.annotator.token": [],
    "sparknlp.annotator.token.chunk_tokenizer": [],
    "sparknlp.annotator.token.recursive_tokenizer": [],
    "sparknlp.annotator.token.regex_tokenizer": [],
    "sparknlp.annotator.token.tokenizer": [],
    "sparknlp.annotator.token2_chunk": [],
    "sparknlp.annotator.ws": [],
    "sparknlp.annotator.ws.word_segmenter": [],
    "sparknlp.base": [],
    "sparknlp.base.audio_assembler": [],
    "sparknlp.base.doc2_chunk": [],
    "sparknlp.base.document_assembler": [],
    "sparknlp.base.embeddings_finisher": [],
    "sparknlp.base.finisher": [],
    "sparknlp.base.graph_finisher": [],
    "sparknlp.base.has_recursive_fit": [],
    "sparknlp.base.has_recursive_transform": [],
    "sparknlp.base.image_assembler": [],
    "sparknlp.base.light_pipeline": [],
    "sparknlp.base.multi_document_assembler": [],
    "sparknlp.base.recursive_pipeline": [],
    "sparknlp.base.table_assembler": [],
    "sparknlp.base.token_assembler": [],
    "sparknlp.common": [],
    "sparknlp.common.annotator_approach": [],
    "sparknlp.common.annotator_model": [],
    "sparknlp.common.annotator_properties": [],
    "sparknlp.common.annotator_type": [],
    "sparknlp.common.coverage_result": [],
    "sparknlp.common.match_strategy": [],
    "sparknlp.common.properties": [],
    "sparknlp.common.read_as": [],
    "sparknlp.common.recursive_annotator_approach": [],
    "sparknlp.common.storage": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.common.utils": [],
    "sparknlp.functions": [],
    "sparknlp.internal": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.internal.annotator_java_ml": [],
    "sparknlp.internal.annotator_transformer": [],
    "sparknlp.internal.extended_java_wrapper": [],
    "sparknlp.internal.params_getters_setters": [],
    "sparknlp.internal.recursive": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.logging": [],
    "sparknlp.logging.comet": [],
    "sparknlp.pretrained": [],
    "sparknlp.pretrained.pretrained_pipeline": [],
    "sparknlp.pretrained.resource_downloader": [],
    "sparknlp.pretrained.utils": [],
    "sparknlp.training": [],
    "sparknlp.training._tf_graph_builders": [],
    "sparknlp.training._tf_graph_builders.graph_builders": [],
    "sparknlp.training._tf_graph_builders.ner_dl": [],
    "sparknlp.training._tf_graph_builders.ner_dl.create_graph": [
      {
        "code": "dbfs-usage",
        "message": "Deprecated file system path: dbfs:/"
      }
    ],
    "sparknlp.training._tf_graph_builders.ner_dl.dataset_encoder": [],
    "sparknlp.training._tf_graph_builders.ner_dl.ner_model": [],
    "sparknlp.training._tf_graph_builders.ner_dl.ner_model_saver": [],
    "sparknlp.training._tf_graph_builders.ner_dl.sentence_grouper": [],
    "sparknlp.training._tf_graph_builders.tf2contrib": [],
    "sparknlp.training._tf_graph_builders.tf2contrib.core_rnn_cell": [],
    "sparknlp.training._tf_graph_builders.tf2contrib.fused_rnn_cell": [],
    "sparknlp.training._tf_graph_builders.tf2contrib.gru_ops": [],
    "sparknlp.training._tf_graph_builders.tf2contrib.lstm_ops": [],
    "sparknlp.training._tf_graph_builders.tf2contrib.rnn": [],
    "sparknlp.training._tf_graph_builders.tf2contrib.rnn_cell": [],
    "sparknlp.training._tf_graph_builders_1x": [],
    "sparknlp.training._tf_graph_builders_1x.graph_builders": [],
    "sparknlp.training._tf_graph_builders_1x.ner_dl": [],
    "sparknlp.training._tf_graph_builders_1x.ner_dl.create_graph": [],
    "sparknlp.training._tf_graph_builders_1x.ner_dl.dataset_encoder": [],
    "sparknlp.training._tf_graph_builders_1x.ner_dl.ner_model": [],
    "sparknlp.training._tf_graph_builders_1x.ner_dl.ner_model_saver": [],
    "sparknlp.training._tf_graph_builders_1x.ner_dl.sentence_grouper": [],
    "sparknlp.training.conll": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sparkContext is not supported on UC Shared Clusters. Rewrite it using spark"
      }
    ],
    "sparknlp.training.conllu": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.training.pos": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.training.pub_tator": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.training.spacy_to_annotation": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "sparknlp.training.tfgraphs": [],
    "sparknlp.upload_to_hub": [],
    "sparknlp.util": []
  },
  "sqlalchemy": {
    "sqlalchemy": []
  },
  "sqlglot": {
    "sqlglot": []
  },
  "sqlparse": {
    "sqlparse": []
  },
  "stack-data": {
    "stack_data": []
  },
  "sympy": {
    "isympy": [],
    "sympy": []
  },
  "tensorboard": {
    "tensorboard": []
  },
  "tensorboard-data-server": {
    "tensorboard_data_server": []
  },
  "tensorflow": {
    "tensorflow": []
  },
  "tensorflow-io-gcs-filesystem": {
    "tensorflow_io_gcs_filesystem": []
  },
  "termcolor": {
    "termcolor": []
  },
  "threadpoolctl": {
    "threadpoolctl": []
  },
  "tokenizers": {
    "tokenizers": []
  },
  "tomli": {
    "tomli": []
  },
  "tomlkit": {
    "tomlkit": []
  },
  "torch": {
    "functorch": [],
    "torch": []
  },
  "tornado": {
    "tornado": []
  },
  "tqdm": {
    "tqdm": []
  },
  "traitlets": {
    "traitlets": []
  },
  "transformers": {
    "transformers": []
  },
  "types-pyyaml": {},
  "types-requests": {},
  "typing_extensions": {
    "typing_extensions": []
  },
  "tzdata": {
    "tzdata": []
  },
  "umap": {
    "umap": [],
    "umap.get": []
  },
  "unicorn": {
    "unicorn": []
  },
  "unidecode": {
    "unidecode": []
  },
  "urllib3": {
    "urllib3": []
  },
  "wandb": {
    "wandb": []
  },
  "waterbear": {
    "waterbear": [],
    "waterbear.test_waterbear": [],
    "waterbear.waterbear": []
  },
  "wcwidth": {
    "wcwidth": []
  },
  "webencodings": {
    "webencodings": []
  },
  "werkzeug": {
    "werkzeug": []
  },
  "wheel": {
    "wheel": []
  },
  "wordcloud": {
    "wordcloud": [],
    "wordcloud._version": [],
    "wordcloud.color_from_image": [],
    "wordcloud.tokenization": [],
    "wordcloud.wordcloud": [],
    "wordcloud.wordcloud_cli": []
  },
  "wrapt": {
    "wrapt": []
  },
  "xgboost": {
    "xgboost": [],
    "xgboost._typing": [],
    "xgboost.callback": [],
    "xgboost.collective": [],
    "xgboost.compat": [],
    "xgboost.config": [],
    "xgboost.core": [],
    "xgboost.dask": [],
    "xgboost.data": [],
    "xgboost.federated": [],
    "xgboost.libpath": [],
    "xgboost.plotting": [],
    "xgboost.rabit": [],
    "xgboost.sklearn": [],
    "xgboost.spark": [],
    "xgboost.spark.core": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sc and getConf are not supported on UC Shared Clusters. Rewrite it using spark.conf"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sparkContext and getConf are not supported on UC Shared Clusters. Rewrite it using spark.conf"
      },
      {
        "code": "legacy-context-in-shared-clusters",
        "message": "sparkContext is not supported on UC Shared Clusters. Rewrite it using spark"
      },
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Rewrite it using DataFrame API"
      },
      {
        "code": "rdd-in-shared-clusters",
        "message": "RDD APIs are not supported on UC Shared Clusters. Use mapInArrow() or Pandas UDFs instead"
      }
    ],
    "xgboost.spark.data": [],
    "xgboost.spark.estimator": [],
    "xgboost.spark.params": [],
    "xgboost.spark.utils": [],
    "xgboost.testing": [],
    "xgboost.testing.dask": [],
    "xgboost.testing.data": [],
    "xgboost.testing.data_iter": [],
    "xgboost.testing.metrics": [],
    "xgboost.testing.params": [],
    "xgboost.testing.ranking": [],
    "xgboost.testing.shared": [],
    "xgboost.testing.updater": [],
    "xgboost.tracker": [],
    "xgboost.training": []
  },
  "xyzservices": {
    "xyzservices": []
  },
  "yapf": {
    "yapf": [],
    "yapf.pyparser": [],
    "yapf.pyparser.pyparser": [],
    "yapf.pyparser.pyparser_utils": [],
    "yapf.pyparser.split_penalty_visitor": [],
    "yapf.pytree": [],
    "yapf.pytree.blank_line_calculator": [],
    "yapf.pytree.comment_splicer": [],
    "yapf.pytree.continuation_splicer": [],
    "yapf.pytree.pytree_unwrapper": [],
    "yapf.pytree.pytree_utils": [],
    "yapf.pytree.pytree_visitor": [],
    "yapf.pytree.split_penalty": [],
    "yapf.pytree.subtype_assigner": [],
    "yapf.yapflib": [],
    "yapf.yapflib.errors": [],
    "yapf.yapflib.file_resources": [],
    "yapf.yapflib.format_decision_state": [],
    "yapf.yapflib.format_token": [],
    "yapf.yapflib.identify_container": [],
    "yapf.yapflib.line_joiner": [],
    "yapf.yapflib.logical_line": [],
    "yapf.yapflib.object_state": [],
    "yapf.yapflib.reformatter": [],
    "yapf.yapflib.split_penalty": [],
    "yapf.yapflib.style": [],
    "yapf.yapflib.subtypes": [],
    "yapf.yapflib.yapf_api": [],
    "yapf_third_party": [],
    "yapf_third_party._ylib2to3": [],
    "yapf_third_party._ylib2to3.fixer_base": [],
    "yapf_third_party._ylib2to3.fixer_util": [],
    "yapf_third_party._ylib2to3.patcomp": [],
    "yapf_third_party._ylib2to3.pgen2": [],
    "yapf_third_party._ylib2to3.pgen2.conv": [],
    "yapf_third_party._ylib2to3.pgen2.driver": [],
    "yapf_third_party._ylib2to3.pgen2.grammar": [],
    "yapf_third_party._ylib2to3.pgen2.literals": [],
    "yapf_third_party._ylib2to3.pgen2.parse": [],
    "yapf_third_party._ylib2to3.pgen2.pgen": [],
    "yapf_third_party._ylib2to3.pgen2.token": [],
    "yapf_third_party._ylib2to3.pgen2.tokenize": [],
    "yapf_third_party._ylib2to3.pygram": [],
    "yapf_third_party._ylib2to3.pytree": [],
    "yapf_third_party.yapf_diff": [],
    "yapf_third_party.yapf_diff.yapf_diff": [],
    "yapftests": [],
    "yapftests.blank_line_calculator_test": [],
    "yapftests.comment_splicer_test": [],
    "yapftests.file_resources_test": [],
    "yapftests.format_decision_state_test": [],
    "yapftests.format_token_test": [],
    "yapftests.line_joiner_test": [],
    "yapftests.logical_line_test": [],
    "yapftests.main_test": [],
    "yapftests.pytree_unwrapper_test": [],
    "yapftests.pytree_utils_test": [],
    "yapftests.pytree_visitor_test": [],
    "yapftests.reformatter_basic_test": [],
    "yapftests.reformatter_buganizer_test": [],
    "yapftests.reformatter_facebook_test": [],
    "yapftests.reformatter_pep8_test": [],
    "yapftests.reformatter_python3_test": [],
    "yapftests.reformatter_style_config_test": [],
    "yapftests.split_penalty_test": [],
    "yapftests.style_test": [],
    "yapftests.subtype_assigner_test": [],
    "yapftests.utils": [],
    "yapftests.yapf_test": [],
    "yapftests.yapf_test_helper": []
  },
  "yarl": {
    "yarl": []
  },
  "yfinance": {
    "yfinance": [],
    "yfinance.base": [],
    "yfinance.cache": [],
    "yfinance.const": [],
    "yfinance.data": [],
    "yfinance.exceptions": [],
    "yfinance.multi": [],
    "yfinance.scrapers": [],
    "yfinance.scrapers.analysis": [],
    "yfinance.scrapers.fundamentals": [],
    "yfinance.scrapers.history": [],
    "yfinance.scrapers.holders": [],
    "yfinance.scrapers.quote": [],
    "yfinance.shared": [],
    "yfinance.ticker": [],
    "yfinance.tickers": [],
    "yfinance.utils": [],
    "yfinance.version": []
  },
  "zingg": {
    "zingg": [],
    "zingg.client": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "zingg.databricks": [
      {
        "code": "dbfs-usage",
        "message": "Deprecated file system path: dbfs:/FileStore/"
      },
      {
        "code": "dbfs-usage",
        "message": "Deprecated file system path: dbfs:/FileStore/jars/zingg_0_4_0.jar"
      },
      {
        "code": "dbfs-usage",
        "message": "Deprecated file system path: dbfs:/FileStore/py/zingg-0.4.0-py2.py3-none-any.whl"
      },
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ],
    "zingg.examples.amazon-google.AmazonGoogle": [],
    "zingg.examples.febrl.FebrlExample": [],
    "zingg.examples.febrl.postgres": [],
    "zingg.phases.assessModel": [],
    "zingg.phases.exportModel": [],
    "zingg.pipes": [
      {
        "code": "jvm-access-in-shared-clusters",
        "message": "Cannot access Spark Driver JVM on UC Shared Clusters"
      }
    ]
  },
  "zipp": {
    "zipp": [],
    "zipp.compat": [],
    "zipp.compat.py310": [],
    "zipp.glob": []
  }
}